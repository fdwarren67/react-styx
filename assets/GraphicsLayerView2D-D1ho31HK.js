import{df as m,dg as c,ab as g,a9 as n,G as l,cb as h,d3 as d,a3 as o,a4 as w,a5 as u}from"./index-5Uv45sI4.js";import{S as y,y as V}from"./LayerView-SH3gyaJp.js";import{t as v}from"./GraphicContainer--nBBxV7E.js";import{A as f}from"./GraphicsView2D-BLNnsu-s.js";import"./Container-U8LexM-O.js";import"./layerViewUtils-B0kOYXog.js";import"./AGraphicContainer-CfrpyX9X.js";import"./TechniqueInstance-D0uiQ9Um.js";import"./UpdateTracking2D-r6w-8RU7.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-BaGJiUPG.js";import"./memoryEstimations-DjQAVVIt.js";import"./GeometryUtils-s3hHCpKg.js";import"./rasterizingUtils-D5qeIAk-.js";import"./floatRGBA-DV28AZMY.js";import"./Rect-CUzevAry.js";import"./Utils-BpNJYV3c.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Dk39BZ5e.js";import"./VertexArrayObject-DxUN4vEu.js";import"./TileContainer-CqHxH8Q3.js";import"./WGLContainer-ClsbWyjY.js";import"./ProgramTemplate-DR4sA5bY.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-B0742vx-.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-9uqthz89.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-BSkvAlgQ.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-H3HMgvoc.js";import"./ShaderBuilder-CPoXfokl.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-iTAW5oVl.js";import"./OverrideHelper-BZUnkwZ3.js";import"./colorUtils-DTSMSziH.js";import"./quantizationUtils-DjygVgdr.js";import"./AttributeStore-D2t7nLYb.js";import"./queryUtils-DnrHBOJE.js";import"./json-Wa8cmqdu.js";import"./timeSupport-D48tvLp_.js";import"./TimeOnly-BBieZGV_.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B1UKnH3i.js";import"./dehydratedFeatures-BmvRfaaI.js";let p=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const a=(t==null?void 0:t.name)??d;return this._addHighlights(e,a),h(()=>!this.destroyed&&this._removeHighlights(e,a))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],p.prototype,"graphicsView",void 0),p=o([u("esri.views.2d.layers.GraphicsLayerView2D")],p);const di=p;export{di as default};
