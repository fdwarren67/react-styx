import{gx as p,gs as S,he as G,go as x,hQ as P,gt as E,gz as T,gR as v,hj as w,hR as C,hS as L,hi as X,hT as j,gT as D,hB as Y,hC as b,gV as q}from"./index-5Uv45sI4.js";import{w as B}from"./OperatorShapePreservingLength-BygkAyx1.js";class V{getOperatorType(){return 10311}supportsCurves(){return!0}accelerateGeometry(t,r,g){return!1}canAccelerateGeometry(t){return!1}execute(t,r,g,s){if(g===4)return new B().execute(t,r,s);if(r.getCoordinateSystemType()===0&&p(""),S(t),t.isEmpty()||t.getDimension()<1)return 0;const o=r.getGCS(),n=G();o.querySpheroidData(n);const c=n.majorSemiAxis,u=n.e2,l=o.getUnit().getUnitToBaseFactor();let e;const a=t.getGeometryType();if(a===x.enumPolygon?e=t.getBoundary():a===x.enumEnvelope?e=P(t):E(a)?(e=new T({vd:t.getDescription()}),e.addSegment(t,!0)):e=t,e.hasNonLinearSegments()&&(e=new v().execute(e,0,r.getTolerance(0),0,s)),o!==r){const i=r.getSRToGCSTransform();if(r.isPannable()){e=w(e,r),a===x.enumPolyline&&e===t&&(e=t.clone());const f=new C;r.getPannableExtent().queryIntervalX(f);for(let h=0,d=e.getPointCount();h<d;h++){const m=e.getXY(h);m.x=L(m.x,f),e.setXY(h,m)}}const y=e.createInstance();e=j(i,e,y,s)?y:new X().execute(e,i,s)}return this._ExecuteMultiPathGeodeticLength(e,g,c,u,l)}_ExecuteMultiPathGeodeticLength(t,r,g,s,o){const n={stack:[],error:void 0,hasError:!1};try{const c=D(n,new Y,!1);let u=0;const l=t.querySegmentIterator();for(;l.nextPath();)for(;l.hasNextSegment();){const e=l.nextSegment(),a=e.getStartXY(),i=e.getEndXY();a.scale(o),i.scale(o),b.geodeticDistance(g,s,a.x,a.y,i.x,i.y,c,null,null,r),u+=c.val}return u}catch(c){n.error=c,n.hasError=!0}finally{q(n)}}}export{V as OperatorGeodeticLength};
