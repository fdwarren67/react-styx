import{da as s,db as n,Q as d,a3 as u,a5 as l}from"./index-5Uv45sI4.js";import{d as g}from"./FeatureLayerView2D-CfEplTLd.js";import"./Container-U8LexM-O.js";import"./featureConversionUtils-9uqthz89.js";import"./OptimizedFeature-BaGJiUPG.js";import"./memoryEstimations-DjQAVVIt.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CweISOl9.js";import"./AttributeBinsFeatureSet-uAJp-9Zg.js";import"./AttributeBinsQuery-BiuNQ2A0.js";import"./queryUtils-DnrHBOJE.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-CDWurxEO.js";import"./LayerView-SH3gyaJp.js";import"./layerViewUtils-B0kOYXog.js";import"./TechniqueInstance-D0uiQ9Um.js";import"./UpdateTracking2D-r6w-8RU7.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-s3hHCpKg.js";import"./rasterizingUtils-D5qeIAk-.js";import"./floatRGBA-DV28AZMY.js";import"./Rect-CUzevAry.js";import"./Utils-BpNJYV3c.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Dk39BZ5e.js";import"./VertexArrayObject-DxUN4vEu.js";import"./TileContainer-CqHxH8Q3.js";import"./WGLContainer-ClsbWyjY.js";import"./ProgramTemplate-DR4sA5bY.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-B0742vx-.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BSkvAlgQ.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-H3HMgvoc.js";import"./ShaderBuilder-CPoXfokl.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-iTAW5oVl.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-DmM2H_ca.js";import"./constants-B4mRqufT.js";import"./parquet-ChiV5wWO.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-wVVu1cg2.js";import"./RefreshableLayerView-BmgW1bGN.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};
