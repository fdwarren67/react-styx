import{e as z,i as p,x as S,n as i,t as w,j as x,S as y}from"./index-5Uv45sI4.js";import{i as b}from"./keyed-Dd7AOvr1.js";import{b as C,j as u}from"./utils4-IIbCIJHB.js";import{v}from"./dom-DJEv2Q-P.js";import"./global-BPDJypNs.js";import"./guid-BDWAkmkV.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */const c={swatch:"swatch",noColorSwatch:"swatch--no-color",checker:"checker"},k={borderLight:"rgba(0, 0, 0, 0.3)",borderDark:"rgba(255, 255, 255, 0.15)"},f=4,r={squareSize:f,size:f*2},P=x`:host{position:relative;display:inline-flex}:host([scale=s]){block-size:1.25rem;inline-size:1.25rem}:host([scale=m]){block-size:1.5rem;inline-size:1.5rem}:host([scale=l]){block-size:2rem;inline-size:2rem}.swatch{overflow:hidden;block-size:inherit;inline-size:inherit}.swatch rect{transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.swatch--no-color rect{fill:var(--calcite-color-foreground-1)}.swatch--no-color line{stroke:var(--calcite-color-status-danger)}.checker{fill:#cacaca}:host([hidden]){display:none}[hidden]{display:none}`,l=class l extends z{constructor(){super(...arguments),this.active=!1,this.scale="m"}load(){this.handleColorChange(this.color)}willUpdate(e){e.has("color")&&this.handleColorChange(this.color)}handleColorChange(e){this.internalColor=e?C(e):null}render(){const e=!this.internalColor,o={[c.swatch]:!0,[c.noColorSwatch]:e};return S`<svg class=${p(o)} xmlns=http://www.w3.org/2000/svg>${this.renderSwatch()}</svg>`}renderSwatch(){const{active:e,el:o,internalColor:s}=this,a=e?"100%":"0",n=v(o)==="light"?k.borderLight:k.borderDark,d=!s,t={height:"100%",rx:a,stroke:n,strokeWidth:"2",width:"100%"};if(d)return w`<clipPath id=shape><rect height=100% rx=${a??i} width=100% /></clipPath>${this.renderSwatchRect({clipPath:`inset(0 round ${a})`,...t})}<line clip-path=url(#shape) stroke-width=3 x1=100% x2=0 y1=0 y2=100% />`;const h=s.alpha(),m=u(s),g=u(s,h<1);return w`<title>${g}</title><defs><pattern height=${r.size} id=checker patternUnits=userSpaceOnUse width=${r.size} x=0 y=0><rect class=${p(c.checker)} height=${r.squareSize} width=${r.squareSize} x=0 y=0 /><rect class=${p(c.checker)} height=${r.squareSize} width=${r.squareSize} x=${r.squareSize} y=${r.squareSize} /></pattern></defs>${this.renderSwatchRect({fill:"url(#checker)",rx:t.rx,height:t.height,width:t.width})}${this.renderSwatchRect({clipPath:h<1?"polygon(100% 0, 0 0, 0 100%)":`inset(0 round ${a})`,fill:m,...t})}${h<1?this.renderSwatchRect({clipPath:"polygon(100% 0, 100% 100%, 0 100%)",fill:g,key:"opacity-fill",...t}):null}`}renderSwatchRect({clipPath:e,fill:o,height:s,key:a,rx:n,stroke:d,strokeWidth:t,width:h}){return b(a,w`<rect clip-path=${e??i} fill=${o??i} height=${s??i} rx=${n??i} stroke=${d??i} stroke-width=${t??i} width=${h??i} />`)}};l.properties={active:7,color:1,scale:3},l.styles=P;let $=l;y("calcite-color-picker-swatch",$);export{$ as ColorPickerSwatch};
