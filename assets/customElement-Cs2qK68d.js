import{e as B,f as T,i as x,x as b,j as K,S as P}from"./index-5Uv45sI4.js";import{n as N}from"./ref-DqiYxcul.js";import{i as R}from"./keyed-Dd7AOvr1.js";import{b as v,Y as u,j as c,C as p,F as m,h as C,A as L,q as w,U as H,O as F,D as A}from"./utils4-IIbCIJHB.js";import{t as j}from"./dom-DJEv2Q-P.js";import{m as z}from"./component-Dxbaltlt.js";import"./global-BPDJypNs.js";import"./guid-BDWAkmkV.js";import"./logger-CuHV5ymd.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */const f={container:"container",hexInput:"hex-input",opacityInput:"opacity-input"},U=K`:host{display:block}.container{display:flex;inline-size:100%;flex-wrap:nowrap;align-items:center}.hex-input{flex-grow:1;text-transform:uppercase}.opacity-input{inline-size:100px;margin-inline-start:-1px}:host([hidden]){display:none}[hidden]{display:none}`,y=v(),I=class I extends B{constructor(){super(...arguments),this.internalColor=y,this.alphaChannel=!1,this.allowEmpty=!1,this.hexLabel="Hex",this.scale="m",this.value=u(c(y,this.alphaChannel),this.alphaChannel,!0),this.calciteColorPickerHexInputChange=T({cancelable:!1})}async setFocus(){return await z(this),j(this.hexInputNode)}connectedCallback(){super.connectedCallback(),this.previousNonNullValue=this.value;const{allowEmpty:t,alphaChannel:n,value:a}=this;if(a){const e=u(a,n);p(e,n)&&this.internalSetValue(e,e,!1);return}t&&this.internalSetValue(void 0,void 0,!1)}willUpdate(t){t.has("value")&&(this.hasUpdated||this.value!==u(c(y,this.alphaChannel),this.alphaChannel,!0))&&this.internalSetValue(this.value,t.get("value"),!1)}onHexInputBlur(){const t=this.hexInputNode,n=t.value,a=`#${n}`,{allowEmpty:e,internalColor:i}=this,s=e&&!n,l=m(a);(C(a,!0)||C(a,!1))&&this.onHexInputChange(),!(s||p(a)&&l)&&(t.value=e&&!i?"":this.formatHexForInternalInput(L(i.object())))}onOpacityInputBlur(){const t=this.opacityInputNode,n=t.value,{allowEmpty:a,internalColor:e}=this;a&&!n||(t.value=a&&!e?"":this.formatOpacityForInternalInput(e))}onOpacityInputInput(){this.onOpacityInputChange()}onHexInputChange(){let t=this.hexInputNode.value;if(t){const n=u(t,!1);if(p(n)&&this.alphaChannel&&this.internalColor){const a=u(this.internalColor.hexa(),!0).slice(-2);t=`${n+a}`}}this.internalSetValue(t,this.value)}onOpacityInputChange(){var a;const t=this.opacityInputNode;let n;if(!t.value)n=t.value;else{const e=w(Number(t.value));n=(a=this.internalColor)==null?void 0:a.alpha(e).hexa()}this.internalSetValue(n,this.value)}onInputFocus(t){t.type==="calciteInternalInputTextFocus"?this.hexInputNode.selectText():this.opacityInputNode.selectText()}onHexInputInput(){const t=`#${this.hexInputNode.value}`,n=this.value;p(t,this.alphaChannel)&&m(t,this.alphaChannel)&&this.internalSetValue(t,n)}onInputKeyDown(t){const{altKey:n,ctrlKey:a,metaKey:e,shiftKey:i}=t,{alphaChannel:s,hexInputNode:l,internalColor:h,value:r}=this,{key:o}=t,$=t.composedPath();if(o==="Tab"&&C(r,this.alphaChannel)||o==="Enter"){$.includes(l)?this.onHexInputChange():this.onOpacityInputChange(),o==="Enter"&&t.preventDefault();return}const S=o==="ArrowDown"||o==="ArrowUp",g=this.value;if(S){if(!r){this.internalSetValue(this.previousNonNullValue,g),t.preventDefault();return}const k=o==="ArrowUp"?1:-1,E=i?10:1;this.internalSetValue(c(this.nudgeRGBChannels(h,E*k,$.includes(l)?"rgb":"a"),s),g),t.preventDefault();return}const O=n||a||e,V=o.length===1,D=A.test(o);V&&!O&&!D&&t.preventDefault()}onHexInputPaste(t){const n=t.clipboardData.getData("text");p(n,this.alphaChannel)&&m(n,this.alphaChannel)&&(t.preventDefault(),this.hexInputNode.value=n.slice(1),this.internalSetValue(n,this.value))}internalSetValue(t,n,a=!0){if(t){const{alphaChannel:e}=this,i=u(t,e,e);if(p(i,e)){const{internalColor:s}=this,l=v(i),h=u(c(l,e),e),r=!s||h!==u(c(s,e),e);this.internalColor=l,this.previousNonNullValue=h,this.value=h,r&&a&&this.calciteColorPickerHexInputChange.emit();return}}else if(this.allowEmpty){this.internalColor=void 0,this.value=void 0,a&&this.calciteColorPickerHexInputChange.emit();return}this.value=n}storeHexInputRef(t){this.hexInputNode=t}storeOpacityInputRef(t){this.opacityInputNode=t}formatHexForInternalInput(t){return t?t.replace("#","").slice(0,6):""}formatOpacityForInternalInput(t){return t?`${H(t.alpha())}`:""}nudgeRGBChannels(t,n,a){let e;const i=t.array(),s=i.slice(0,3);if(a==="rgb")e=[...s.map(l=>l+n),this.alphaChannel?i[3]:void 0];else{const l=w(H(t.alpha())+n);e=[...s,l]}return v(e)}render(){const{alphaChannel:t,hexLabel:n,internalColor:a,messages:e,scale:i,value:s}=this,l=this.formatHexForInternalInput(s),h=this.formatOpacityForInternalInput(a),r=i==="l"?"m":"s";return b`<div class=${x(f.container)}><calcite-input-text class=${x(f.hexInput)} .label=${(e==null?void 0:e.hex)||n} .maxLength=${this.alphaChannel?8:6} @keydown=${this.onInputKeyDown} @paste=${this.onHexInputPaste} @calciteInputTextChange=${this.onHexInputChange} @calciteInputTextInput=${this.onHexInputInput} @calciteInternalInputTextBlur=${this.onHexInputBlur} @calciteInternalInputTextFocus=${this.onInputFocus} prefix-text=# .scale=${r} .value=${l} ${N(this.storeHexInputRef)}></calcite-input-text>${t?R("opacity-input",b`<calcite-input-number class=${x(f.opacityInput)} .label=${e==null?void 0:e.opacity} .max=${F.max} max-length=3 .min=${F.min} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.onInputKeyDown} @calciteInputNumberInput=${this.onOpacityInputInput} @calciteInternalInputNumberBlur=${this.onOpacityInputBlur} @calciteInternalInputNumberFocus=${this.onInputFocus} .scale=${r} suffix-text=% .value=${h} ${N(this.storeOpacityInputRef)}></calcite-input-number>`):null}</div>`}};I.properties={internalColor:16,alphaChannel:5,allowEmpty:5,hexLabel:1,messages:0,numberingSystem:1,scale:3,value:3},I.styles=U;let d=I;P("calcite-color-picker-hex-input",d);export{d as ColorPickerHexInput};
