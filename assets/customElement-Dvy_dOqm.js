import{e as I,f as v,i as g,x as p,j as P,S}from"./index-5Uv45sI4.js";import{n as C}from"./ref-DqiYxcul.js";import{i as O}from"./keyed-Dd7AOvr1.js";import{p as f,m as $,v as d,_ as b,L as z,N as A}from"./date-vPLQ79tU.js";import"./locale-s9NCZ3Zl.js";import"./key-ak3_eHKH.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */const o={calendar:"calendar",calendarContainer:"calendar-container",calendarStart:"calendar--start",currentDay:"current-day",dayContainer:"day-container",insideRangeHover:"inside-range--hover",month:"month",noncurrent:"noncurrent",outsideRangeHover:"outside-range--hover",weekDays:"week-days",weekHeader:"week-header",weekHeaderContainer:"week-header-container"},E=P`:host([hidden]){display:none}[hidden]{display:none}.calendar-container{display:flex;inline-size:100%}:host([range][layout=vertical]) .calendar-container{flex-direction:column}.calendar{inline-size:100%}.week-header-container{display:flex;block-size:16px;padding-inline:var(--calcite-spacing-sm);padding-block:var(--calcite-spacing-md)}.week-header{display:flex;align-items:center;justify-content:center;text-align:center;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-bold);inline-size:14.2857142857%;color:var(--calcite-date-picker-week-header-text-color, var(--calcite-color-text-3))}.day-container{display:flex;inline-size:100%;min-inline-size:0px;justify-content:center}.day-container calcite-date-picker-day{inline-size:100%}.week-days{display:grid;grid-template-columns:repeat(7,1fr);grid-auto-rows:1fr;padding-inline:var(--calcite-spacing-sm);padding-block-end:var(--calcite-spacing-sm)}.month-header{display:flex;inline-size:100%;justify-content:space-between}.month{display:flex;inline-size:100%;flex-direction:column;justify-content:space-between}.day{font-size:var(--calcite-font-size)}:host([scale=s]) .week-days{padding-inline:var(--calcite-spacing-xs);padding-block-end:var(--calcite-spacing-xs)}:host([scale=s]) .week-header-container{padding-inline:var(--calcite-spacing-xs);padding-block:var(--calcite-spacing-sm)}:host([scale=s]) .day{font-size:var(--calcite-font-size-sm)}:host([scale=l]) .week-header{font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=l]) .week-days{padding-inline:var(--calcite-spacing-md);padding-block-end:var(--calcite-spacing-md)}:host([scale=l]) .week-header-container{padding-inline:var(--calcite-spacing-md);padding-block:var(--calcite-spacing-md-plus)}:host([scale=l]) .day{font-size:var(--calcite-font-size-md)}.calendar--start{border-width:0px;border-style:solid;border-color:var(--calcite-date-picker-range-calendar-divider-color, var(--calcite-color-border-1))}:host([range][layout=horizontal]) .calendar--start{border-inline-end-width:var(--calcite-border-width-sm)}:host([range][layout=vertical]) .calendar--start{border-block-end-width:var(--calcite-border-width-sm)}.noncurrent{pointer-events:none;opacity:0}`,m=7,k=6,y=class y extends I{constructor(){super(),this.activeDate=new Date,this.range=!1,this.calciteInternalDatePickerDayHover=v({cancelable:!1}),this.calciteInternalDatePickerDaySelect=v({cancelable:!1}),this.calciteInternalDatePickerMonthActiveDateChange=v({cancelable:!1}),this.calciteInternalDatePickerMonthChange=v({cancelable:!1}),this.calciteInternalDatePickerMonthMouseOut=v({cancelable:!1}),this.listen("pointerout",this.pointerOutHandler),this.listen("focusout",this.disableActiveFocus)}load(){this.focusedDate=this.selectedDate||this.activeDate}willUpdate(e){e.has("activeDate")&&this.updateFocusedDateWithActive(this.activeDate),e.has("selectedDate")&&(this.focusedDate=this.selectedDate)}updateFocusedDateWithActive(e){this.selectedDate||(this.focusedDate=$(e,this.min,this.max)?e:f(e,this.min,this.max))}keyDownHandler(e){if(e.defaultPrevented)return;const a=this.el.dir==="rtl",t=e.target.value;switch(e.key){case"ArrowUp":e.preventDefault(),this.addDays(-7,t);break;case"ArrowRight":e.preventDefault(),this.addDays(a?-1:1,t);break;case"ArrowDown":e.preventDefault(),this.addDays(7,t);break;case"ArrowLeft":e.preventDefault(),this.addDays(a?1:-1,t);break;case"PageUp":e.preventDefault(),this.addMonths(-1,t);break;case"PageDown":e.preventDefault(),this.addMonths(1,t);break;case"Home":e.preventDefault(),this.activeDate.setDate(1),this.addDays(0,t);break;case"End":e.preventDefault(),this.activeDate.setDate(new Date(this.activeDate.getFullYear(),this.activeDate.getMonth()+1,0).getDate()),this.addDays(0,t);break;case"Enter":case" ":e.preventDefault();break;case"Tab":this.activeFocus=!1}}disableActiveFocus(){this.activeFocus=!1}pointerOutHandler(){this.calciteInternalDatePickerMonthMouseOut.emit()}addMonths(e,a){const t=new Date(a);t.setMonth(a.getMonth()+e),this.calciteInternalDatePickerMonthActiveDateChange.emit(f(t,this.min,this.max)),this.focusedDate=f(t,this.min,this.max),this.activeFocus=!0,this.calciteInternalDatePickerDayHover.emit(t)}addDays(e=0,a){const t=new Date(a);t.setDate(a.getDate()+e),this.calciteInternalDatePickerMonthActiveDateChange.emit(f(t,this.min,this.max)),this.focusedDate=f(t,this.min,this.max),this.activeFocus=!0,this.calciteInternalDatePickerDayHover.emit(t)}getPreviousMonthDays(e,a,t){const i=new Date(a,e,0),s=i.getDate(),n=i.getDay(),r=[];if(n===(t+k)%m)return r;if(n===t)return[s];for(let c=(m+n-t)%m;c>=0;c--)r.push(s-c);return r}getCurrentMonthDays(e,a){const t=new Date(a,e+1,0).getDate(),i=[];for(let s=0;s<t;s++)i.push(s+1);return i}getNextMonthDays(e,a,t){const i=new Date(a,e+1,0).getDay(),s=[];if(i===(t+k)%m)return s;for(let n=0;n<(k-(i-t))%m;n++)s.push(n+1);return s}betweenSelectedRange(e){return!!(this.startDate&&this.endDate&&e>this.startDate&&e<this.endDate&&!this.isRangeHover(e))}isSelected(e){return!!(d(e,this.selectedDate)||this.startDate&&d(e,this.startDate)||this.endDate&&d(e,this.endDate))}isStartOfRange(e){return!!(this.startDate&&!d(this.startDate,this.endDate)&&d(this.startDate,e)&&!this.isEndOfRange(e))}isEndOfRange(e){return!!(this.endDate&&!d(this.startDate,this.endDate)&&d(this.endDate,e)||!this.endDate&&this.hoverRange&&d(this.startDate,this.hoverRange.end)&&d(e,this.hoverRange.end))}dayHover(e){const a=e.target;a.disabled?this.calciteInternalDatePickerMonthMouseOut.emit():this.calciteInternalDatePickerDayHover.emit(a.value),e.stopPropagation()}daySelect(e){const a=e.target;this.activeFocus=!1,this.calciteInternalDatePickerDaySelect.emit(a.value),e.stopPropagation()}isFocusedOnStart(){var e;return((e=this.hoverRange)==null?void 0:e.focused)==="start"}isHoverInRange(){if(!this.hoverRange||!this.startDate)return!1;const{start:e,end:a}=this.hoverRange,t=this.isFocusedOnStart(),i=this.startDate&&a>this.startDate,s=this.endDate&&a<this.endDate,n=this.startDate&&e>this.startDate,r=this.endDate&&e<this.endDate,c=!t&&this.startDate&&i&&(!this.endDate||s),l=t&&this.startDate&&n&&r;return c||l}isRangeHover(e){if(!this.hoverRange)return!1;const{start:a,end:t}=this.hoverRange,i=this.isFocusedOnStart(),s=this.isHoverInRange(),n=e>a&&e<this.startDate,r=e<t&&e>this.endDate,c=e>t&&e<this.endDate,l=e<a&&e>this.startDate,h=e<t&&e>this.startDate,D=e>a&&e<this.endDate,u=this.startDate&&this.endDate;if(s){if(u)return i?e<this.endDate&&(l||n):c||r;if(this.startDate&&!this.endDate)return i?n:h;if(!this.startDate&&this.endDate)return i?D:r}else if(u)return i?n:r}getDays(e,a,t,i="start"){let s=this.activeDate.getMonth();const n=s+1;s=i==="end"?n:s;let r=0;const c=()=>r++%7,l=this.activeDate.getFullYear();return[...e.map(h=>({active:!1,day:h,dayInWeek:c(),date:new Date(l,s-1,h)})),...a.map(h=>{const D=new Date(l,s,h),u=d(D,new Date);return{active:this.focusedDate&&this.focusedDate!==this.startDate&&this.focusedDate!==this.endDate?d(D,this.focusedDate):d(D,this.startDate)||d(D,this.endDate),currentMonth:!0,currentDay:u,day:h,dayInWeek:c(),date:D,ref:!0}}),...t.map(h=>({active:!1,day:h,dayInWeek:c(),date:new Date(l,n,h)}))]}monthHeaderSelectChange(e){const a=new Date(e.detail),t=e.target;this.updateFocusableDate(a),e.stopPropagation(),this.calciteInternalDatePickerMonthChange.emit({date:a,position:t.position})}updateFocusableDate(e){!this.selectedDate||!this.range?this.focusedDate=this.getFirstValidDateOfMonth(e):this.selectedDate&&this.range&&(!b(this.startDate,e)||!b(this.endDate,e))&&(this.focusedDate=this.getFirstValidDateOfMonth(e))}getFirstValidDateOfMonth(e){return e.getDate()===1?e:z(e,this.min,this.max)}render(){const e=this.activeDate.getMonth(),a=this.activeDate.getFullYear(),t=this.localeData.weekStart%7,{abbreviated:i,short:s,narrow:n}=this.localeData.days,r=this.scale==="s"?n||s||i:s||i||n,c=[...r.slice(t,7),...r.slice(0,t)],l=this.getCurrentMonthDays(e,a),h=this.getPreviousMonthDays(e,a,t),D=this.getNextMonthDays(e,a,t),u=e+1,M=this.getPreviousMonthDays(u,a,t),x=this.getCurrentMonthDays(u,a),H=this.getNextMonthDays(u,a,t),R=this.getDays(h,l,D),F=this.getDays(M,x,H,"end");return p`<div class=${g({[o.calendarContainer]:!0})} role=grid>${this.renderCalendar(c,R)}${this.range&&this.renderCalendar(c,F,!0)||""}</div>`}renderDateDay({active:e,currentMonth:a,currentDay:t,date:i,day:s,dayInWeek:n,ref:r},c){const l=$(i,this.min,this.max);return O(c,p`<div class=${g({[o.dayContainer]:!0})} role=gridcell><calcite-date-picker-day .active=${e} class=${g({[o.currentDay]:t,[o.insideRangeHover]:this.isHoverInRange(),[o.outsideRangeHover]:!this.isHoverInRange(),[o.noncurrent]:this.range&&!a})} .currentMonth=${a} .dateTimeFormat=${this.dateTimeFormat} .day=${s} .disabled=${!l} .endOfRange=${this.isEndOfRange(i)} .highlighted=${this.betweenSelectedRange(i)} @calciteInternalDayHover=${this.dayHover} @calciteInternalDaySelect=${this.daySelect} .range=${!!this.startDate&&!!this.endDate&&!d(this.startDate,this.endDate)} .rangeEdge=${n===0?"start":n===6?"end":void 0} .rangeHover=${l&&this.isRangeHover(i)} .scale=${this.scale} .selected=${this.isSelected(i)} .startOfRange=${this.isStartOfRange(i)} .value=${i} ${C(h=>{r&&e&&this.activeFocus&&(h==null||h.setFocus())})}></calcite-date-picker-day></div>`)}renderCalendar(e,a,t=!1){return p`<div class=${g({[o.calendar]:!0,[o.calendarStart]:!t})}><calcite-date-picker-month-header .activeDate=${t?A(this.activeDate):this.activeDate} data-test-calendar=${t?"end":"start"} .headingLevel=${this.headingLevel} .localeData=${this.localeData} .max=${this.max} .messages=${this.messages} .min=${this.min} .monthStyle=${this.monthStyle} @calciteInternalDatePickerMonthHeaderSelectChange=${this.monthHeaderSelectChange} .position=${t?"end":this.range?"start":null} .scale=${this.scale} .selectedDate=${this.selectedDate}></calcite-date-picker-month-header>${this.renderMonthCalendar(e,a,t)}</div>`}renderMonthCalendar(e,a,t=!1){return p`<div class=${g({[o.month]:!0})} @keydown=${this.keyDownHandler}><div class=${g({[o.weekHeaderContainer]:!0})} role=row>${e.map(i=>p`<span class=${g({[o.weekHeader]:!0})} role=columnheader>${i}</span>`)}</div><div class=${g({[o.weekDays]:!0})} role=row>${a.map((i,s)=>this.renderDateDay(i,t?50+s:s))}</div></div>`}};y.properties={focusedDate:16,activeDate:0,dateTimeFormat:0,endDate:0,headingLevel:11,hoverRange:0,layout:3,localeData:0,max:0,messages:0,min:0,monthStyle:1,range:7,scale:3,selectedDate:0,startDate:0},y.styles=E;let w=y;S("calcite-date-picker-month",w);export{w as DatePickerMonth};
