import{a as s}from"./quantityUtils-BK7XlIag.js";import{iL as o,am as u,ak as m,X as c,kR as l,kS as y,iN as R}from"./index-5Uv45sI4.js";import{geodesicLength as f}from"./geometryEngine-DFziBP7z.js";function b(e){return o(e)||u(e)}function p(e,n,r,...i){return o(e)?n.apply(void 0,i):u(e)?r.apply(void 0,i):null}function j(e){const{spatialReference:n}=e;return p(n,k,x,e)}function q(e,n){if(!m(e.spatialReference,n.spatialReference))return null;const{spatialReference:r}=e;return t[0]=e.x,t[1]=e.y,t[2]=e.hasZ?e.z:0,a[0]=n.x,a[1]=n.y,a[2]=n.hasZ?n.z:0,d(t,a,r)}function d(e,n,r){return p(r,h,g,e,n,r)}function h(e,n,r){return s(l(v,e,n,r).distance,"meters")}function g(e,n,r){return s(f($(e,n,r),"meters"),"meters")}function k(e){return s(R([e],"meters")[0],"meters")}function x(e){return s(f(e,"meters"),"meters")}function $(e,n,r){return{type:"polyline",spatialReference:r,paths:[[[...e],[...n]]]}}const v=new y,t=c(),a=c();export{b as e,q as f,j as m,p as r,d as u};
