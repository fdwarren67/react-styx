import{cl as z,cm as O,a_ as A,d$ as C,c2 as G,A as R,e0 as Y,e1 as v,e2 as D,s as E,e3 as S}from"./index-5Uv45sI4.js";import{j as V}from"./quantizationUtils-DjygVgdr.js";import{$ as _}from"./utils-BpTzWUfO.js";import{m as j,B as L}from"./utils-KyhmT9ei.js";let f=null;const P=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function X(e,t,n,i){const r=C(n)?G(n):null,s=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(a=>{const l=new R(a.geometry);return V(t,l,l),a.geometry=r?k(l,s??0,i[0]):l,a})}function ee(e,t=18,n,i,r){const s=new Float64Array(i*r);t=Math.round(S(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const F=Y(n);for(const{geometry:p,attributes:N}of e){const{x:$,y:c}=p,g=Math.max(0,$-t),b=Math.max(0,c-t),M=Math.min(r,c+t),w=Math.min(i,$+t),h=+F(N);for(let m=b;m<M;m++)for(let d=g;d<w;d++){const x=m*i+d,I=D(d-$,m-c,t)*h,u=s[x]+=I;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function q(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:s}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(s||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:s,fieldDelimiter:a,fieldInfos:l,timeZone:F}=e,p=i&&(l==null?void 0:l.find(u=>u.name.toLowerCase()===i.toLowerCase())),N=!!p&&z(p),$=!!p&&_(p),c=e.valueExpression,g=e.normalizationType,b=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await O();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new A(h.spatialReference)}):null}const x=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const y=u.attributes;let o;if(c){const T=I?{...u,layer:I}:u,U=f.createExecContext(T,d,F);o=f.executeFunction(m,U)}else y&&(o=y[i],r?(o=`${j(o)}${a}${j(y[r])}`,s&&(o=`${o}${a}${j(y[s])}`)):typeof o=="string"&&n&&($?o=o?new Date(o).getTime():null:N&&(o=o?q(o):null)));if(g&&typeof o=="number"&&isFinite(o)){const T=y&&parseFloat(y[b]);o=L(o,g,T,M)}w.push(o)}),w}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let s="";return s=i&&r?B(i,r):i||r,s?"("+s+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function oe(e,t,n){const i=Z({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=H({layer:e,fields:t});return r.length?new E(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Z(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function H(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ne as F,q as I,re as M,ie as N,oe as T,B as U,te as b,ee as w,X as x};
