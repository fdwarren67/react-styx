import {
  A
} from "./chunk-B7E2AREE.js";
import {
  PartType,
  _$LH,
  isCompiledTemplateResult,
  isPrimitive,
  isSingleExpression,
  isTemplateResult,
  makeDefineCustomElements,
  noChange,
  render
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/lit-html/development/private-ssr-support.js
var resolveMethodName = null;
var _$LH2 = {
  boundAttributeSuffix: _$LH._boundAttributeSuffix,
  marker: _$LH._marker,
  markerMatch: _$LH._markerMatch,
  HTML_RESULT: _$LH._HTML_RESULT,
  getTemplateHtml: _$LH._getTemplateHtml,
  overrideDirectiveResolve: (directiveClass, resolveOverrideFn) => class extends directiveClass {
    _$resolve(_part, values) {
      return resolveOverrideFn(this, values);
    }
  },
  patchDirectiveResolve: (directiveClass, resolveOverrideFn) => {
    if (directiveClass.prototype._$resolve !== resolveOverrideFn) {
      resolveMethodName ?? (resolveMethodName = directiveClass.prototype._$resolve.name);
      for (let proto = directiveClass.prototype; proto !== Object.prototype; proto = Object.getPrototypeOf(proto)) {
        if (proto.hasOwnProperty(resolveMethodName)) {
          proto[resolveMethodName] = resolveOverrideFn;
          return;
        }
      }
      throw new Error(`Internal error: It is possible that both dev mode and production mode Lit was mixed together during SSR. Please comment on the issue: https://github.com/lit/lit/issues/4527`);
    }
  },
  setDirectiveClass(value, directiveClass) {
    value["_$litDirective$"] = directiveClass;
  },
  getAttributePartCommittedValue: (part, value, index) => {
    let committedValue = noChange;
    part._commitValue = (value2) => committedValue = value2;
    part._$setValue(value, part, index);
    return committedValue;
  },
  connectedDisconnectable: (props) => ({
    ...props,
    _$isConnected: true
  }),
  resolveDirective: _$LH._resolveDirective,
  AttributePart: _$LH._AttributePart,
  PropertyPart: _$LH._PropertyPart,
  BooleanAttributePart: _$LH._BooleanAttributePart,
  EventPart: _$LH._EventPart,
  ElementPart: _$LH._ElementPart,
  TemplateInstance: _$LH._TemplateInstance,
  isIterable: _$LH._isIterable,
  ChildPart: _$LH._ChildPart
};

// node_modules/@lit-labs/ssr-client/development/lib/hydrate-lit-html.js
var NODE_MODE = false;
var { TemplateInstance, isIterable, resolveDirective, ChildPart, ElementPart } = _$LH2;
var hydrate = (rootValue, container, options = {}) => {
  if (container["_$litPart$"] !== void 0) {
    throw new Error("container already contains a live render");
  }
  let rootPart = void 0;
  let rootPartMarker = void 0;
  let currentChildPart = void 0;
  const stack = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_COMMENT);
  let marker;
  while ((marker = walker.nextNode()) !== null) {
    const markerText = marker.data;
    if (markerText.startsWith("lit-part")) {
      if (stack.length === 0 && rootPart !== void 0) {
        throw new Error(`There must be only one root part per container. Found a part marker (${marker}) when we already have a root part marker (${rootPartMarker})`);
      }
      currentChildPart = openChildPart(rootValue, marker, stack, options);
      if (rootPart === void 0) {
        rootPart = currentChildPart;
      }
      rootPartMarker ?? (rootPartMarker = marker);
    } else if (markerText.startsWith("lit-node")) {
      createAttributeParts(marker, stack, options);
    } else if (markerText.startsWith("/lit-part")) {
      if (stack.length === 1 && currentChildPart !== rootPart) {
        throw new Error("internal error");
      }
      currentChildPart = closeChildPart(marker, currentChildPart, stack);
    }
  }
  if (rootPart === void 0) {
    const elementMessage = container instanceof ShadowRoot ? `{container.host.localName}'s shadow root` : container instanceof DocumentFragment ? "DocumentFragment" : container.localName;
    console.error(`There should be exactly one root part in a render container, but we didn't find any in ${elementMessage}.`);
  }
  container["_$litPart$"] = rootPart;
};
var openChildPart = (rootValue, marker, stack, options) => {
  let value;
  let part;
  if (stack.length === 0) {
    part = new ChildPart(marker, null, void 0, options);
    value = rootValue;
  } else {
    const state = stack[stack.length - 1];
    if (state.type === "template-instance") {
      part = new ChildPart(marker, null, state.instance, options);
      state.instance._$parts.push(part);
      value = state.result.values[state.instancePartIndex++];
      state.templatePartIndex++;
    } else if (state.type === "iterable") {
      part = new ChildPart(marker, null, state.part, options);
      const result = state.iterator.next();
      if (result.done) {
        value = void 0;
        state.done = true;
        throw new Error("Unhandled shorter than expected iterable");
      } else {
        value = result.value;
      }
      state.part._$committedValue.push(part);
    } else {
      part = new ChildPart(marker, null, state.part, options);
    }
  }
  value = resolveDirective(part, value);
  if (value === noChange) {
    stack.push({ part, type: "leaf" });
  } else if (isPrimitive(value)) {
    stack.push({ part, type: "leaf" });
    part._$committedValue = value;
  } else if (isTemplateResult(value)) {
    if (isCompiledTemplateResult(value)) {
      throw new Error("compiled templates are not supported");
    }
    const markerWithDigest = `lit-part ${digestForTemplateResult(value)}`;
    if (marker.data === markerWithDigest) {
      const template = ChildPart.prototype._$getTemplate(value);
      const instance = new TemplateInstance(template, part);
      stack.push({
        type: "template-instance",
        instance,
        part,
        templatePartIndex: 0,
        instancePartIndex: 0,
        result: value
      });
      part._$committedValue = instance;
    } else {
      throw new Error("Hydration value mismatch: Unexpected TemplateResult rendered to part");
    }
  } else if (isIterable(value)) {
    stack.push({
      part,
      type: "iterable",
      value,
      iterator: value[Symbol.iterator](),
      done: false
    });
    part._$committedValue = [];
  } else {
    stack.push({ part, type: "leaf" });
    part._$committedValue = value == null ? "" : value;
  }
  return part;
};
var closeChildPart = (marker, part, stack) => {
  if (part === void 0) {
    throw new Error("unbalanced part marker");
  }
  part._$endNode = marker;
  const currentState = stack.pop();
  if (currentState.type === "iterable") {
    if (!currentState.iterator.next().done) {
      throw new Error("unexpected longer than expected iterable");
    }
  }
  if (stack.length > 0) {
    const state = stack[stack.length - 1];
    return state.part;
  } else {
    return void 0;
  }
};
var createAttributeParts = (comment, stack, options) => {
  const match = /lit-node (\d+)/.exec(comment.data);
  const nodeIndex = parseInt(match[1]);
  const node = comment.nextElementSibling;
  if (node === null) {
    throw new Error("could not find node for attribute parts");
  }
  node.removeAttribute("defer-hydration");
  const state = stack[stack.length - 1];
  if (state.type === "template-instance") {
    const instance = state.instance;
    while (true) {
      const templatePart = instance._$template.parts[state.templatePartIndex];
      if (templatePart === void 0 || templatePart.type !== PartType.ATTRIBUTE && templatePart.type !== PartType.ELEMENT || templatePart.index !== nodeIndex) {
        break;
      }
      if (templatePart.type === PartType.ATTRIBUTE) {
        const instancePart = new templatePart.ctor(node, templatePart.name, templatePart.strings, state.instance, options);
        const value = isSingleExpression(instancePart) ? state.result.values[state.instancePartIndex] : state.result.values;
        const noCommit = !(instancePart.type === PartType.EVENT || instancePart.type === PartType.PROPERTY);
        instancePart._$setValue(value, instancePart, state.instancePartIndex, noCommit);
        state.instancePartIndex += templatePart.strings.length - 1;
        instance._$parts.push(instancePart);
      } else {
        const instancePart = new ElementPart(node, state.instance, options);
        resolveDirective(instancePart, state.result.values[state.instancePartIndex++]);
        instance._$parts.push(instancePart);
      }
      state.templatePartIndex++;
    }
  } else {
    throw new Error(`Hydration value mismatch: Primitive found where TemplateResult expected. This usually occurs due to conditional rendering that resulted in a different value or template being rendered between the server and client.`);
  }
};
var digestSize = 2;
var digestForTemplateResult = (templateResult) => {
  const hashes = new Uint32Array(digestSize).fill(5381);
  for (const s of templateResult.strings) {
    for (let i = 0; i < s.length; i++) {
      hashes[i % digestSize] = hashes[i % digestSize] * 33 ^ s.charCodeAt(i);
    }
  }
  const str = String.fromCharCode(...new Uint8Array(hashes.buffer));
  return NODE_MODE ? Buffer.from(str, "binary").toString("base64") : btoa(str);
};

// node_modules/@lit-labs/ssr-client/development/lit-element-hydrate-support.js
var HYDRATE_INTERNALS_ATTR_PREFIX = "hydrate-internals-";
globalThis.litElementHydrateSupport = ({ LitElement }) => {
  const observedAttributes = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(LitElement), "observedAttributes").get;
  Object.defineProperty(LitElement, "observedAttributes", {
    get() {
      return [...observedAttributes.call(this), "defer-hydration"];
    }
  });
  const attributeChangedCallback = LitElement.prototype.attributeChangedCallback;
  LitElement.prototype.attributeChangedCallback = function(name, old, value) {
    if (name === "defer-hydration" && value === null) {
      connectedCallback.call(this);
    }
    attributeChangedCallback.call(this, name, old, value);
  };
  const connectedCallback = LitElement.prototype.connectedCallback;
  LitElement.prototype.connectedCallback = function() {
    if (!this.hasAttribute("defer-hydration")) {
      connectedCallback.call(this);
    }
  };
  const createRenderRoot = LitElement.prototype.createRenderRoot;
  LitElement.prototype.createRenderRoot = function() {
    if (this.shadowRoot) {
      this._$needsHydration = true;
      return this.shadowRoot;
    } else {
      return createRenderRoot.call(this);
    }
  };
  const update = Object.getPrototypeOf(LitElement.prototype).update;
  LitElement.prototype.update = function(changedProperties) {
    const value = this.render();
    update.call(this, changedProperties);
    if (this._$needsHydration) {
      this._$needsHydration = false;
      for (let i = 0; i < this.attributes.length; i++) {
        const attr = this.attributes[i];
        if (attr.name.startsWith(HYDRATE_INTERNALS_ATTR_PREFIX)) {
          const ariaAttr = attr.name.slice(HYDRATE_INTERNALS_ATTR_PREFIX.length);
          this.removeAttribute(ariaAttr);
          this.removeAttribute(attr.name);
        }
      }
      hydrate(value, this.renderRoot, this.renderOptions);
    } else {
      render(value, this.renderRoot, this.renderOptions);
    }
  };
};

// node_modules/@esri/calcite-components/dist/loader.js
var o = makeDefineCustomElements(A, {
  "calcite-accordion": [() => import("./customElement-HWAJIMOY.js"), "appearance,iconPosition,iconType,scale,selectionMode"],
  "calcite-accordion-item": [() => import("./customElement-C5UQLIUF.js"), "accordionParent:,description,expanded,heading,iconEnd,iconFlipRtl,iconPosition,iconStart,iconType,scale;setFocus"],
  "calcite-action": [() => import("./customElement-XMW5KM23.js"), "active,alignment,appearance,compact,disabled,dragHandle,icon,iconFlipRtl,indicator,label,loading,messageOverrides:,scale,text,textEnabled;setFocus"],
  "calcite-action-bar": [() => import("./customElement-DLVVX4CW.js"), "actionsEndGroupLabel,expandDisabled,expanded,layout,messageOverrides:,overflowActionsDisabled,overlayPositioning,position,scale;overflowActions,setFocus"],
  "calcite-action-group": [() => import("./customElement-XPVJFYVQ.js"), "columns,expanded,label,layout,menuFlipPlacements:,menuOpen,menuPlacement,messageOverrides:,overlayPositioning,scale;setFocus"],
  "calcite-action-menu": [() => import("./customElement-BKK7SZRC.js"), "appearance,expanded,flipPlacements:,label,open,overlayPositioning,placement,scale;setFocus"],
  "calcite-action-pad": [() => import("./customElement-OZPX2KPV.js"), "actionsEndGroupLabel,expandDisabled,expanded,layout,messageOverrides:,overlayPositioning,position,scale;setFocus"],
  "calcite-alert": [() => import("./customElement-CX67X4HP.js"), "active,autoClose,autoCloseDuration,embedded,icon,iconFlipRtl,kind,label,messageOverrides:,numberingSystem,open,openAlertCount,placement,queue,scale;setFocus"],
  "calcite-autocomplete": [() => import("./customElement-HUYTIZ5S.js"), "alignment,autocomplete:,disabled,flipPlacements:,form,icon,iconFlipRtl,inputValue,label,loading,maxLength,messageOverrides:,minLength,name,open,overlayPositioning,pattern,placeholder,placement,prefixText,readOnly,required,scale,status,suffixText,validationIcon,validationMessage,validity:,value;reposition,scrollContentTo,selectText,setFocus"],
  "calcite-autocomplete-item": [() => import("./customElement-HNW3B5KB.js"), "active,description,disabled,guid,heading,iconEnd,iconFlipRtl,iconStart,inputValueMatchPattern:,label,scale,value"],
  "calcite-autocomplete-item-group": [() => import("./customElement-FZGMJJOR.js"), "disableSpacing,heading,label,scale"],
  "calcite-avatar": [() => import("./customElement-DMNPCEJV.js"), "fullName,label,scale,thumbnail,userId,username"],
  "calcite-block": [() => import("./customElement-INYXWS65.js"), "collapsible,description,disabled,dragDisabled,dragHandle,expanded,heading,headingLevel,iconEnd,iconFlipRtl,iconStart,label,loading,menuFlipPlacements:,menuPlacement,messageOverrides:,moveToItems:,open,overlayPositioning,setPosition,setSize,sortHandleOpen,status;setFocus"],
  "calcite-block-group": [() => import("./customElement-33O2U567.js"), "canPull:,canPut:,disabled,dragEnabled,group,label,loading;setFocus"],
  "calcite-block-section": [() => import("./customElement-M46IVSH7.js"), "expanded,iconEnd,iconFlipRtl,iconStart,messageOverrides:,open,status,text,toggleDisplay;setFocus"],
  "calcite-button": [() => import("./customElement-5D5MD2WQ.js"), "alignment,appearance,disabled,download,form,href,iconEnd,iconFlipRtl,iconStart,kind,label,loading,messageOverrides:,name,rel,round,scale,splitChild,target,type,width;setFocus"],
  "calcite-card": [() => import("./customElement-LKB5Y4SR.js"), "disabled,label,loading,messageOverrides:,selectable,selected,selectionMode,thumbnailPosition;setFocus"],
  "calcite-card-group": [() => import("./customElement-ME3KJSOQ.js"), "disabled,label,selectedItems:,selectionMode;setFocus"],
  "calcite-carousel": [() => import("./customElement-OBW5IJ2I.js"), "arrowType,autoplay,autoplayDuration,controlOverlay,disabled,label,messageOverrides:,paused,selectedItem:;play,setFocus,stop"],
  "calcite-carousel-item": [() => import("./customElement-NAUOCLXJ.js"), "label,selected"],
  "calcite-checkbox": [() => import("./customElement-HFBYNGL7.js"), "checked,disabled,form,hovered,indeterminate,label,name,required,scale,status,validity:,value;setFocus"],
  "calcite-chip": [() => import("./customElement-76LTQWMT.js"), "appearance,closable,closed,closeOnDelete,disabled,icon,iconFlipRtl,interactive,kind,label,messageOverrides:,parentChipGroup:,scale,selected,selectionMode,value;setFocus"],
  "calcite-chip-group": [() => import("./customElement-TAPCXLO5.js"), "disabled,label,scale,selectedItems:,selectionMode;setFocus"],
  "calcite-color-picker": [() => import("./customElement-DZEQFAQP.js"), "allowEmpty,alphaChannel,channelsDisabled,clearable,color:,disabled,format,hexDisabled,messageOverrides:,numberingSystem,savedDisabled,scale,storageId,value;setFocus"],
  "calcite-color-picker-hex-input": [() => import("./customElement-EVDWXXGE.js"), "allowEmpty,alphaChannel,hexLabel,messages:,numberingSystem,scale,value;setFocus"],
  "calcite-color-picker-swatch": [() => import("./customElement-ILJOJN3S.js"), "active,color,scale"],
  "calcite-combobox": [() => import("./customElement-MA47RZAU.js"), "allowCustomValues,clearDisabled,disabled,filteredItems:,filterProps:,filterText,flipPlacements:,form,label,maxItems,messageOverrides:,name,open,overlayPositioning,placeholder,placeholderIcon,placeholderIconFlipRtl,readOnly,required,scale,selectedItems:,selectionDisplay,selectionMode,status,validationIcon,validationMessage,validity:,value;reposition,setFocus"],
  "calcite-combobox-item": [() => import("./customElement-QYYGM37U.js"), "active,ancestors:,description,disabled,filterDisabled,filterTextMatchPattern:,guid,heading,icon,iconFlipRtl,itemHidden,label,metadata:,scale,selected,selectionMode,shortHeading,textLabel,value"],
  "calcite-combobox-item-group": [() => import("./customElement-K4IHLE4S.js"), "afterEmptyGroup,ancestors:,itemHidden,label,scale"],
  "calcite-date-picker": [() => import("./customElement-INBXDAB7.js"), "activeDate:,activeRange,headingLevel,layout,max,maxAsDate:,messageOverrides:,min,minAsDate:,monthStyle,numberingSystem,proximitySelectionDisabled,range,scale,value,valueAsDate:;reset,setFocus"],
  "calcite-date-picker-day": [() => import("./customElement-GQSVCJJ2.js"), "active,currentMonth,dateTimeFormat:,day,disabled,endOfRange,highlighted,range,rangeEdge,rangeHover,scale,selected,startOfRange,value:;setFocus"],
  "calcite-date-picker-month": [() => import("./customElement-6AP4WVM7.js"), "activeDate:,dateTimeFormat:,endDate:,headingLevel,hoverRange:,layout,localeData:,max:,messages:,min:,monthStyle,range,scale,selectedDate:,startDate:"],
  "calcite-date-picker-month-header": [() => import("./customElement-PFVP6Z5A.js"), "activeDate:,headingLevel,localeData:,max:,messages:,min:,monthStyle,position,scale,selectedDate:"],
  "calcite-dialog": [() => import("./customElement-OW7XGBVV.js"), "beforeClose:,closeDisabled,description,dragEnabled,embedded,escapeDisabled,focusTrapDisabled,focusTrapOptions:,heading,headingLevel,kind,loading,menuOpen,messageOverrides:,modal,open,outsideCloseDisabled,overlayPositioning,placement,resizable,scale,width,widthScale;scrollContentTo,setFocus,updateFocusTrapElements"],
  "calcite-dropdown": [() => import("./customElement-P32LBSS5.js"), "closeOnSelectDisabled,disabled,flipPlacements:,maxItems,offsetDistance,offsetSkidding,open,overlayPositioning,placement,scale,selectedItems:,type,width,widthScale;reposition,setFocus"],
  "calcite-dropdown-group": [() => import("./customElement-EUTFRZPW.js"), "groupTitle,position,scale,selectionMode"],
  "calcite-dropdown-item": [() => import("./customElement-QQGKJSE4.js"), "disabled,href,iconEnd,iconFlipRtl,iconStart,label,rel,scale,selected,selectionMode,target;setFocus"],
  "calcite-fab": [() => import("./customElement-KXWYIIBI.js"), "appearance,disabled,icon,iconFlipRtl,kind,label,loading,scale,text,textEnabled;setFocus"],
  "calcite-filter": [() => import("./customElement-J7GDX2HE.js"), "disabled,filteredItems:,filterProps:,items:,label,messageOverrides:,placeholder,scale,value;filter,setFocus"],
  "calcite-flow": [() => import("./customElement-723QYYF3.js"), "customItemSelectors;back,setFocus"],
  "calcite-flow-item": [() => import("./customElement-554273EV.js"), "beforeBack:,beforeClose:,closable,closed,collapsed,collapseDirection,collapsible,description,disabled,heading,headingLevel,loading,menuOpen,messageOverrides:,overlayPositioning,scale,selected,showBackButton;scrollContentTo,setFocus"],
  "calcite-graph": [() => import("./customElement-JGQJ6XL7.js"), "colorStops:,data:,highlightMax,highlightMin,max,min"],
  "calcite-handle": [() => import("./customElement-S24KZWIT.js"), "blurUnselectDisabled,disabled,dragHandle,label,messageOverrides:,selected,setPosition,setSize;setFocus"],
  "calcite-icon": [() => import("./customElement-G3ZF6JJK.js"), "flipRtl,icon,preload,scale,textLabel"],
  "calcite-inline-editable": [() => import("./customElement-AHN72P64.js"), "afterConfirm:,controls,disabled,editingEnabled,loading,messageOverrides:,scale;setFocus"],
  "calcite-input": [() => import("./customElement-4CIOY6ED.js"), "accept,alignment,autocomplete:,clearable,disabled,editingEnabled,files:,form,groupSeparator,icon,iconFlipRtl,label,loading,localeFormat,max,maxLength,messageOverrides:,min,minLength,multiple,name,numberButtonType,numberingSystem,pattern,placeholder,prefixText,readOnly,required,scale,status,step,suffixText,type,validationIcon,validationMessage,validity:,value;selectText,setFocus"],
  "calcite-input-date-picker": [() => import("./customElement-5LMNS5NM.js"), "disabled,flipPlacements:,focusTrapDisabled,form,headingLevel,layout,max,maxAsDate:,messageOverrides:,min,minAsDate:,monthStyle,name,numberingSystem,open,overlayPositioning,placement,proximitySelectionDisabled,range,readOnly,required,scale,status,validationIcon,validationMessage,validity:,value,valueAsDate:;reposition,setFocus"],
  "calcite-input-message": [() => import("./customElement-3EF4Q7UK.js"), "icon,iconFlipRtl,scale,status"],
  "calcite-input-number": [() => import("./customElement-P4IZ66FB.js"), "alignment,autocomplete:,clearable,disabled,editingEnabled,form,groupSeparator,icon,iconFlipRtl,integer,label,loading,localeFormat,max,maxLength,messageOverrides:,min,minLength,name,numberButtonType,numberingSystem,placeholder,prefixText,readOnly,required,scale,status,step,suffixText,validationIcon,validationMessage,validity:,value;selectText,setFocus"],
  "calcite-input-text": [() => import("./customElement-BHBUFC43.js"), "alignment,autocomplete:,clearable,disabled,editingEnabled,form,icon,iconFlipRtl,label,loading,maxLength,messageOverrides:,minLength,name,pattern,placeholder,prefixText,readOnly,required,scale,status,suffixText,validationIcon,validationMessage,validity:,value;selectText,setFocus"],
  "calcite-input-time-picker": [() => import("./customElement-VNPBSYF7.js"), "disabled,focusTrapDisabled,form,hourFormat,max,messageOverrides:,min,name,numberingSystem,open,overlayPositioning,placement,readOnly,required,scale,status,step,validationIcon,validationMessage,validity:,value;reposition,setFocus"],
  "calcite-input-time-zone": [() => import("./customElement-3W73UMAV.js"), "clearable,disabled,form,maxItems,messageOverrides:,mode,name,offsetStyle,open,overlayPositioning,readOnly,referenceDate,required,scale,status,validationIcon,validationMessage,validity:,value;setFocus"],
  "calcite-label": [() => import("./customElement-FC5EZHYK.js"), "alignment,for,layout,scale"],
  "calcite-link": [() => import("./customElement-L4MMFXVO.js"), "disabled,download,href,iconEnd,iconFlipRtl,iconStart,rel,target;setFocus"],
  "calcite-list": [() => import("./customElement-7V5UDZMX.js"), "canPull:,canPut:,disabled,displayMode,dragEnabled,filteredData:,filteredItems:,filterEnabled,filterLabel,filterPlaceholder,filterPredicate:,filterProps:,filterText,group,interactionMode,label,loading,messageOverrides:,numberingSystem,scale,selectedItems:,selectionAppearance,selectionMode;setFocus"],
  "calcite-list-item": [() => import("./customElement-5ZWW3BIJ.js"), "active,bordered,closable,closed,description,disabled,displayMode,dragDisabled,dragHandle,expanded,filterHidden,iconEnd,iconFlipRtl,iconStart,interactionMode,label,messageOverrides:,metadata:,moveToItems:,open,scale,selected,selectionAppearance,selectionMode,setPosition,setSize,sortHandleOpen,unavailable,value;setFocus"],
  "calcite-list-item-group": [() => import("./customElement-JT56ETAQ.js"), "disabled,filterHidden,heading,scale"],
  "calcite-loader": [() => import("./customElement-BIZ4WBQG.js"), "complete,inline,label,scale,text,type,value"],
  "calcite-menu": [() => import("./customElement-WA7JKDDC.js"), "label,layout,messageOverrides:;setFocus"],
  "calcite-menu-item": [() => import("./customElement-OR2JSZQZ.js"), "active,breadcrumb,href,iconEnd,iconFlipRtl,iconStart,isTopLevelItem,label,layout,messageOverrides:,open,rel,target,text,topLevelMenuLayout;setFocus"],
  "calcite-meter": [() => import("./customElement-K5XIUWVM.js"), "appearance,disabled,fillType,form,groupSeparator,high,label,low,max,min,name,numberingSystem,rangeLabels,rangeLabelType,scale,unitLabel,value,valueLabel,valueLabelType"],
  "calcite-modal": [() => import("./customElement-3BW5YUJ5.js"), "beforeClose:,closeButtonDisabled,docked,escapeDisabled,focusTrapDisabled,focusTrapOptions:,fullscreen,kind,messageOverrides:,open,opened,outsideCloseDisabled,scale,widthScale;scrollContent,setFocus,updateFocusTrapElements"],
  "calcite-navigation": [() => import("./customElement-A7XTPSO6.js"), "label,navigationAction;setFocus"],
  "calcite-navigation-logo": [() => import("./customElement-BP2SR4DU.js"), "active,description,heading,headingLevel,href,icon,iconFlipRtl,label,rel,target,thumbnail;setFocus"],
  "calcite-navigation-user": [() => import("./customElement-JNGKNTIU.js"), "active,fullName,label,textDisabled,thumbnail,userId,username;setFocus"],
  "calcite-notice": [() => import("./customElement-HQRUUXPA.js"), "closable,icon,iconFlipRtl,kind,messageOverrides:,open,scale,width;setFocus"],
  "calcite-option": [() => import("./customElement-JKLGNGTC.js"), "disabled,label,selected,value"],
  "calcite-option-group": [() => import("./customElement-AAGOEEA6.js"), "disabled,label"],
  "calcite-pagination": [() => import("./customElement-DQGPS3FX.js"), "groupSeparator,messageOverrides:,numberingSystem,pageSize,scale,startItem,totalItems;goTo,nextPage,previousPage,setFocus"],
  "calcite-panel": [() => import("./customElement-CCB3KCYL.js"), "beforeClose:,closable,closed,collapsed,collapseDirection,collapsible,description,disabled,heading,headingLevel,loading,menuFlipPlacements:,menuOpen,menuPlacement,messageOverrides:,overlayPositioning,scale;scrollContentTo,setFocus"],
  "calcite-popover": [() => import("./customElement-22YFFM5Y.js"), "autoClose,closable,flipDisabled,flipPlacements:,focusTrapDisabled,focusTrapOptions:,heading,headingLevel,label,messageOverrides:,offsetDistance,offsetSkidding,open,overlayPositioning,placement,pointerDisabled,referenceElement,scale,triggerDisabled;reposition,setFocus,updateFocusTrapElements"],
  "calcite-progress": [() => import("./customElement-C5QUN7Z3.js"), "label,reversed,text,type,value"],
  "calcite-radio-button": [() => import("./customElement-BBA323M4.js"), "checked,disabled,focused,form,hovered,label,name,required,scale,value;emitCheckedChange,setFocus"],
  "calcite-radio-button-group": [() => import("./customElement-YYDVQCCB.js"), "disabled,layout,name,required,scale,selectedItem:,status,validationIcon,validationMessage;setFocus"],
  "calcite-rating": [() => import("./customElement-2G6PRXVN.js"), "average,count,disabled,form,messageOverrides:,name,readOnly,required,scale,showChip,status,validationIcon,validationMessage,validity:,value;setFocus"],
  "calcite-scrim": [() => import("./customElement-4QSDL4LZ.js"), "loading,messageOverrides:"],
  "calcite-segmented-control": [() => import("./customElement-AIJAXU3N.js"), "appearance,disabled,form,layout,name,required,scale,selectedItem:,status,validationIcon,validationMessage,validity:,value,width;setFocus"],
  "calcite-segmented-control-item": [() => import("./customElement-QIAD56GJ.js"), "appearance,checked,iconEnd,iconFlipRtl,iconStart,layout,scale,value"],
  "calcite-select": [() => import("./customElement-OTNLXAPL.js"), "disabled,form,label,name,required,scale,selectedOption:,status,validationIcon,validationMessage,validity:,value,width;setFocus"],
  "calcite-sheet": [() => import("./customElement-NKPNKHM4.js"), "beforeClose:,displayMode,embedded,escapeDisabled,focusTrapDisabled,focusTrapOptions:,height,heightScale,label,messageOverrides:,open,opened,outsideCloseDisabled,position,resizable,width,widthScale;setFocus,updateFocusTrapElements"],
  "calcite-shell": [() => import("./customElement-G7BKUJQA.js"), "contentBehind"],
  "calcite-shell-center-row": [() => import("./customElement-OCLLSNDI.js"), "detached,heightScale,position"],
  "calcite-shell-panel": [() => import("./customElement-XBM2B7Q3.js"), "collapsed,displayMode,height,heightScale,layout,messageOverrides:,position,resizable,width,widthScale"],
  "calcite-slider": [() => import("./customElement-PG5F3N4F.js"), "disabled,fillPlacement,form,groupSeparator,hasHistogram,histogram:,histogramStops:,labelFormatter:,labelHandles,labelTicks,max,maxLabel,maxValue,min,minLabel,minValue,mirrored,name,numberingSystem,pageStep,precise,required,scale,snap,status,step,ticks,validationIcon,validationMessage,validity:,value;setFocus"],
  "calcite-sort-handle": [() => import("./customElement-YW22MDKL.js"), "disabled,flipPlacements:,label,messageOverrides:,messages:,moveToItems:,open,overlayPositioning,placement,scale,setPosition,setSize,widthScale;setFocus"],
  "calcite-sortable-list": [() => import("./customElement-GEHN3C5W.js"), "canPull:,canPut:,disabled,dragSelector,group,handleSelector,layout,loading"],
  "calcite-split-button": [() => import("./customElement-RRP752UN.js"), "active,appearance,disabled,download,dropdownIconType,dropdownLabel,flipPlacements:,href,kind,loading,overlayPositioning,placement,primaryIconEnd,primaryIconFlipRtl,primaryIconStart,primaryLabel,primaryText,rel,scale,target,width;setFocus"],
  "calcite-stack": [() => import("./customElement-EI2HXSU3.js"), "disabled"],
  "calcite-stepper": [() => import("./customElement-7UAIC3NS.js"), "icon,layout,messageOverrides:,numbered,numberingSystem,scale,selectedItem:;endStep,goToStep,nextStep,prevStep,startStep"],
  "calcite-stepper-item": [() => import("./customElement-26LKDZ4C.js"), "complete,description,disabled,error,heading,icon,iconFlipRtl,itemHidden,layout,messageOverrides:,numbered,numberingSystem,scale,selected;setFocus"],
  "calcite-switch": [() => import("./customElement-3EXMRPBY.js"), "checked,disabled,form,label,name,scale,value;setFocus"],
  "calcite-tab": [() => import("./customElement-NYJXBBMG.js"), "scale,selected,tab;getTabIndex;_updateAriaInfo"],
  "calcite-tab-nav": [() => import("./customElement-CACRQKSI.js"), "bordered,layout,messageOverrides:,position,scale,selectedTitle:,storageId,syncId"],
  "calcite-tab-title": [() => import("./customElement-S3BRAEMV.js"), "bordered,closable,closed,disabled,iconEnd,iconFlipRtl,iconStart,layout,messageOverrides:,position,scale,selected,tab;activateTab,getTabIdentifier,getTabIndex;_updateAriaInfo"],
  "calcite-table": [() => import("./customElement-KYEIOKYO.js"), "bordered,caption,groupSeparator,interactionMode,layout,messageOverrides:,numbered,numberingSystem,pageSize,scale,selectedItems:,selectionDisplay,selectionMode,striped"],
  "calcite-table-cell": [() => import("./customElement-S2A2MBJ5.js"), "alignment,colSpan,disabled,interactionMode,lastCell,messageOverrides:,numberCell,parentRowAlignment,parentRowIsSelected,parentRowPositionLocalized,parentRowType,positionInRow,readCellContentsToAT,rowSpan,scale,selectionCell;setFocus"],
  "calcite-table-header": [() => import("./customElement-4K3PBAJZ.js"), "alignment,bodyRowCount,colSpan,description,heading,interactionMode,lastCell,messageOverrides:,numberCell,parentRowAlignment,parentRowIsSelected,parentRowType,positionInRow,rowSpan,scale,selectedRowCount,selectedRowCountLocalized,selectionCell,selectionMode;setFocus"],
  "calcite-table-row": [() => import("./customElement-3HLOOK55.js"), "alignment,bodyRowCount,cellCount,disabled,interactionMode,itemHidden,lastVisibleRow,numbered,positionAll,positionSection,positionSectionLocalized,readCellContentsToAT,rowType,scale,selected,selectedRowCount,selectedRowCountLocalized,selectionMode"],
  "calcite-tabs": [() => import("./customElement-CY6MQSSI.js"), "bordered,layout,position,scale"],
  "calcite-text-area": [() => import("./customElement-EVNZTWNA.js"), "columns,disabled,form,groupSeparator,label,limitText,maxLength,messageOverrides:,minLength,name,numberingSystem,placeholder,readOnly,required,resize,rows,scale,status,validationIcon,validationMessage,validity:,value,wrap;selectText,setFocus"],
  "calcite-tile": [() => import("./customElement-3FZKBZ6K.js"), "active,alignment,description,disabled,embed,heading,href,icon,iconFlipRtl,interactive,label,layout,scale,selected,selectionAppearance,selectionMode;setFocus"],
  "calcite-tile-group": [() => import("./customElement-PER7BFYG.js"), "alignment,disabled,label,layout,scale,selectedItems:,selectionAppearance,selectionMode"],
  "calcite-tile-select": [() => import("./customElement-O524C6OA.js"), "checked,description,disabled,heading,icon,iconFlipRtl,inputAlignment,inputEnabled,name,type,value,width;setFocus"],
  "calcite-tile-select-group": [() => import("./customElement-UKOPX3QH.js"), "disabled,layout"],
  "calcite-time-picker": [() => import("./customElement-ZQCTC3WZ.js"), "hourFormat,messageOverrides:,numberingSystem,scale,step,value;setFocus"],
  "calcite-tip": [() => import("./customElement-TBAINU34.js"), "closed,closeDisabled,heading,headingLevel,messageOverrides:,selected"],
  "calcite-tip-group": [() => import("./customElement-CTNBCEOU.js"), "groupTitle"],
  "calcite-tip-manager": [() => import("./customElement-23N4BWUG.js"), "closed,headingLevel,messageOverrides:;nextTip,previousTip"],
  "calcite-tooltip": [() => import("./customElement-YQSDN3Y5.js"), "closeOnClick,label,offsetDistance,offsetSkidding,open,overlayPositioning,placement,referenceElement;reposition"],
  "calcite-tree": [() => import("./customElement-2LXU7X5W.js"), "child,lines,parentExpanded,scale,selectedItems:,selectionMode"],
  "calcite-tree-item": [() => import("./customElement-C7HY54LU.js"), "depth,disabled,expanded,hasChildren,iconFlipRtl,iconStart,indeterminate,label,lines,parentExpanded,scale,selected,selectionMode"]
});
export {
  o as defineCustomElements
};
/*! Bundled license information:

lit-html/development/private-ssr-support.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit-labs/ssr-client/development/lib/hydrate-lit-html.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit-labs/ssr-client/development/lit-element-hydrate-support.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@esri/calcite-components/dist/loader.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=@esri_calcite-components_dist_loader.js.map
