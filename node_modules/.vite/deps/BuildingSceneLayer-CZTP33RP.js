import {
  n as n6,
  p as p4
} from "./chunk-IVPVPFYU.js";
import {
  t as t4
} from "./chunk-QHKIY2YB.js";
import {
  a as a5,
  m as m5,
  p as p3,
  y
} from "./chunk-AAJ7HOPE.js";
import {
  R,
  V as V4,
  r as r3
} from "./chunk-Q6AGOKIE.js";
import {
  $,
  Z as Z2,
  w as w2
} from "./chunk-LULXSZFE.js";
import {
  V as V3
} from "./chunk-TS22YKT7.js";
import "./chunk-GZUQTA6H.js";
import "./chunk-MAX4GY2G.js";
import "./chunk-OITDZHA4.js";
import "./chunk-ZGGC3KHK.js";
import "./chunk-UM5QMFZV.js";
import "./chunk-MD2QBQPV.js";
import "./chunk-CBFRSYD6.js";
import "./chunk-2CY5SLAC.js";
import "./chunk-LQHBJ3TA.js";
import "./chunk-MKVF6I7G.js";
import "./chunk-457CK7GN.js";
import "./chunk-EVDBYOW7.js";
import "./chunk-QQOUESXA.js";
import "./chunk-EQ5WRTBD.js";
import "./chunk-6QXEI4OT.js";
import "./chunk-55SEMSMA.js";
import "./chunk-BUZ7I3MJ.js";
import "./chunk-I7JIAECC.js";
import "./chunk-ZXD5CGBL.js";
import "./chunk-CUWQEJ5X.js";
import "./chunk-NE7GYHUP.js";
import "./chunk-EXHR7CRN.js";
import "./chunk-HX6OAJGI.js";
import "./chunk-F64YCQYI.js";
import "./chunk-3L7KPDW7.js";
import "./chunk-HYT6FDCG.js";
import "./chunk-MRUZJ4BJ.js";
import "./chunk-YZF7OTID.js";
import "./chunk-KLBFJ6WQ.js";
import "./chunk-HHSHKUKB.js";
import "./chunk-OBRCQKKM.js";
import "./chunk-6AWA6GOC.js";
import "./chunk-5Y5NK5SR.js";
import "./chunk-SXBN3QCZ.js";
import "./chunk-XD7AJMUV.js";
import "./chunk-6TUECH7E.js";
import {
  s as s3
} from "./chunk-B3W47DKN.js";
import "./chunk-3ECUFCNI.js";
import "./chunk-6WERKJTM.js";
import "./chunk-T7CHWWE2.js";
import "./chunk-FWVSIQMR.js";
import "./chunk-ON7GWFUW.js";
import {
  Ye
} from "./chunk-HPA5LQSZ.js";
import "./chunk-3SU7BOQG.js";
import "./chunk-JED5CITL.js";
import "./chunk-TRBU6WLM.js";
import "./chunk-XBF3Q5CM.js";
import "./chunk-BSQH3I7W.js";
import "./chunk-PHUXOQ5V.js";
import "./chunk-7LZ547RY.js";
import "./chunk-3XDQGJHT.js";
import "./chunk-BMOULVP4.js";
import "./chunk-LVHCS2TZ.js";
import "./chunk-YSZGPB5I.js";
import {
  i
} from "./chunk-5GYWQFHA.js";
import "./chunk-MR2DYNTG.js";
import "./chunk-65Z5LAMC.js";
import "./chunk-IFZYBBFM.js";
import "./chunk-WYOFTVUU.js";
import {
  s as s4
} from "./chunk-S4AV6MOI.js";
import "./chunk-QOBHQZYU.js";
import "./chunk-CKW4LZG2.js";
import "./chunk-VYOLHG4T.js";
import "./chunk-TKEIF3N7.js";
import "./chunk-RMOE6XHW.js";
import {
  u
} from "./chunk-QAXPIBME.js";
import "./chunk-ISRSQJQR.js";
import {
  l as l2
} from "./chunk-WOB72RZU.js";
import "./chunk-HKTC3ZVY.js";
import "./chunk-MQ3WYGQ2.js";
import {
  p as p2
} from "./chunk-S4QLDBOB.js";
import {
  e
} from "./chunk-RTA3XNM7.js";
import "./chunk-NUJWMWJZ.js";
import "./chunk-5ZCYRESW.js";
import {
  N
} from "./chunk-XZDT5RTS.js";
import "./chunk-QAP2FVP7.js";
import "./chunk-6EREU4EG.js";
import "./chunk-7DHQ2VMC.js";
import "./chunk-Z5UGTZ3C.js";
import "./chunk-ZXHHBJMH.js";
import "./chunk-5JWPKXQI.js";
import "./chunk-4GBYHIKO.js";
import "./chunk-ZDLUQDDX.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-RP6IGXYU.js";
import "./chunk-5T3XQRJL.js";
import {
  Z
} from "./chunk-MRPAGZVF.js";
import "./chunk-VIBOZNXV.js";
import "./chunk-NBXBK3QW.js";
import {
  j
} from "./chunk-K5B7AETB.js";
import "./chunk-KLCKQJVO.js";
import "./chunk-5APVNM2E.js";
import "./chunk-73NNNHMH.js";
import {
  b
} from "./chunk-C6YDI6QX.js";
import {
  c,
  d,
  g as g2,
  l,
  m as m4
} from "./chunk-DJ5HVIE7.js";
import {
  S as S2,
  m as m3
} from "./chunk-KPY4ZIC2.js";
import "./chunk-HGWPGAUL.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-HAYP5DZM.js";
import "./chunk-OMNXYZNG.js";
import "./chunk-WO43UGNC.js";
import "./chunk-GPMU6IW4.js";
import "./chunk-LTFI343D.js";
import "./chunk-FVMWI3UB.js";
import {
  b as b2
} from "./chunk-4JVIG75S.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-L2AVI4MN.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import {
  n as n2
} from "./chunk-BBPRJCMB.js";
import "./chunk-7VGCZZPH.js";
import {
  a as a4,
  t
} from "./chunk-THN5CUTS.js";
import {
  n as n5
} from "./chunk-FF3WJRKN.js";
import "./chunk-4GYBOMKF.js";
import "./chunk-PMTDIWAP.js";
import "./chunk-ACBQ6NOA.js";
import "./chunk-QW7P5D76.js";
import "./chunk-RO66CZDO.js";
import "./chunk-KMVZXZBR.js";
import "./chunk-7HSZJLYU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-YQH3DXBZ.js";
import "./chunk-T52X5K2I.js";
import "./chunk-VE2K63DA.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import "./chunk-SVWZAOD7.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import {
  t as t2
} from "./chunk-MILRZFWI.js";
import "./chunk-RPPIM555.js";
import {
  h
} from "./chunk-4FQDWSFN.js";
import "./chunk-JOQ2ZFQV.js";
import {
  f
} from "./chunk-3UBDE4PK.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import {
  b as b3
} from "./chunk-BLF64HON.js";
import {
  q
} from "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import {
  n as n4
} from "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import {
  t as t3
} from "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import {
  h as h2
} from "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import {
  n as n3
} from "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import {
  m as m2
} from "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import {
  V as V2
} from "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import {
  p
} from "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import {
  r as r2
} from "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import {
  w
} from "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import {
  g
} from "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import {
  o as o2
} from "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import {
  o
} from "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import {
  P2 as P
} from "./chunk-BECTSF5P.js";
import {
  V
} from "./chunk-FX46DC27.js";
import {
  S
} from "./chunk-2FUEBHWI.js";
import {
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a3,
  s as s2
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  a as a2
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import {
  s
} from "./chunk-OSHCNHH7.js";
import {
  x
} from "./chunk-7LCEUMDD.js";
import {
  a,
  n2 as n
} from "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var l3 = class extends n4.IdentifiableMixin(m3) {
  constructor(e3) {
    super(e3), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.legendEnabled = true, this.visible = true, this.opacity = 1;
  }
  readTitle(e3, o3) {
    return "string" == typeof o3.alias ? o3.alias : "string" == typeof o3.name ? o3.name : "";
  }
  readIdOnlyOnce(e3) {
    return -1 !== this.id ? this.id : "number" == typeof e3 ? e3 : -1;
  }
};
r([m({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], l3.prototype, "title", void 0), r([o2("service", "title", ["alias", "name"])], l3.prototype, "readTitle", null), r([m()], l3.prototype, "layer", void 0), r([m({ type: x, readOnly: true, json: { read: false, write: { ignoreOrigin: true, isRequired: true } } })], l3.prototype, "id", void 0), r([o2("service", "id")], l3.prototype, "readIdOnlyOnce", null), r([m(m4(String))], l3.prototype, "modelName", void 0), r([m(m4(Boolean))], l3.prototype, "isEmpty", void 0), r([m({ type: Boolean, nonNullable: true })], l3.prototype, "legendEnabled", void 0), r([m({ type: Boolean, json: { name: "visibility", write: true } })], l3.prototype, "visible", void 0), r([m({ type: Number, json: { write: true } })], l3.prototype, "opacity", void 0), l3 = r([a3("esri.layers.buildingSublayers.BuildingSublayer")], l3);
var a6 = l3;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var A = s4();
var _ = class extends m2.LoadableMixin(p.EsriPromiseMixin(a6)) {
  constructor(e3) {
    super(e3), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    var _a2, _b;
    return this.layer ? { path: `${(_a2 = this.layer.parsedUrl) == null ? void 0 : _a2.path}/sublayers/${this.id}`, query: (_b = this.layer.parsedUrl) == null ? void 0 : _b.query } : { path: "" };
  }
  get fieldsIndex() {
    return new Z(this.fields);
  }
  readAssociatedLayer(e3, t8) {
    const r4 = this.layer.associatedFeatureServiceItem, o3 = t8.associatedLayerID;
    return null != r4 && "number" == typeof o3 ? new Ye({ portalItem: r4, customParameters: this.customParameters, layerId: o3 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields) if ("oid" === e3.type) return e3.name;
    }
    return null;
  }
  get displayField() {
    return null != this.associatedLayer ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get customParameters() {
    return this.layer.customParameters;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e3) {
    const t8 = null != e3 ? e3.signal : null, r4 = this._fetchService(t8).then(() => {
      this.indexInfo = r3(this.parsedUrl.path, this.rootNode, this.nodePages, this.customParameters, this.apiKey, n.getLogger(this), t8);
    });
    return this.addResolvingPromise(r4), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  async _fetchService(e3) {
    const t8 = (await P(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e3 })).data;
    this.read(t8, { origin: "service", url: this.parsedUrl });
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, t8) {
    var _a2;
    const r4 = ((_a2 = this.getField(e3)) == null ? void 0 : _a2.domain) ?? null;
    return this.associatedLayer ? N(this.associatedLayer, e3, t8, r4) : r4;
  }
  getFeatureType(e3) {
    return e3 && null != this.associatedLayer ? this.associatedLayer.getFeatureType(e3) : null;
  }
  get types() {
    return null != this.associatedLayer ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return null != this.associatedLayer ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e3 = null != this.associatedLayer && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : t4, { query: t8, data: { supportsZ: r4, supportsM: o3, isVersioned: s5 } } = e3;
    return { query: t8, data: { supportsZ: r4, supportsM: o3, isVersioned: s5 } };
  }
  createQuery() {
    const e3 = new b2();
    return "mesh" !== this.geometryType && (e3.returnGeometry = true, e3.returnZ = true), e3.where = this.definitionExpression || "1=1", e3.sqlFormat = "standard", e3;
  }
  queryExtent(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryExtent(e3 || this.createQuery(), t8));
  }
  queryFeatureCount(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryFeatureCount(e3 || this.createQuery(), t8));
  }
  queryFeatures(e3, t8) {
    return this._getAssociatedLayerForQuery().then((r4) => r4.queryFeatures(e3 || this.createQuery(), t8)).then((e4) => {
      if (e4 == null ? void 0 : e4.features) for (const t9 of e4.features) t9.layer = this.layer, t9.sourceLayer = this;
      return e4;
    });
  }
  async queryObjectIds(e3, t8) {
    const r4 = await this._getAssociatedLayerForQuery();
    return (await r4.queryObjectIds(e3 || this.createQuery(), t8)).filter(n3);
  }
  async queryCachedAttributes(e3, t8) {
    const r4 = h2(this.fieldsIndex, await n6(this, p4(this)));
    return V3(this.parsedUrl.path, this.attributeStorageInfo, e3, t8, r4, this.apiKey, this.customParameters);
  }
  async queryCachedFeature(e3, r4) {
    const o3 = await this.queryCachedAttributes(e3, [r4]);
    if (!o3 || 0 === o3.length) throw new s("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    return new b3({ attributes: o3[0], layer: this, sourceLayer: this });
  }
  getFieldUsageInfo(e3) {
    return this.fieldsIndex.has(e3) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: null != this.associatedLayer };
  }
  _getAssociatedLayerForQuery() {
    const e3 = this.associatedLayer;
    return null != e3 && e3.loaded ? Promise.resolve(e3) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), null == this.associatedLayer) throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e3) {
      throw new s("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e3 });
    }
    return this.associatedLayer;
  }
};
r([m({ readOnly: true })], _.prototype, "parsedUrl", null), r([m({ type: p3, readOnly: true })], _.prototype, "nodePages", void 0), r([m({ type: [a5], readOnly: true })], _.prototype, "materialDefinitions", void 0), r([m({ type: [y], readOnly: true })], _.prototype, "textureSetDefinitions", void 0), r([m({ type: [m5], readOnly: true })], _.prototype, "geometryDefinitions", void 0), r([m({ readOnly: true })], _.prototype, "serviceUpdateTimeStamp", void 0), r([m({ readOnly: true })], _.prototype, "store", void 0), r([m({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], _.prototype, "rootNode", void 0), r([m({ readOnly: true })], _.prototype, "attributeStorageInfo", void 0), r([m(A.fields)], _.prototype, "fields", void 0), r([m({ readOnly: true })], _.prototype, "fieldsIndex", null), r([m({ readOnly: true, type: Ye })], _.prototype, "associatedLayer", void 0), r([o2("service", "associatedLayer", ["associatedLayerID"])], _.prototype, "readAssociatedLayer", null), r([m(A.outFields)], _.prototype, "outFields", void 0), r([m({ type: String, readOnly: true })], _.prototype, "objectIdField", null), r([m({ readOnly: true, type: String, json: { read: false } })], _.prototype, "displayField", null), r([m({ readOnly: true, type: String })], _.prototype, "apiKey", null), r([m({ readOnly: true, type: String })], _.prototype, "customParameters", null), r([m({ readOnly: true, type: w })], _.prototype, "fullExtent", null), r([m({ readOnly: true, type: g })], _.prototype, "spatialReference", null), r([m({ readOnly: true })], _.prototype, "version", null), r([m({ readOnly: true, type: h })], _.prototype, "elevationInfo", null), r([m({ readOnly: true, type: Number })], _.prototype, "minScale", null), r([m({ readOnly: true, type: Number })], _.prototype, "maxScale", null), r([m({ readOnly: true, type: Number })], _.prototype, "effectiveScaleRange", null), r([m({ type: ["hide", "show"], json: { write: true } })], _.prototype, "listMode", void 0), r([m({ types: u, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], _.prototype, "renderer", void 0), r([m({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _.prototype, "definitionExpression", void 0), r([m(l)], _.prototype, "popupEnabled", void 0), r([m({ type: q, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], _.prototype, "popupTemplate", void 0), r([m({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], _.prototype, "normalReferenceFrame", void 0), r([m({ readOnly: true, json: { read: false } })], _.prototype, "defaultPopupTemplate", null), r([m()], _.prototype, "types", null), r([m()], _.prototype, "typeIdField", null), r([m({ json: { write: false } }), r2(new o({ "3DObject": "3d-object", Point: "point" }))], _.prototype, "layerType", void 0), r([m()], _.prototype, "geometryType", null), r([m()], _.prototype, "profile", null), r([m({ readOnly: true, json: { read: false } })], _.prototype, "capabilities", null), r([m({ readOnly: true })], _.prototype, "statisticsInfo", void 0), _ = r([a3("esri.layers.buildingSublayers.BuildingComponentSublayer")], _);
var C = _;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingGroupSublayer.js
var a7;
var l4 = { type: V2, readOnly: true, json: { origins: { service: { read: { source: "sublayers", reader: p5 } } }, read: false } };
function p5(r4, o3, t8) {
  if (r4 && Array.isArray(r4)) return new V2(r4.map((r5) => {
    const e3 = y2(r5);
    if (e3) {
      const o4 = new e3();
      return o4.read(r5, t8), o4;
    }
    return (t8 == null ? void 0 : t8.messages) && r5 && t8.messages.push(new s2("building-scene-layer:unsupported-sublayer-type", "Building scene sublayer of type '" + (r5.type || "unknown") + "' are not supported", { definition: r5, context: t8 })), null;
  }));
}
var c2 = a7 = class extends a6 {
  constructor(r4) {
    super(r4), this.type = "building-group", this.listMode = "show", this.sublayers = null;
  }
  loadAll() {
    return a4(this, (r4) => a7.forEachSublayer(this.sublayers, (e3) => {
      "building-group" !== e3.type && r4(e3);
    }));
  }
};
function y2(r4) {
  return "group" === r4.layerType ? c2 : C;
}
r([m({ type: ["hide", "show", "hide-children"], json: { write: true } })], c2.prototype, "listMode", void 0), r([m(l4)], c2.prototype, "sublayers", void 0), c2 = a7 = r([a3("esri.layers.buildingSublayers.BuildingGroupSublayer")], c2), function(r4) {
  function e3(r5, o3) {
    r5.forEach((r6) => {
      o3(r6), "building-group" === r6.type && e3(r6.sublayers, o3);
    });
  }
  r4.sublayersProperty = l4, r4.readSublayers = p5, r4.forEachSublayer = e3;
}(c2 || (c2 = {}));
var d2 = c2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends S {
  constructor() {
    super(...arguments), this.type = null;
  }
};
r([m({ type: String, readOnly: true, json: { write: { isRequired: true } } })], e2.prototype, "type", void 0), e2 = r([a3("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p6 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var i2;
var p7 = i2 = class extends S {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new i2({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
r([m({ type: String, json: { write: { isRequired: true } } })], p7.prototype, "filterType", void 0), r([m({ type: [String], json: { write: { isRequired: true } } })], p7.prototype, "filterValues", void 0), p7 = i2 = r([a3("esri.layers.support.BuildingFilterAuthoringInfoType")], p7);
var l5 = p7;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c3;
var l6 = V2.ofType(l5);
var m6 = c3 = class extends S {
  clone() {
    return new c3({ filterTypes: a(this.filterTypes) });
  }
};
r([m({ type: l6, json: { write: { isRequired: true } } })], m6.prototype, "filterTypes", void 0), m6 = c3 = r([a3("esri.layers.support.BuildingFilterAuthoringInfoBlock")], m6);
var n7 = m6;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p8;
var l7 = V2.ofType(n7);
var n8 = p8 = class extends p6 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p8({ filterBlocks: a(this.filterBlocks) });
  }
};
r([m({ type: ["checkbox"] })], n8.prototype, "type", void 0), r([m({ type: l7, json: { write: { isRequired: true } } })], n8.prototype, "filterBlocks", void 0), n8 = p8 = r([a3("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n8);
var m7 = n8;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t5 = class extends S {
};
r([m({ readOnly: true, json: { read: false, write: { isRequired: true } } })], t5.prototype, "type", void 0), t5 = r([a3("esri.layers.support.BuildingFilterMode")], t5);
var p9 = t5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t6;
var i3 = t6 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t6();
  }
};
r([m({ type: ["solid"], readOnly: true, json: { write: { isRequired: true } } })], i3.prototype, "type", void 0), i3 = t6 = r([a3("esri.layers.support.BuildingFilterModeSolid")], i3);
var p10 = i3;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c4;
var m8 = c4 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c4({ edges: a(this.edges) });
  }
};
r([r2({ wireFrame: "wire-frame" })], m8.prototype, "type", void 0), r([m(t3)], m8.prototype, "edges", void 0), m8 = c4 = r([a3("esri.layers.support.BuildingFilterModeWireFrame")], m8);
var a8 = m8;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t7;
var p11 = t7 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t7();
  }
};
r([m({ type: ["x-ray"], readOnly: true, json: { write: { isRequired: true } } })], p11.prototype, "type", void 0), p11 = t7 = r([a3("esri.layers.support.BuildingFilterModeXRay")], p11);
var i4 = p11;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d3;
var a9 = { nonNullable: true, types: { key: "type", base: p9, typeMap: { solid: p10, "wire-frame": a8, "x-ray": i4 } }, json: { read: (e3) => {
  switch (e3 == null ? void 0 : e3.type) {
    case "solid":
      return p10.fromJSON(e3);
    case "wireFrame":
      return a8.fromJSON(e3);
    case "x-ray":
      return i4.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var m9 = d3 = class extends S {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new p10(), this.title = "";
  }
  clone() {
    return new d3({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "filterExpression", void 0), r([m(a9)], m9.prototype, "filterMode", void 0), r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m9.prototype, "title", void 0), m9 = d3 = r([a3("esri.layers.support.BuildingFilterBlock")], m9);
var c5 = m9;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var d4;
var u2 = V2.ofType(c5);
var m10 = d4 = class extends S {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n2(), this.name = null;
  }
  clone() {
    return new d4({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
r([m({ type: String, json: { write: true } })], m10.prototype, "description", void 0), r([m({ type: u2, json: { write: { enabled: true, isRequired: true } } })], m10.prototype, "filterBlocks", void 0), r([m({ types: { key: "type", base: p6, typeMap: { checkbox: m7 } }, json: { read: (o3) => "checkbox" === (o3 == null ? void 0 : o3.type) ? m7.fromJSON(o3) : null, write: true } })], m10.prototype, "filterAuthoringInfo", void 0), r([m({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m10.prototype, "id", void 0), r([m({ type: String, json: { write: { enabled: true, isRequired: true } } })], m10.prototype, "name", void 0), m10 = d4 = r([a3("esri.layers.support.BuildingFilter")], m10);
var f2 = m10;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var n9 = class extends S {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
r([m({ type: String })], n9.prototype, "fieldName", void 0), r([m({ type: String })], n9.prototype, "modelName", void 0), r([m({ type: String })], n9.prototype, "label", void 0), r([m({ type: Number })], n9.prototype, "min", void 0), r([m({ type: Number })], n9.prototype, "max", void 0), r([m({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], n9.prototype, "mostFrequentValues", void 0), r([m({ type: [Number] })], n9.prototype, "subLayerIds", void 0), n9 = r([a3("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")], n9);
var p12 = class extends m2.LoadableMixin(p.EsriPromiseMixin(S)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (n.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const r4 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(r4)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const t8 = (await P(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(t8, { origin: "service" });
  }
};
r([m({ constructOnly: true, type: String })], p12.prototype, "url", void 0), r([m({ readOnly: true, type: [n9], json: { read: { source: "summary" } } })], p12.prototype, "fields", null), p12 = r([a3("esri.layers.support.BuildingSummaryStatistics")], p12);
var u3 = p12;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var C2 = V2.ofType(f2);
var R2 = a(d2.sublayersProperty);
var _a;
var M = (_a = R2.json) == null ? void 0 : _a.origins;
M && (M["web-scene"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, M["portal-item"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var U = class extends R(l2(b(j(t2(S2(e(i(f)))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new n5({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._allSublayerOverrides = null, this.filters = new C2(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r4, t8) {
    const s5 = d2.readSublayers(e3, r4, t8);
    return d2.forEachSublayer(s5, (e4) => e4.layer = this), this._allSublayerOverrides && (H(s5, this._allSublayerOverrides), this._allSublayerOverrides = null), s5;
  }
  write(e3, r4) {
    return e3 = super.write(e3, r4), !r4 || "web-scene" !== r4.origin && "portal-item" !== r4.origin || (this.sublayers ? G(this.sublayers, e3, r4) : this._allSublayerOverrides && V5(this._allSublayerOverrides, e3, r4)), e3;
  }
  read(e3, r4) {
    if (super.read(e3, r4), ("web-scene" === (r4 == null ? void 0 : r4.origin) || "portal-item" === (r4 == null ? void 0 : r4.origin)) && Array.isArray(e3 == null ? void 0 : e3.sublayers)) {
      const t8 = k(e3.sublayers, r4);
      this.sublayers ? N2(this.sublayers, t8) : (this._allSublayerOverrides ?? (this._allSublayerOverrides = /* @__PURE__ */ new Map()), this._allSublayerOverrides.set(r4.origin, t8));
    }
  }
  readSummaryStatistics(e3, r4) {
    var _a2;
    if ("string" == typeof r4.statisticsHRef) {
      const e4 = V((_a2 = this.parsedUrl) == null ? void 0 : _a2.path, r4.statisticsHRef);
      return new u3({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    null != e3 && "absolute-height" !== e3.mode || this._set("elevationInfo", e3), this._validateElevationInfo(e3);
  }
  load(e3) {
    const r4 = null != e3 ? e3.signal : null, t8 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(a2).then(() => this._fetchService(r4)).then(() => this._fetchAssociatedFeatureService(r4));
    return this.addResolvingPromise(t8), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e3) => {
      d2.forEachSublayer(this.sublayers, (r4) => {
        "building-group" !== r4.type && e3(r4);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r4) {
    return this._debouncedSaveOperations(V4.SAVE_AS, { ...r4, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(V4.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType) throw new s("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  async _fetchAssociatedFeatureService(e3) {
    try {
      const { portalItem: r4 } = await s3(`${this.url}/layers/${this.layerId}`, { sceneLayerItem: this.portalItem, customParameters: this.customParameters, apiKey: this.apiKey, signal: e3 });
      this.associatedFeatureServiceItem = r4;
    } catch (r4) {
      n.getLogger(this).warn("Associated feature service item could not be loaded", r4);
    }
  }
  _validateElevationInfo(e3) {
    const r4 = "Building scene layers";
    $(n.getLogger(this), Z2(r4, "absolute-height", e3)), $(n.getLogger(this), w2(r4, e3));
  }
};
function H(e3, r4) {
  r4.forEach((r5) => N2(e3, r5));
}
function N2(e3, r4) {
  const { overrides: t8, context: s5 } = r4;
  d2.forEachSublayer(e3, (e4) => e4.read(t8.get(e4.id), s5));
}
function k(e3, r4) {
  var _a2;
  const t8 = /* @__PURE__ */ new Map();
  for (const i5 of e3) null != i5 && "object" == typeof i5 && "number" == typeof i5.id ? t8.set(i5.id, i5) : (_a2 = r4.messages) == null ? void 0 : _a2.push(new s("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i5 }));
  return { overrides: t8, context: r4 };
}
function G(e3, r4, t8) {
  const s5 = [];
  d2.forEachSublayer(e3, (e4) => {
    const r5 = e4.write({}, t8);
    Object.keys(r5).length > 1 && s5.push(r5);
  }), s5.length > 0 && (r4.sublayers = s5);
}
function V5(e3, r4, t8) {
  const s5 = (t8 == null ? void 0 : t8.origin) && e3.get(t8.origin);
  s5 && (r4.sublayers = [], s5.overrides.forEach((e4) => {
    r4.sublayers.push(a(e4));
  }));
}
r([m({ type: ["BuildingSceneLayer"] })], U.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], U.prototype, "allSublayers", void 0), r([m(R2)], U.prototype, "sublayers", void 0), r([o2("service", "sublayers")], U.prototype, "readSublayers", null), r([m({ type: C2, nonNullable: true, json: { write: true } })], U.prototype, "filters", void 0), r([m({ type: String, json: { write: true } })], U.prototype, "activeFilterId", void 0), r([m({ readOnly: true, type: u3 })], U.prototype, "summaryStatistics", void 0), r([o2("summaryStatistics", ["statisticsHRef"])], U.prototype, "readSummaryStatistics", null), r([m({ type: [String], json: { read: false } })], U.prototype, "outFields", void 0), r([m(g2)], U.prototype, "fullExtent", void 0), r([m(d)], U.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide", "hide-children"] })], U.prototype, "listMode", void 0), r([m(m4(g))], U.prototype, "spatialReference", void 0), r([m(c)], U.prototype, "elevationInfo", null), r([m({ json: { read: false }, readOnly: true })], U.prototype, "type", void 0), r([m()], U.prototype, "associatedFeatureServiceItem", void 0), U = r([a3("esri.layers.BuildingSceneLayer")], U);
var $2 = U;
export {
  $2 as default
};
//# sourceMappingURL=BuildingSceneLayer-CZTP33RP.js.map
