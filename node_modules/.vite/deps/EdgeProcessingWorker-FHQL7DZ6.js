import {
  u
} from "./chunk-JPRFCG7I.js";
import {
  E,
  d,
  f,
  m,
  p,
  u as u2
} from "./chunk-YBPXQBRJ.js";
import "./chunk-KYY6OGOF.js";
import "./chunk-O647AAAL.js";
import "./chunk-BBNY45W4.js";
import "./chunk-BG4BZEWI.js";
import "./chunk-HE2KJFY5.js";
import "./chunk-MFRTZACF.js";
import "./chunk-374VFTLO.js";
import "./chunk-OBVDE24U.js";
import "./chunk-HYT6FDCG.js";
import "./chunk-QAWD6UDA.js";
import "./chunk-QNYMCEB7.js";
import "./chunk-T7CHWWE2.js";
import "./chunk-4ACM2XXN.js";
import "./chunk-ON7GWFUW.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-D3P3E2RE.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-AZP4AFW7.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js
var o = class {
  async extract(e) {
    const t = c(e), n = f(t), r = [t.data.buffer];
    return { result: u3(n, r), transferList: r };
  }
  async extractComponentsEdgeLocations(t) {
    const s = c(t), i = u2(s.data, s.skipDeduplicate, s.indices, s.indicesLength), a = p(i, p2), o2 = [];
    return { result: u(a.regular.instancesData, o2), transferList: o2 };
  }
  async extractEdgeLocations(t) {
    const s = c(t), i = u2(s.data, s.skipDeduplicate, s.indices, s.indicesLength), a = p(i, f2), o2 = [];
    return { result: u(a.regular.instancesData, o2), transferList: o2 };
  }
};
function c(e) {
  return { data: E.createView(e.dataBuffer), indices: "Uint32Array" === e.indicesType ? new Uint32Array(e.indices) : "Uint16Array" === e.indicesType ? new Uint16Array(e.indices) : e.indices, indicesLength: e.indicesLength, writerSettings: e.writerSettings, skipDeduplicate: e.skipDeduplicate };
}
function u3(t, n) {
  n.push(t.regular.lodInfo.lengths.buffer), n.push(t.silhouette.lodInfo.lengths.buffer);
  return { regular: { instancesData: u(t.regular.instancesData, n), lodInfo: { lengths: t.regular.lodInfo.lengths.buffer } }, silhouette: { instancesData: u(t.silhouette.instancesData, n), lodInfo: { lengths: t.silhouette.lodInfo.lengths.buffer } }, averageEdgeLength: t.averageEdgeLength };
}
var l = class {
  allocate(e) {
    return d.createBuffer(e);
  }
  trim(e, t) {
    return e.slice(0, t);
  }
  write(e, t, n) {
    e.position0.setVec(t, n.position0), e.position1.setVec(t, n.position1);
  }
};
var d2 = class {
  allocate(e) {
    return m.createBuffer(e);
  }
  trim(e, t) {
    return e.slice(0, t);
  }
  write(e, t, n) {
    e.position0.setVec(t, n.position0), e.position1.setVec(t, n.position1), e.componentIndex.set(t, n.componentIndex);
  }
};
var f2 = new l();
var p2 = new d2();
export {
  o as default
};
//# sourceMappingURL=EdgeProcessingWorker-FHQL7DZ6.js.map
