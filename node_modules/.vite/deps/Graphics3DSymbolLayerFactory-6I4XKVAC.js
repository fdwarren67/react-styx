import {
  k as k4
} from "./chunk-DIBR2STU.js";
import {
  p as p18
} from "./chunk-GQS3OE6Y.js";
import {
  V as V5,
  n as n20
} from "./chunk-HZEQYEW6.js";
import {
  C as C4,
  a as a19
} from "./chunk-UHKDZUWD.js";
import {
  S as S4
} from "./chunk-XV5DYHLS.js";
import "./chunk-PNRAKV6Z.js";
import {
  C as C3,
  I as I5,
  S as S3,
  a as a17,
  a3 as a18,
  b as b9,
  c as c11,
  d2 as d8,
  e as e28,
  e2 as e29,
  e3 as e30,
  f as f17,
  j as j8,
  l2 as l17,
  l3 as l18,
  m2 as m10,
  o as o21,
  p as p15,
  p2 as p16,
  p3 as p17,
  s as s21,
  t as t20,
  t2 as t21,
  t3 as t22,
  u as u15,
  w as w7,
  y as y4
} from "./chunk-52Q4IYT4.js";
import {
  A as A9,
  E as E8,
  I as I3,
  I2 as I4,
  a as a16,
  b as b8,
  e as e27,
  f as f16,
  g as g7,
  l as l16,
  n as n19,
  o as o19,
  p as p14,
  r as r16,
  t as t19,
  te as te2
} from "./chunk-3J6UPOJA.js";
import "./chunk-IMJFD35N.js";
import {
  A as A8,
  R as R4,
  W as W2,
  b as b7,
  c as c10,
  d as d7,
  f as f15,
  g as g8,
  l as l15,
  m as m9,
  n as n18,
  o as o20,
  r as r15,
  u as u14
} from "./chunk-SFMT6MPK.js";
import "./chunk-CAUYWBFJ.js";
import {
  t as t23,
  u as u16
} from "./chunk-KGXZZPA6.js";
import {
  f as f18,
  l as l19
} from "./chunk-UZT5GFPU.js";
import "./chunk-C7KH2XUE.js";
import "./chunk-SHUPRF2X.js";
import "./chunk-MMTG5LL5.js";
import "./chunk-6SVQSUM2.js";
import "./chunk-GOOHYD4W.js";
import "./chunk-6VFW3IWB.js";
import {
  s as s20
} from "./chunk-4AD7WZIV.js";
import {
  a as a15,
  p as p13,
  s as s19
} from "./chunk-OB6J6YZ4.js";
import "./chunk-S44I6ZFP.js";
import "./chunk-HLHAX5U2.js";
import {
  Y,
  s as s18
} from "./chunk-ADRYNJCW.js";
import "./chunk-ODSRB4EZ.js";
import {
  p as p11
} from "./chunk-GHPQVNNU.js";
import {
  l as l14
} from "./chunk-VBE5VFL5.js";
import "./chunk-UCM5LUF7.js";
import {
  a as a14,
  c as c9,
  p as p10
} from "./chunk-ZDC5HC6P.js";
import "./chunk-QBDJCOUK.js";
import {
  f as f14
} from "./chunk-IJWXIQTC.js";
import "./chunk-CYPCVVWD.js";
import {
  i as i14,
  m as m8
} from "./chunk-QZBTDF5E.js";
import {
  n as n17
} from "./chunk-GGM7FI2B.js";
import {
  a as a9,
  e as e20,
  f as f7,
  h as h6,
  i as i7,
  k as k2,
  m as m6,
  r as r12,
  s as s15,
  u as u11
} from "./chunk-JVICKXJO.js";
import {
  a as a11,
  f as f11,
  h as h8,
  l as l12
} from "./chunk-KMTBAOD5.js";
import {
  ae,
  r as r13,
  t as t18
} from "./chunk-ONKUNBAA.js";
import {
  A as A7,
  D as D2,
  E as E7,
  Mt,
  U,
  Z,
  b as b6,
  k as k3,
  lt
} from "./chunk-4KZDR5QC.js";
import {
  a as a12,
  c as c7,
  o as o17,
  s as s17,
  u as u13
} from "./chunk-2NO2M4WL.js";
import "./chunk-AD3QCYSE.js";
import {
  E as E5
} from "./chunk-NJX7X3PO.js";
import "./chunk-R6B3KWCZ.js";
import "./chunk-3Y2XWHXG.js";
import {
  z
} from "./chunk-OJP6GZK7.js";
import {
  A as A5,
  A2 as A6,
  C as C2,
  E as E6,
  N as N4,
  P as P3,
  a as a10,
  e as e24,
  e2 as e26,
  f as f9,
  f2 as f10,
  f3 as f12,
  f4 as f13,
  h as h9,
  i as i9,
  i2 as i10,
  l as l10,
  l2 as l11,
  m as m7,
  o as o14,
  p2 as p8,
  s as s16,
  w as w6,
  x as x3
} from "./chunk-ARBGNZ5J.js";
import {
  N as N5,
  a as a13,
  n as n16
} from "./chunk-OBY6T2CW.js";
import {
  i as i12
} from "./chunk-SCA7QFZT.js";
import "./chunk-IDAFLWQ6.js";
import "./chunk-QDSJY67F.js";
import "./chunk-5NM52FSC.js";
import {
  g as g6,
  j as j7
} from "./chunk-FUOL4OGM.js";
import "./chunk-EV3C7SZT.js";
import "./chunk-QOICITBE.js";
import "./chunk-OV44J3A7.js";
import {
  i as i11
} from "./chunk-TLQ257RX.js";
import "./chunk-DKMSNAX7.js";
import "./chunk-IVUJZZWI.js";
import "./chunk-KLCCKTMY.js";
import "./chunk-O3RCWUGN.js";
import {
  R as R3,
  h as h7,
  l as l9,
  n as n14,
  t as t13,
  t2 as t16
} from "./chunk-WRGRINPJ.js";
import {
  n as n13,
  n2 as n15,
  o as o15,
  t as t14
} from "./chunk-R33GG7W2.js";
import "./chunk-BXGUHXQX.js";
import "./chunk-CS6KRDFU.js";
import "./chunk-GPG44W5H.js";
import {
  d as d4,
  d2 as d5,
  e as e25,
  r as r14
} from "./chunk-VGAGCEX3.js";
import "./chunk-UA3V7B5J.js";
import "./chunk-5MBR7YI6.js";
import "./chunk-WA26GNQ4.js";
import {
  B as B2,
  c as c6,
  f as f8,
  g as g5,
  p as p5,
  u as u12
} from "./chunk-P5AGQYYC.js";
import {
  e as e21,
  i as i8,
  t as t12
} from "./chunk-223G2GN7.js";
import "./chunk-AW5WQH2J.js";
import "./chunk-NTLDV7GO.js";
import "./chunk-656DVQ4F.js";
import "./chunk-6VADNTLC.js";
import "./chunk-NM5Y74WL.js";
import "./chunk-3MD5LAW4.js";
import "./chunk-U2P5JTEN.js";
import "./chunk-MSPEL4X6.js";
import "./chunk-35YSR2SI.js";
import "./chunk-DLHCJHCP.js";
import {
  $ as $2,
  G,
  O as O3,
  O2 as O4,
  Q as Q2,
  W,
  X,
  e as e23,
  n2 as n12,
  o2 as o12,
  p2 as p6,
  t as t11,
  t2 as t15
} from "./chunk-KBTHUZME.js";
import "./chunk-DWU33BWI.js";
import {
  o as o13
} from "./chunk-Y6THB4GE.js";
import {
  o as o16
} from "./chunk-W2OFQBYT.js";
import "./chunk-3LQTECQ4.js";
import "./chunk-LTEACZYT.js";
import "./chunk-IBHVRKIT.js";
import "./chunk-QIPDGN53.js";
import "./chunk-SNU6D4LT.js";
import {
  e as e22
} from "./chunk-N3R7UAKL.js";
import "./chunk-C2LO2UDO.js";
import "./chunk-276B3RLG.js";
import "./chunk-UGOVBDXX.js";
import "./chunk-QQGGEN5E.js";
import "./chunk-46GTJXDE.js";
import "./chunk-T5NYJWDC.js";
import "./chunk-QTPKIRO2.js";
import "./chunk-S2GEPA3W.js";
import "./chunk-3RHYA2CC.js";
import "./chunk-6WRMI32T.js";
import "./chunk-7FXRLNEH.js";
import "./chunk-CXHZI2CJ.js";
import {
  j as j5
} from "./chunk-RSBV5MGA.js";
import {
  B,
  M as M3,
  b as b5,
  v as v3
} from "./chunk-QEAQVAMR.js";
import {
  n as n11
} from "./chunk-4YOX3JAP.js";
import {
  a as a8
} from "./chunk-GZUQTA6H.js";
import "./chunk-OITDZHA4.js";
import {
  e as e17
} from "./chunk-ZGGC3KHK.js";
import {
  e as e19
} from "./chunk-UM5QMFZV.js";
import {
  a2 as a7,
  e as e18,
  r as r11
} from "./chunk-MD2QBQPV.js";
import "./chunk-CBFRSYD6.js";
import "./chunk-2CY5SLAC.js";
import "./chunk-LQHBJ3TA.js";
import "./chunk-MKVF6I7G.js";
import {
  S as S2,
  a as a6,
  f as f6,
  g as g4,
  h as h5,
  i as i6,
  n as n10,
  o as o11,
  t as t10,
  u as u10
} from "./chunk-457CK7GN.js";
import "./chunk-EVDBYOW7.js";
import "./chunk-QQOUESXA.js";
import "./chunk-EQ5WRTBD.js";
import "./chunk-6QXEI4OT.js";
import "./chunk-55SEMSMA.js";
import "./chunk-BUZ7I3MJ.js";
import {
  k
} from "./chunk-I7JIAECC.js";
import "./chunk-ZXD5CGBL.js";
import {
  te
} from "./chunk-7NXOMMLC.js";
import "./chunk-F6YRPEY7.js";
import "./chunk-CCPDXL7V.js";
import {
  c as c5,
  i as i5
} from "./chunk-2TACZL27.js";
import "./chunk-CUWQEJ5X.js";
import "./chunk-B7S3HUFO.js";
import "./chunk-6VF5U3IZ.js";
import "./chunk-E7IFPXEX.js";
import {
  e as e16
} from "./chunk-OK5AUMBT.js";
import "./chunk-R2ZUOHHV.js";
import {
  s as s14,
  t as t9
} from "./chunk-EXHR7CRN.js";
import "./chunk-HX6OAJGI.js";
import {
  A as A4,
  M as M2,
  O as O2,
  V as V4,
  l as l7,
  p as p4,
  x as x2
} from "./chunk-F64YCQYI.js";
import "./chunk-3L7KPDW7.js";
import {
  e as e13,
  s as s13
} from "./chunk-KYY6OGOF.js";
import "./chunk-O647AAAL.js";
import "./chunk-BBNY45W4.js";
import {
  H as H3,
  e as e12,
  n as n7
} from "./chunk-BG4BZEWI.js";
import {
  m as m4,
  s as s12
} from "./chunk-HE2KJFY5.js";
import "./chunk-MFRTZACF.js";
import {
  f as f5,
  i as i4,
  o as o8,
  t as t7,
  w as w3
} from "./chunk-374VFTLO.js";
import "./chunk-OBVDE24U.js";
import {
  e as e11
} from "./chunk-HYT6FDCG.js";
import {
  C,
  E as E4,
  L as L3,
  V as V3,
  _ as _6,
  b as b4,
  w as w4
} from "./chunk-HN2VIPED.js";
import "./chunk-W25RAFXQ.js";
import {
  o as o10,
  t as t8
} from "./chunk-VGMYHNBL.js";
import {
  r as r10
} from "./chunk-JGZQANAC.js";
import {
  c as c4
} from "./chunk-MRUZJ4BJ.js";
import "./chunk-H2QUYHU5.js";
import "./chunk-YZF7OTID.js";
import {
  m as m5
} from "./chunk-KLBFJ6WQ.js";
import {
  e as e15,
  o as o9,
  r as r9
} from "./chunk-HHSHKUKB.js";
import {
  e as e14
} from "./chunk-OBRCQKKM.js";
import {
  c as c3,
  l as l5
} from "./chunk-QAWD6UDA.js";
import {
  e as e8,
  t as t5
} from "./chunk-EUB5OBXG.js";
import "./chunk-H2OC77GP.js";
import {
  i as i2
} from "./chunk-RDHJUEBL.js";
import "./chunk-2PJ3OYOC.js";
import "./chunk-5BSH2ZN2.js";
import {
  p as p7,
  w as w5
} from "./chunk-HQ2GCCLQ.js";
import "./chunk-TYJV2BHR.js";
import "./chunk-I6H2R562.js";
import "./chunk-SURICA27.js";
import "./chunk-PBHST2SF.js";
import "./chunk-PONPGREB.js";
import {
  l as l8
} from "./chunk-6WERKJTM.js";
import {
  D,
  E as E3,
  F,
  I as I2,
  L as L2,
  N as N3,
  O,
  _ as _5,
  f as f4
} from "./chunk-QNYMCEB7.js";
import {
  _ as _4,
  l as l6,
  n as n6,
  o as o7,
  r as r8,
  s as s11,
  t as t6
} from "./chunk-T7CHWWE2.js";
import {
  j as j4,
  n as n8
} from "./chunk-FWVSIQMR.js";
import {
  P,
  e as e9,
  j as j3,
  l as l4,
  o as o5,
  q as q3,
  r as r6,
  u as u8,
  v as v2
} from "./chunk-4ACM2XXN.js";
import {
  A as A3,
  E as E2,
  H as H2,
  J,
  N as N2,
  P as P2,
  R as R2,
  _ as _3,
  b as b3,
  c as c2,
  e as e10,
  g as g3,
  o as o6,
  p as p3,
  q as q4,
  r as r7,
  s as s10,
  u as u9,
  y as y2
} from "./chunk-ON7GWFUW.js";
import {
  g as g2,
  o as o4
} from "./chunk-64ZXKK6G.js";
import "./chunk-UCM2ZG62.js";
import "./chunk-SB6LU3VH.js";
import {
  i as i13,
  y as y3
} from "./chunk-5JWPKXQI.js";
import {
  n as n9
} from "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import {
  N,
  n as n5,
  r as r5,
  s as s9,
  t as t4
} from "./chunk-V3IZNRFE.js";
import {
  E,
  m as m3,
  s as s8
} from "./chunk-D7XVYH42.js";
import "./chunk-HAYP5DZM.js";
import "./chunk-OMNXYZNG.js";
import "./chunk-GPMU6IW4.js";
import {
  L
} from "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import {
  h as h3,
  o as o2
} from "./chunk-EGSJQZXU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-T52X5K2I.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import "./chunk-JOQ2ZFQV.js";
import "./chunk-WBBL3X3F.js";
import {
  I,
  c,
  e as e7,
  f as f3,
  h as h4,
  i as i3,
  n as n4,
  o as o3,
  p as p2,
  q as q2
} from "./chunk-GFEMKR2U.js";
import {
  e as e6,
  u as u7
} from "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import "./chunk-BLF64HON.js";
import "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import {
  d2 as d6,
  j as j6,
  l as l13,
  o as o18,
  p as p9
} from "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import {
  c as c8,
  t as t17
} from "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import {
  A as A2,
  M,
  R,
  V as V2,
  a as a4,
  a2 as a5,
  b as b2,
  d as d3,
  e as e3,
  l as l3,
  m as m2,
  o,
  p,
  q,
  s as s6,
  t as t2,
  u as u4,
  v,
  w as w2,
  x
} from "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import {
  p as p12
} from "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import {
  _ as _2,
  e as e4,
  n as n3,
  r as r4,
  s as s7,
  t as t3,
  u as u5
} from "./chunk-D3P3E2RE.js";
import {
  A,
  d as d2
} from "./chunk-UKY33OJN.js";
import {
  _,
  d
} from "./chunk-HAWCNM3C.js";
import {
  V
} from "./chunk-BQYXRSVC.js";
import {
  i
} from "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import {
  e as e5,
  u as u6,
  y
} from "./chunk-FZPO5AYT.js";
import {
  h as h2
} from "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import {
  j as j2
} from "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import {
  n as n2
} from "./chunk-HB6TKF6E.js";
import {
  H,
  f as f2,
  u as u3
} from "./chunk-OXPM753Y.js";
import {
  w
} from "./chunk-N4U5VIP2.js";
import {
  j2 as j
} from "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import {
  $,
  Q,
  f,
  s as s4,
  s2 as s5
} from "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import {
  b,
  h,
  r,
  s
} from "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import {
  ot
} from "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import {
  e3 as e2,
  g,
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a3
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import {
  u as u2
} from "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  S,
  a as a2,
  e,
  l as l2,
  r as r3,
  s as s3,
  t,
  u
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r as r2
} from "./chunk-SCZRL2WP.js";
import {
  s as s2
} from "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import {
  a,
  l2 as l,
  n2 as n
} from "./chunk-6II7WQ2F.js";
import {
  has
} from "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/views/3d/layers/graphics/polygonUtils.js
function p19(e36, r25, o27) {
  const a26 = (r25.length > 0 ? r25[0] : e36.length / 3) - 1, s27 = c9(e36, a26, o27);
  if (s27 !== n2.Z) {
    e36 = e36.slice();
    for (let t27 = 0; t27 < e36.length; t27 += 3) e36[t27 + s27] = e36[t27 + 2];
  }
  return e16(e36, r25, 3);
}
function l20(t27) {
  const e36 = [[e11.POSITION, new t9(t27.attributeData.position, t27.indices, 3, true)]], r25 = w3(t27.indices.length);
  return null != t27.attributeData.colorFeature ? e36.push([e11.COLORFEATUREATTRIBUTE, new t9([t27.attributeData.colorFeature], r25, 1, true)]) : t27.attributeData.color && e36.push([e11.COLOR, new t9(t27.attributeData.color, r25, 4, true)]), t27.attributeData.uvMapSpace && e36.push([e11.UVMAPSPACE, new t9(t27.attributeData.uvMapSpace, t27.indices, 4, true)]), t27.attributeData.boundingRect && e36.push([e11.BOUNDINGRECT, new t9(t27.attributeData.boundingRect, t27.indices, 9, true)]), new f13(t27.material, e36, t27.mapPositions, e23.Mesh, t27.attributeData.objectAndLayerIdColor);
}
function m11(t27, e36 = null) {
  const r25 = [[e11.POSITION, new t9(t27.attributeData.position, t27.indices, 3, true)], [e11.UV0, new t9(t27.attributeData.uv0, t27.indices, 2, true)]];
  return new f13(t27.material, r25, t27.mapPositions, e23.Mesh, e36);
}
function b10(t27) {
  switch (t27.type) {
    case "extent":
      if (t27 instanceof w) return j2.fromExtent(t27);
      break;
    case "polygon":
      return t27;
  }
  return null;
}
var g9 = class {
  constructor(t27, e36, r25) {
    this.renderData = t27, this.layerUid = e36, this.graphicUid = r25, this.outGeometries = new Array();
  }
};

// node_modules/@arcgis/core/views/3d/support/renderInfoUtils/polygon.js
function p20(o27, n33, r25, p25) {
  const c20 = a14(o27.rings, !!o27.hasZ && "on-the-ground" !== p25.mode, p10.CCW_IS_HOLE, o27.spatialReference), a26 = t2(c20.position.length), h15 = u14(c20.position, o27.spatialReference, 0, a26, 0, c20.position, 0, c20.position.length / 3, n33, r25, p25), m17 = null != h15;
  return new g10(c20.position, a26, u17(c20.polygons, c20.position, a26), l21(c20.outlines, c20.position, a26), m17, h15);
}
function c12(t27, n33) {
  const e36 = a14(t27.rings, false, p10.CCW_IS_HOLE), p25 = o2(e36.position, t27.spatialReference, 0, e36.position, n33, 0);
  for (let o27 = 2; o27 < e36.position.length; o27 += 3) e36.position[o27] = te2;
  return { position: e36.position, polygons: u17(e36.polygons, e36.position), outlines: l21(e36.outlines, e36.position), projectionSuccess: p25 };
}
function l21(o27, t27, s27 = null) {
  return o27.filter(({ count: o28 }) => o28 > 1).map(({ index: o28, count: i20 }) => {
    const e36 = 3 * o28, r25 = 3 * i20;
    return null != s27 ? new h10(o28, i20, a4(t27, e36, r25), a4(s27, e36, r25)) : new a20(o28, i20, a4(t27, e36, r25));
  });
}
function u17(o27, t27, s27 = null) {
  const i20 = new Array();
  for (const { index: e36, count: r25, holeIndices: p25, pathLengths: c20 } of o27) {
    if (r25 <= 1) continue;
    const o28 = 3 * e36, l31 = 3 * r25, u26 = p25.map((o29) => o29 - e36), a26 = null != s27 ? new m12(e36, r25, a4(t27, 3 * e36, 3 * r25), a4(s27, o28, l31), u26, c20) : new f19(e36, r25, a4(t27, 3 * e36, 3 * r25), u26, c20);
    i20.push(a26);
  }
  return i20;
}
var a20 = class {
  constructor(o27, t27, n33) {
    this.index = o27, this.count = t27, this.position = n33;
  }
};
var h10 = class extends a20 {
  constructor(o27, t27, n33, s27) {
    super(o27, t27, n33), this.mapPositions = s27;
  }
};
var m12 = class extends h10 {
  constructor(o27, t27, n33, s27, i20, e36) {
    super(o27, t27, n33, s27), this.holeIndices = i20, this.pathLengths = e36;
  }
};
var f19 = class extends a20 {
  constructor(o27, t27, n33, s27, i20) {
    super(o27, t27, n33), this.holeIndices = s27, this.pathLengths = i20;
  }
};
var g10 = class {
  constructor(o27, t27, n33, s27, i20, e36) {
    this.position = o27, this.mapPositions = t27, this.polygons = n33, this.outlines = s27, this.projectionSuccess = i20, this.sampledElevation = e36;
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DExtrudeSymbolLayer.js
var st = ["polygon", "extent"];
var ot2 = class extends y4 {
  constructor(t27, e36, r25, s27) {
    super(t27, e36, r25, s27), this.ensureDrapedStatus(false);
  }
  async doLoad() {
    var _a, _b, _c, _d;
    if (!this._drivenProperties.size) {
      const e37 = U(this._getSymbolSize());
      if (e37) throw new s2("graphics3dextrudesymbollayer:invalid-size", e37);
    }
    const e36 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, r25 = this._getCombinedOpacityAndColor(e36), s27 = u5(r25), o27 = r25[3], i20 = o27 < 1 || this.needsDrivenTransparentPass, n33 = (_d = (_c = this.symbolLayer) == null ? void 0 : _c.material) == null ? void 0 : _d.emissiveFactor, a26 = n33 ? b3(t3(n33)) : _2, l31 = { usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: true, diffuse: s27, ambient: s27, opacity: o27, transparent: i20, cullFace: i20 ? e21.None : e21.Back, hasVertexColors: true, hasSlicePlane: this._context.slicePlaneEnabled, castShadows: this.symbolLayer.castShadows, emissiveFactor: a26, offsetTransparentBackfaces: true, normalType: a7.Compressed };
    this._materials[It.Main] = new z(l31, this._context), this._materials[It.Bottom] = new z({ ...l31, cullFace: e21.Back }, this._context), this._context.stage.addMany(this._materials);
  }
  destroy() {
    super.destroy(), this._context.stage.removeMany(this._materials), this._materials.length = 0;
  }
  createGraphics3DGraphic(t27) {
    const e36 = t27.graphic;
    if (!this._validateGeometry(e36.geometry, st, this.symbolLayer.type)) return null;
    const r25 = this._getVertexOpacityAndColor(t27.renderingInfo, 255), s27 = this.setGraphicElevationContext(e36);
    return this._createAs3DShape(e36, t27.renderingInfo, r25, s27, e36.uid);
  }
  layerOpacityChanged(t27, e36) {
    var _a, _b, _c, _d;
    const r25 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, s27 = this._getCombinedOpacity(r25), o27 = s27 < 1 || this.needsDrivenTransparentPass;
    (_c = this._materials[It.Main]) == null ? void 0 : _c.setParameters({ opacity: s27, transparent: o27 }), (_d = this._materials[It.Bottom]) == null ? void 0 : _d.setParameters({ opacity: s27, transparent: o27 });
    const i20 = this._getLayerOpacity();
    t27.forEach((t28) => {
      var _a2;
      return (_a2 = e36(t28)) == null ? void 0 : _a2.layerOpacityChanged(i20, this._context.isAsync);
    });
  }
  layerElevationInfoChanged(t27, e36) {
    return this.updateGraphics3DGraphicElevationInfo(t27, e36, g8);
  }
  slicePlaneEnabledChanged(t27, e36) {
    var _a, _b;
    return (_a = this._materials[It.Main]) == null ? void 0 : _a.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled }), (_b = this._materials[It.Bottom]) == null ? void 0 : _b.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled }), t27.forEach((t28) => {
      const r25 = e36(t28);
      null != r25 && r25.slicePlaneEnabledChanged(this._context.slicePlaneEnabled, this._context.isAsync);
    }), true;
  }
  physicalBasedRenderingChanged() {
    var _a, _b;
    const t27 = { usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: true };
    return (_a = this._materials[It.Main]) == null ? void 0 : _a.setParameters(t27), (_b = this._materials[It.Bottom]) == null ? void 0 : _b.setParameters(t27), true;
  }
  _getExtrusionSize(t27) {
    let e36;
    return e36 = t27.size && this._drivenProperties.size ? a17(t27.size, 2) ?? 0 : this._getSymbolSize(), e36 /= this._context.renderCoordsHelper.unitInMeters, e36;
  }
  applyRendererDiff(t27, e36) {
    return this._drivenPropertiesChanged(e36) ? e30.RecreateSymbol : e30.RecreateGraphics;
  }
  async queryForSnapping(t27, s27, o27, i20) {
    const n33 = this._getExtrusionSize(o27) * this._context.renderCoordsHelper.unitInMeters / $(s27), { objectId: a26, target: l31 } = t27, c20 = a(l31);
    switch (c20.z = (c20.z ?? 0) + n33, t27.type) {
      case "edge": {
        const { start: r25, end: s28 } = t27, o28 = a(r25), i21 = a(s28);
        return o28.z = (o28.z ?? 0) + n33, i21.z = (i21.z ?? 0) + n33, [e8(a26, c20, 1 / 0, o28, i21)];
      }
      case "vertex":
        return [t5(a26, c20, 1 / 0), e8(a26, l31, 1 / 0, l31, c20)];
      default:
        return [];
    }
  }
  _getSymbolSize() {
    return this.symbolLayer.size ?? 1;
  }
  _createAs3DShape(t27, e36, r25, a26, c20) {
    const m17 = b10(t27.geometry);
    if (null == m17) return null;
    if (0 === m17.rings.length || !m17.rings.some((t28) => t28.length > 0)) return this._logGeometryValidationWarnings(m17.rings, "rings", "ExtrudeSymbol3DLayer"), null;
    const p25 = p20(m17, this._context.elevationProvider, this._context.renderCoordsHelper, a26);
    this._logGeometryCreationWarnings(p25, m17.rings, "rings", "ExtrudeSymbol3DLayer");
    const h15 = b6(m17);
    if (null == h15) return null;
    const g14 = new Array(), d16 = new Array(), u26 = u4(), f28 = e15(), y11 = n3(), b19 = this._context.renderCoordsHelper.viewingMode === l8.Global;
    b19 || this._context.renderCoordsHelper.worldUpAtPosition(null, y11), m5(m17.spatialReference, [h15.x, h15.y, 0], f28, this._context.renderCoordsHelper.spatialReference);
    const _12 = e15();
    h4(_12, f28);
    const v7 = e14();
    j4(v7, _12);
    const { polygons: M8, mapPositions: I14, position: A13 } = p25, B5 = /* @__PURE__ */ new Map(), T6 = this._materials[It.Main];
    for (const o27 of M8) {
      const t28 = o27.count;
      if (this._context.clippingExtent && (m2(o27.mapPositions, u26), !A2(u26, this._context.clippingExtent))) continue;
      const i20 = e16(o27.mapPositions, o27.holeIndices, 3);
      if (0 === i20.length) continue;
      const n33 = i20.length, a27 = 6 * t28, l31 = i4(a27 + n33), m18 = i4(n33), p26 = t2(3 * a27), h16 = t2(3 * a27), x9 = t2(3 * a27), S10 = t2(a27);
      nt(A13, I14, i20, o27, p26, x9, h16, S10, l31, m18, this._getExtrusionSize(e36), y11, b19), r10(p26, p26, _12);
      const j13 = this._context.stage.renderView.getObjectAndLayerIdColor({ graphicUid: c20, layerUid: this._context.layer.uid }), v8 = new At(p26, x9, e13(h16), S10), M9 = it(T6, l31, l31.length - m18.length, v8, r25, j13), L9 = t28, z5 = t28, D6 = 2 * o27.count, R13 = new Lt(L9, z5, D6, n33 / 3);
      _t(M9, R13, f28), B5.set(M9, R13), g14.push(M9, it(this._materials[It.Bottom], m18, 0, v8, r25, j13)), d16.push(v8.heights);
    }
    if (0 === g14.length) return null;
    const U7 = new A8({ geometries: g14, layerUid: this._context.layer.uid, graphicUid: c20, isElevationSource: true });
    U7.transformation = f28;
    const N10 = a8(this.symbolLayer, { opacity: this._getLayerOpacity() }), k12 = N10 ? new j8(this._materials[It.Main], N10, this._context.slicePlaneEnabled) : null, H9 = new p16(this, U7, g14, null, null, (t28, e37, r26, s27, o27) => bt(t28, e37, r26, s27, o27, d16, B5), a26, k12);
    return H9.alignedSampledElevation = p25.sampledElevation, H9.needsElevationUpdates = g8(a26.mode), H9;
  }
};
function it(t27, e36, r25, s27, o27, i20) {
  const n33 = w3(e36.length), a26 = [[e11.POSITION, new t9(s27.positions, e36, 3, true)], [e11.NORMALCOMPRESSED, new t9(s27.normals, e36, 2, true)], [e11.COLOR, new t9(o27, n33, 4, true)]];
  return new f13(t27, a26, s27.elevation, e23.Mesh, i20, r25);
}
function nt(t27, e36, r25, s27, o27, i20, n33, a26, l31, c20, m17, p25, h15) {
  {
    const g14 = r25.length / 3, d16 = 2 * s27.count;
    at(t27, e36, s27.index, s27.count, r25, 0, g14, o27, i20, n33, a26, l31, c20, d16, m17, p25, h15);
  }
  {
    let t28 = 0, e37 = 2 * s27.count, r26 = 0;
    const c21 = s27.pathLengths[0];
    mt(o27, i20, a26, n33, t28, c21, s27.count, e37, l31, r26, m17), e37 += 4 * c21, r26 += 2 * c21, t28 += c21;
    for (let p26 = 1; p26 < s27.pathLengths.length; ++p26) {
      const c22 = s27.pathLengths[p26];
      mt(o27, i20, a26, n33, t28, c22, s27.count, e37, l31, r26, m17), e37 += 4 * c22, r26 += 2 * c22, t28 += c22;
    }
  }
}
function at(t27, e36, r25, s27, o27, i20, n33, a26, l31, c20, h15, g14, d16, u26, f28, y11, b19) {
  s10(St, y11);
  {
    const o28 = f28 > 0 ? 1 : -1;
    let i21 = 3 * r25, n34 = 0, m17 = 3 * n34, g15 = s27, d17 = 3 * g15;
    for (let r26 = 0; r26 < s27; ++r26) {
      const r27 = t27[i21], s28 = t27[i21 + 1], u27 = t27[i21 + 2];
      b19 && (St[0] = r27, St[1] = s28, St[2] = u27, A3(St, St)), a26[m17 + 0] = r27, a26[m17 + 1] = s28, a26[m17 + 2] = u27;
      const y12 = e36[i21 + 0], _12 = e36[i21 + 1], x9 = e36[i21 + 2];
      l31[m17 + 0] = y12, l31[m17 + 1] = _12, l31[m17 + 2] = x9, c20[m17 + 0] = -o28 * St[0], c20[m17 + 1] = -o28 * St[1], c20[m17 + 2] = -o28 * St[2], h15[n34] = 0, a26[d17 + 0] = r27 + f28 * St[0], a26[d17 + 1] = s28 + f28 * St[1], a26[d17 + 2] = u27 + f28 * St[2], l31[d17 + 0] = y12, l31[d17 + 1] = _12, l31[d17 + 2] = x9, h15[g15] = f28, m17 += 3, d17 += 3, i21 += 3, n34 += 1, g15 += 1;
    }
  }
  {
    let t28 = 3 * i20, e37 = 0, r26 = 3 * u26;
    const a27 = f28 < 0 ? Et : Pt, l32 = f28 < 0 ? Pt : Et;
    for (let i21 = 0; i21 < n33; ++i21) d16[e37] = o27[t28 + a27[0]], d16[e37 + 1] = o27[t28 + a27[1]], d16[e37 + 2] = o27[t28 + a27[2]], g14[r26] = o27[t28 + l32[0]] + s27, g14[r26 + 1] = o27[t28 + l32[1]] + s27, g14[r26 + 2] = o27[t28 + l32[2]] + s27, e37 += 3, r26 += 3, t28 += 3;
  }
}
function lt2(t27, e36, r25, s27, o27, i20, n33) {
  s27[i20] = s27[n33], n33 *= 3, t27[i20 *= 3] = t27[n33], t27[i20 + 1] = t27[n33 + 1], t27[i20 + 2] = t27[n33 + 2], e36[i20] = e36[n33], e36[i20 + 1] = e36[n33 + 1], e36[i20 + 2] = e36[n33 + 2], r25[i20] = o27[0], r25[i20 + 1] = o27[1], r25[i20 + 2] = o27[2];
}
var ct = n3();
function mt(t27, e36, r25, s27, o27, i20, n33, a26, l31, c20, m17) {
  let p25 = o27, h15 = o27 + 1, g14 = o27 + n33, d16 = o27 + n33 + 1, u26 = a26, f28 = a26 + 1, y11 = a26 + 2 * i20, b19 = a26 + 2 * i20 + 1;
  m17 < 0 && (p25 = o27 + n33 + 1, d16 = o27);
  let _12 = 3 * c20;
  for (let x9 = 0; x9 < i20; ++x9) x9 === i20 - 1 && (h15 = o27, m17 > 0 ? d16 = o27 + n33 : p25 = o27 + n33), ft(t27, p25, h15, g14, ct), lt2(t27, e36, s27, r25, ct, u26, p25), lt2(t27, e36, s27, r25, ct, f28, h15), lt2(t27, e36, s27, r25, ct, y11, g14), lt2(t27, e36, s27, r25, ct, b19, d16), l31[_12] = u26, l31[_12 + 1] = y11, l31[_12 + 2] = b19, l31[_12 + 3] = u26, l31[_12 + 4] = b19, l31[_12 + 5] = f28, _12 += 6, p25++, h15++, g14++, d16++, u26 += 2, f28 += 2, y11 += 2, b19 += 2;
}
var pt = n3();
var ht = n3();
var gt = n3();
var dt = n3();
var ut = n3();
function ft(t27, e36, r25, s27, o27) {
  e36 *= 3, r25 *= 3, s27 *= 3, o6(pt, t27[e36++], t27[e36++], t27[e36++]), o6(ht, t27[r25++], t27[r25++], t27[r25++]), o6(gt, t27[s27++], t27[s27++], t27[s27++]), c2(dt, ht, pt), c2(ut, gt, pt), _3(o27, ut, dt), A3(o27, o27);
}
var yt = n3();
function bt(t27, e36, r25, s27, o27, i20, n33) {
  const c20 = t27.stageObject, m17 = c20.geometries, p25 = m17.length, g14 = "absolute-height" !== e36.mode;
  let d16 = 0;
  const f28 = c20.transformation, y11 = e7(e15(), f28);
  for (let a26 = 0; a26 < p25; a26 += 2) {
    const t28 = m17[a26];
    if (!e29(t28)) continue;
    const e37 = t28.getMutableAttribute(e11.POSITION).data, l31 = i20[a26 / 2], p26 = new r15(t28.mapPositions), b19 = e37.length / 3;
    let _12 = false, x9 = 0;
    {
      let t29 = 0;
      for (let i21 = 0; i21 < b19; i21++) {
        yt[0] = e37[t29], yt[1] = e37[t29 + 1], yt[2] = e37[t29 + 2], s27(p26, jt), g14 && (x9 += jt.sampledElevation), t11.TESTS_DISABLE_OPTIMIZATIONS ? (o6(xt, p26.array[p26.offset], p26.array[p26.offset + 1], jt.z + l31[t29 / 3]), null != r25 && o27.toRenderCoords(xt, r25, xt), E2(xt, xt, y11)) : (o6(xt, e37[t29], e37[t29 + 1], e37[t29 + 2]), E2(xt, xt, f28), o27.setAltitude(xt, jt.z + l31[t29 / 3]), E2(xt, xt, y11)), e37[t29] = xt[0], e37[t29 + 1] = xt[1], e37[t29 + 2] = xt[2];
        const i22 = wt / o27.unitInMeters;
        (Math.abs(yt[0] - e37[t29]) >= i22 || Math.abs(yt[1] - e37[t29 + 1]) >= i22 || Math.abs(yt[2] - e37[t29 + 2]) >= i22) && (_12 = true), p26.offset += 3, t29 += 3;
      }
    }
    if (_12) {
      const e38 = n33.get(t28);
      e38 && _t(t28, e38, f28), c20.geometryVertexAttributeUpdated(m17[a26], e11.NORMALCOMPRESSED), t28.invalidateBoundingInfo(), c20.geometryVertexAttributeUpdated(m17[a26], e11.POSITION), m17[a26 + 1].invalidateBoundingInfo(), c20.geometryVertexAttributeUpdated(m17[a26 + 1], e11.POSITION);
    }
    d16 += x9 / b19;
  }
  return d16 / p25;
}
function _t(t27, e36, r25) {
  const s27 = t27.getMutableAttribute(e11.POSITION), o27 = t27.getMutableAttribute(e11.NORMALCOMPRESSED).data, { topVertexStart: i20, topVertexCount: n33, topFaceStart: a26, topFaceCount: l31 } = e36, c20 = s27.data, m17 = n33, g14 = t27.attributes.get(e11.POSITION).indices, y11 = a26 + l31, b19 = i20 + n33, _12 = t2(3 * m17);
  for (let p25 = 0; p25 < m17; ++p25) {
    const t28 = 3 * p25;
    _12[t28 + 0] = 0, _12[t28 + 1] = 0, _12[t28 + 2] = 0;
  }
  const x9 = Ot, S10 = vt, j13 = Ct, P10 = Mt2, E13 = St;
  for (let w13 = a26; w13 < y11; ++w13) {
    const t28 = 3 * w13;
    for (let e37 = 0; e37 < 3; ++e37) {
      const s28 = g14[t28 + e37];
      P10[e37] = s28;
      const o28 = 3 * s28;
      o6(xt, c20[o28 + 0], c20[o28 + 1], c20[o28 + 2]), E2(x9[e37], xt, r25);
    }
    R2(S10, x9[1], x9[0]), R2(j13, x9[2], x9[0]), _3(E13, S10, j13), A3(E13, E13);
    for (let e37 = 0; e37 < 3; ++e37) {
      const t29 = 3 * (P10[e37] - i20);
      _12[t29 + 0] += E13[0], _12[t29 + 1] += E13[1], _12[t29 + 2] += E13[2];
    }
  }
  for (let p25 = i20; p25 < b19; ++p25) {
    const t28 = 3 * (p25 - i20), e37 = _12[t28 + 0], r26 = _12[t28 + 1], s28 = _12[t28 + 2], n34 = Math.sqrt(e37 * e37 + r26 * r26 + s28 * s28);
    s13(o27, p25, e37 / n34, r26 / n34, s28 / n34);
  }
}
var xt = n3();
var St = n3();
var jt = new R4();
var Pt = [0, 2, 1];
var Et = [0, 1, 2];
var wt = 0.01;
var Ot = [n3(), n3(), n3()];
var vt = n3();
var Ct = n3();
var Mt2 = [0, 0, 0];
var It;
!function(t27) {
  t27[t27.Main = 0] = "Main", t27[t27.Bottom = 1] = "Bottom";
}(It || (It = {}));
var At = class {
  constructor(t27, e36, r25, s27) {
    this.positions = t27, this.elevation = e36, this.normals = r25, this.heights = s27;
  }
};
var Lt = class {
  constructor(t27, e36, r25, s27) {
    this.topVertexStart = t27, this.topVertexCount = e36, this.topFaceStart = r25, this.topFaceCount = s27;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/focusArea/FocusAreaColorTechnique.js
var a21 = class extends l9 {
  constructor(r25, s27) {
    super(r25, s27, new t13(u16, () => import("./FocusAreaColor.glsl-UPJR5VZY.js")));
  }
  initializePipeline() {
    return B2({ colorWrite: g5 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/focusArea/FocusAreaColorNode.js
var n21 = class extends h7 {
  constructor(e36) {
    super({ ...e36, view: e36.focusAreas.view }), this.consumes = { required: [n14.COMPOSITE, t16.FOCUSAREA] }, this.produces = n14.COMPOSITE, this._passParameters = new t23();
  }
  precompile() {
    this.techniques.precompile(a21);
  }
  render(e36) {
    const r25 = this.techniques.get(a21), s27 = e36.find(({ name: e37 }) => e37 === n14.COMPOSITE);
    if (!r25.compiled) return this.requestRender(), s27;
    const i20 = this.bindParameters, a26 = i20.camera, n33 = a26.fullViewport[2], p25 = a26.fullViewport[3], m17 = e36.find(({ name: e37 }) => e37 === t16.FOCUSAREA), h15 = this.fboCache.acquire(n33, p25, this.produces), d16 = this.renderingContext;
    return d16.gl.clear(d16.gl.STENCIL_BUFFER_BIT), d16.bindFramebuffer(h15.fbo), this._passParameters.color = s27.getTexture(), this._passParameters.focusArea = m17.getTexture(), this._passParameters.effect = u18[this.focusAreas.style], d16.bindTechnique(r25, i20, this._passParameters), d16.screen.draw(), h15.attachDepth(s27.getAttachment(this.gl.DEPTH_STENCIL_ATTACHMENT)), h15;
  }
};
var p21;
r2([m()], n21.prototype, "consumes", void 0), r2([m()], n21.prototype, "produces", void 0), r2([m({ constructOnly: true })], n21.prototype, "focusAreas", void 0), n21 = r2([a3("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaColorNode")], n21), function(e36) {
  e36[e36.NONE = 0] = "NONE", e36[e36.BRIGHT = 1] = "BRIGHT", e36[e36.DARK = 2] = "DARK";
}(p21 || (p21 = {}));
var u18 = { none: p21.NONE, bright: p21.BRIGHT, dark: p21.DARK };

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/focusArea/FocusAreaMaskTechnique.js
var i15 = class extends l9 {
  constructor(r25, o27) {
    super(r25, o27, new t13(f18, () => import("./FocusAreaMask.glsl-G7NEO73L.js")));
  }
  initializePipeline() {
    return B2({ colorWrite: g5, depthTest: { func: O.LEQUAL } });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/focusArea/FocusAreaMaskNode.js
var b11 = class extends h7 {
  constructor(e36) {
    super({ ...e36, view: e36.focusAreas.view }), this.consumes = { required: [t16.FOCUSAREA, n14.TRANSPARENT] }, this.produces = t16.FOCUSAREA, this._vaos = new Array(), this._counts = new Array(), this._origins = new Array(), this._maskParameters = new l19();
  }
  initialize() {
    this.updateGeometries();
  }
  destroy() {
    this._vaos.forEach((e36) => e36.dispose()), this._vaos.length = this._counts.length = this._origins.length = 0;
  }
  precompile() {
    this.techniques.precompile(i15);
  }
  render(e36) {
    const t27 = this.techniques.get(i15), s27 = this.bindParameters, n33 = s27.camera, c20 = n33.fullViewport[2], h15 = n33.fullViewport[3], p25 = this.fboCache.acquire(c20, h15, t16.FOCUSAREA, R3.RGBA);
    if (!t27.compiled || !this._vaos) return this.requestRender(), p25;
    const l31 = e36.find(({ name: e37 }) => e37 === n14.TRANSPARENT), u26 = this.renderingContext;
    p25.attachDepth(l31.getAttachment(this.gl.DEPTH_STENCIL_ATTACHMENT)), u26.bindFramebuffer(p25.fbo), u26.clear(_5.COLOR | _5.STENCIL), u26.setViewport(0, 0, c20, h15), u26.gl.clearStencil(0), u26.gl.clear(u26.gl.STENCIL_BUFFER_BIT), u26.setClearStencil(0);
    const E13 = u26.bindTechnique(t27, s27);
    u26.setFaceCullingEnabled(false), u26.setStencilTestEnabled(true), u26.setStencilOpSeparate(N3.FRONT, I2.KEEP, I2.INCR_WRAP, I2.KEEP), u26.setStencilOpSeparate(N3.BACK, I2.KEEP, I2.DECR_WRAP, I2.KEEP), u26.setDepthWriteEnabled(false);
    for (let r25 = 0; r25 < this._vaos.length; r25++) {
      const e37 = this._vaos[r25], t28 = this._counts[r25];
      this._maskParameters.origin = this._origins[r25], E13.bindDraw(s27, e22, this._maskParameters), u26.bindVAO(e37), u26.setStencilWriteMask(255), u26.setStencilFunction(O.ALWAYS, 0, 255), u26.setColorMask(false, false, false, false), u26.drawArrays(E3.TRIANGLES, 0, t28), u26.setStencilWriteMask(0), u26.setStencilFunction(O.NOTEQUAL, 0, 255), u26.setColorMask(true, true, true, true), u26.drawArrays(E3.TRIANGLES, 0, t28);
    }
    return p25;
  }
  updateGeometries() {
    if (!this.view._stage) return;
    this._vaos.forEach((e37) => e37.dispose()), this._vaos.length = this._counts.length = this._origins.length = 0;
    const e36 = this.focusAreas.geometries;
    for (const t27 of e36) {
      const e37 = new Array(), s27 = t27.indicesBottom;
      for (let n33 = 0; n33 < s27.length; n33++) e37.push(t27.positions[3 * (s27[n33] - 1)]), e37.push(t27.positions[3 * (s27[n33] - 1) + 1]), e37.push(t27.positions[3 * (s27[n33] - 1) + 2]);
      const r25 = t27.indicesExtruded;
      for (let n33 = 0; n33 < r25.length; n33++) e37.push(t27.positions[3 * r25[n33]]), e37.push(t27.positions[3 * r25[n33] + 1]), e37.push(t27.positions[3 * r25[n33] + 2]);
      const o27 = new Float32Array(e37), i20 = new r13(this.renderingContext, O3, /* @__PURE__ */ new Map([["geometry", o19]]), /* @__PURE__ */ new Map([["geometry", E5.createVertex(this.renderingContext, F.STATIC_DRAW, o27)]]));
      this._vaos.push(i20), this._counts.push(s27.length + r25.length), this._origins.push(t27.origin);
    }
    this.requestRender();
  }
};
r2([m()], b11.prototype, "consumes", void 0), r2([m()], b11.prototype, "produces", void 0), r2([m({ constructOnly: true })], b11.prototype, "focusAreas", void 0), b11 = r2([a3("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaMaskNode")], b11);
var w8 = class {
  constructor(e36, t27, s27, r25, o27, i20) {
    this.positions = e36, this.indicesBottom = t27, this.indicesExtruded = s27, this.height = r25, this.origin = o27, this.color = i20;
  }
};
var R5;
!function(e36) {
  e36[e36.NONE = 0] = "NONE", e36[e36.BRIGHT = 1] = "BRIGHT", e36[e36.DARK = 2] = "DARK";
}(R5 || (R5 = {}));

// node_modules/@arcgis/core/views/FocusAreas.js
var G2 = 0;
var N6 = 5e6;
var k5 = 0.42;
var x4 = 0.32;
function C5(e36, o27) {
  if (e36) {
    if ("bright" === o27) {
      const o28 = (e36[0] + e36[1] + e36[2]) / 3;
      return [o28 * x4 + (1 - x4), o28 * x4 + (1 - x4), o28 * x4 + (1 - x4), e36[3] * x4];
    }
    return "dark" === o27 ? [e36[0] * k5, e36[1] * k5, e36[2] * k5, e36[3] * k5] : e36;
  }
}
var F2 = class extends g {
  constructor(e36) {
    super(e36), this.style = "dark", this.geometries = new Array(), this._areas = new V(), this._elevationContext = new o20();
  }
  initialize() {
    this.addHandles([d2(() => this.style, () => this._updateRenderNodes(), A)]), this.addHandles([d2(() => this.activePolygons, () => this._updateFocusAreaGeometries(), A)]);
  }
  get activePolygons() {
    const e36 = new V();
    for (const o27 of this.areas) if (o27.enabled) for (const s27 of o27.geometries) e36.push(s27);
    return e36;
  }
  add(e36) {
    this.areas.add(e36), this._updateFocusAreaGeometries();
  }
  addMany(e36) {
    this.areas.addMany(e36), this._updateFocusAreaGeometries();
  }
  remove(e36) {
    this.areas.remove(e36), this._updateFocusAreaGeometries();
  }
  removeMany(e36) {
    this.areas.removeMany(e36), this._updateFocusAreaGeometries();
  }
  removeAll() {
    this.areas.removeAll(), this._updateFocusAreaGeometries();
  }
  containsGeometry(e36) {
    let o27 = true;
    const s27 = new j(e36);
    return o27 = this.areas.some((e37) => !!e37.enabled && (!!(e37 == null ? void 0 : e37.geometries.length) && e37.geometries.some((e38) => e38.contains(s27)))), o27;
  }
  get areas() {
    return this._areas;
  }
  _updateFocusAreaGeometries() {
    this._extrudePolygons(), this._updateRenderNodes();
  }
  _extrudePolygons() {
    var _a, _b;
    if (!this.view.renderCoordsHelper) return;
    this.geometries.length = 0;
    const e36 = N6 - G2, o27 = n3(), s27 = this.view.renderCoordsHelper.viewingMode === l8.Global, r25 = e15(), t27 = e15();
    s27 || this.view.renderCoordsHelper.worldUpAtPosition([0, 0, 0], o27);
    for (const i20 of this.areas) if (i20.enabled) for (const a26 of i20.geometries) {
      const n33 = b6(a26);
      if (null == n33) continue;
      m5(a26.spatialReference, [n33.x, n33.y, 0], r25, this.view.renderCoordsHelper.spatialReference);
      const m17 = A3(P4, [r25[12] - G2 * o27[0], r25[13] - G2 * o27[1], r25[14] - G2 * o27[2]]);
      t27[12] = -r25[12], t27[13] = -r25[13], t27[14] = -r25[14];
      const p25 = p20(a26, this.view.elevationProvider, this.view.renderCoordsHelper, this._elevationContext), { polygons: l31, mapPositions: y11, position: v7 } = p25;
      for (const a27 of l31) {
        const n34 = a27.count, d16 = e16(a27.mapPositions, a27.holeIndices, 3);
        if (0 === d16.length) continue;
        const p26 = d16.length, l32 = 6 * n34, h15 = i4(l32 + p26), _12 = i4(p26), w13 = t2(3 * l32), A13 = t2(3 * l32), R13 = t2(3 * l32), N10 = t2(l32);
        nt(v7, y11, d16, a27, w13, R13, A13, N10, h15, _12, e36, o27, s27), r10(w13, w13, t27);
        const k12 = new w8(w13, _12, h15, e36, [r25[12] + G2 * m17[0], r25[13] + G2 * m17[1], r25[14] + G2 * m17[2]], (_a = i20.outline) == null ? void 0 : _a.color);
        this.geometries.push(k12);
      }
    }
    (_b = this._maskRenderNode) == null ? void 0 : _b.updateGeometries();
  }
  _updateRenderNodes() {
    this.view._stage && ("none" === this.style || 0 === this.geometries.length ? (this._maskRenderNode = u(this._maskRenderNode), this._colorRenderNode = u(this._colorRenderNode)) : (this._maskRenderNode ?? (this._maskRenderNode = new b11({ focusAreas: this })), this._colorRenderNode ?? (this._colorRenderNode = new n21({ focusAreas: this }))));
  }
};
r2([m()], F2.prototype, "activePolygons", null), r2([m()], F2.prototype, "style", void 0), r2([m()], F2.prototype, "geometries", void 0), r2([m({ constructOnly: true })], F2.prototype, "view", void 0), r2([m()], F2.prototype, "_areas", void 0), F2 = r2([a3("esri.views.FocusAreas")], F2);
var P4 = n3();

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DDrapedGraphicLayer.js
var l22 = class {
  constructor(e36, t27, i20, r25) {
    this.graphics3DSymbolLayer = e36, this.renderGeometries = t27, this.boundingBox = i20, this._drapeSourceRenderer = r25, this.type = "draped", this.stage = null, this._visible = false, this._addedToStage = false, this.isElevationSource = false;
  }
  initialize(e36) {
    this.stage = e36.stage;
  }
  setVisibility(e36) {
    if (null != this.stage && this._visible !== e36) {
      if (this._visible = e36, e36 && !this._addedToStage) return this._addedToStage = true, void this._drapeSourceRenderer.addGeometries(this.renderGeometries, E8.ADD);
      if (e36 || this._addedToStage) {
        for (const e37 of this.renderGeometries) e37.visible = this._visible;
        this._drapeSourceRenderer.modifyGeometries(this.renderGeometries, I3.VISIBILITY);
      }
    }
  }
  destroy() {
    this.stage && this._addedToStage && this._drapeSourceRenderer.removeGeometries(this.renderGeometries, E8.REMOVE), this._addedToStage = false, this._visible = false, this.stage = null;
  }
  getCenterObjectSpace(i20 = n3()) {
    return o6(i20, 0, 0, 0);
  }
  getBoundingBoxObjectSpace(e36 = u4()) {
    return q(e36);
  }
  addObjectState(e36) {
    e36.stateType === t12.Highlight && (this.renderGeometries.forEach((t27) => {
      const i20 = t27.geometry.allocateIdAndHighlight(e36.highlightName);
      e36.addRenderGeometry(t27, i20, this);
    }), this._addedToStage && this._drapeSourceRenderer.modifyGeometries(this.renderGeometries, I3.HIGHLIGHT));
  }
  removeObjectState(e36) {
    this.renderGeometries.forEach((t27) => e36.removeByObject(t27));
  }
  updateHighlights(e36) {
  }
  removeRenderGeometryObjectState(e36, t27) {
    t27.channel === t12.Highlight && (e36.geometry.removeHighlight(t27), this._addedToStage && this._drapeSourceRenderer.modifyGeometries([e36], I3.HIGHLIGHT));
  }
  computeAttachmentOrigin(e36) {
    for (const t27 of this.renderGeometries) t27.geometry.computeAttachmentOrigin(f20) && (e36.draped.origin[0] += f20[0], e36.draped.origin[1] += f20[1], e36.draped.num++);
  }
  async getProjectedBoundingBox(e36, t27, i20, d16, n33) {
    q(n33);
    for (let r25 = 0; r25 < this.renderGeometries.length; r25++) {
      const t28 = this.renderGeometries[r25];
      this._getRenderGeometryProjectedBoundingRect(t28, e36, u19, i20), x(n33, u19);
    }
    if (t27) {
      let e37;
      p(n33, f20);
      const i21 = E7(n33, t27.service.spatialReference, t27);
      try {
        e37 = await t27.service.queryElevation(f20[0], f20[1], d16, i21, "ground");
      } catch (a26) {
      }
      null != e37 && (n33[2] = Math.min(n33[2], e37), n33[5] = Math.max(n33[5], e37));
    }
    return n33;
  }
  _getRenderGeometryProjectedBoundingRect(e36, t27, i20, r25) {
    if (this.boundingBox) d3(p22, this.boundingBox);
    else {
      const t28 = e36.boundingSphere, i21 = t28[3];
      p22[0] = t28[0] - i21, p22[1] = t28[1] - i21, p22[2] = t28[2] - i21, p22[3] = t28[0] + i21, p22[4] = t28[1] + i21, p22[5] = t28[2] + i21;
    }
    return t27(p22, 0, 2), this.calculateRelativeScreenBounds && r25.push({ location: p(p22), screenSpaceBoundingRect: this.calculateRelativeScreenBounds() }), w2(p22, i20);
  }
};
var u19 = u3();
var p22 = u4();
var f20 = n3();

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DIconSymbolLayer.js
var se = r4(0, 0, 1);
var oe = 16;
var ae2 = 1.5;
var ne = [o17 * a12, o17 * a12];
var le = class _le extends y4 {
  getCachedSize() {
    return { size: this._getIconSize() };
  }
  constructor(e36, t27, r25, i20) {
    super(e36, t27, r25, i20), this._cimData = null, this._overrideHelperClass = null, this._arcadeInfo = null, this._cimSymbolMaterials = /* @__PURE__ */ new Map(), this._cimSymbolTextures = /* @__PURE__ */ new Map(), this._cimMaterialParametersInfo = null, this._cimScaleFactorOrFunction = null, this._size = null, this._symbolTextureRatio = 1, this._outlineSize = 0, this._textureHandle = null, this._patchTask = null, this._elevationOptions = { supportsOffsetAdjustment: true, supportsOnTheGround: true };
  }
  async doLoad(e36) {
    this._validateOrThrow();
    const t27 = this._prepareMaterialParameters(), r25 = this._getPrimitive();
    if (null != r25) this._prepareResourcesPrimitive(t27, r25);
    else {
      const r26 = p11(this.symbolLayer), i20 = ue(r26);
      null != i20 ? await this._prepareResourcesCIM(t27, JSON.parse(i20), e36) : await this._prepareResourcesHref(t27, r26, e36);
    }
  }
  _validateOrThrow() {
    if (this._drivenProperties.size) return;
    const e36 = U(this._getIconSize());
    if (e36) throw new s2("graphics3diconsymbollayer:invalid-size", e36);
  }
  _getIconSize() {
    const e36 = this.symbolLayer, t27 = Math.round(null != e36.size ? u6(e36.size) : oe);
    return this._drivenProperties.size ? Math.max(t27, 64) : t27;
  }
  _generateTextureCIM(e36) {
    const t27 = this._overrideHelperClass;
    let r25 = this._cimData;
    if (t27 && r25 && r25.symbol || this.logger.error("Can't create texture, CIM data is undefined"), r25.primitiveOverrides) {
      r25 = a(r25);
      const i21 = r25.primitiveOverrides;
      t27.evaluateOverrides(i21, e36, this._arcadeInfo.geometryType, null, null), t27.applyOverrides(r25.symbol, i21);
    }
    const i20 = l(JSON.stringify(r25));
    let o27 = this._cimSymbolTextures.get(i20);
    if (o27) return o27;
    const a26 = this._context.sharedResources.cimSymbolRasterizer, n33 = this._context.renderer && "dictionary" === this._context.renderer.type ? this._context.renderer.fieldMap : null;
    n33 && t27.applyDictionaryTextOverrides(r25.symbol, e36, n33, null);
    const l31 = null != this._cimScaleFactorOrFunction ? n9(this._cimScaleFactorOrFunction, e36) : 1;
    1 !== l31 && r25.symbol && l14(r25.symbol, l31, true);
    const c20 = te.getEnvelope(r25, null, a26.resourceManager);
    if ((c20 == null ? void 0 : c20.width) && c20.height) {
      const e37 = c20.x + c20.width / 2, t28 = c20.y + c20.height / 2, i21 = a26.rasterize({ type: "cim", data: r25 }, c20.width, c20.height, e37, t28, 1, "esriGeometryPoint", 0, null, this._context.graphicsCoreOwner.view.state.rasterPixelRatio), s27 = new p9({ x: -c20.x / c20.width - 0.5, y: (c20.height + c20.y) / c20.height - 0.5 });
      this._cimMaterialParametersInfo.anchorPosition = me("relative", s27), o27 = new N5(i21, { width: (i21 == null ? void 0 : i21.width) ?? 1, height: (i21 == null ? void 0 : i21.height) ?? 1, reloadable: true });
    } else o27 = new N5(new ImageData(1, 1), { width: 1, height: 1, reloadable: true });
    return this._cimSymbolTextures.set(i20, o27), this._context.stage.add(o27), o27;
  }
  _prepareMaterialParameters() {
    const e36 = { anchorPosition: me(this.symbolLayer.anchor, this.symbolLayer.anchorPosition), rotation: this.symbolLayer.angle }, t27 = this.symbol;
    if (ce(t27)) {
      const { screenLength: r26, minWorldLength: i20, maxWorldLength: s27 } = t27.verticalOffset;
      e36.verticalOffset = { screenLength: u6(r26), minWorldLength: i20 || 0, maxWorldLength: null != s27 ? s27 : 1 / 0 };
    }
    this._context.screenSizePerspectiveEnabled && (e36.screenSizePerspective = this._context.sharedResources.screenSizePerspectiveSettings), (0 !== e36.rotation || this._drivenProperties.rotation) && (e36.hasRotation = true);
    const r25 = !!has("enable-feature:non-occluded-hud");
    return e36.occlusionTest = !r25, e36.occludedFragmentFade = r25, e36.horizonCullingEnabled = r25 && this._context.spherical, e36.hasSlicePlane = this._context.slicePlaneEnabled, e36;
  }
  _prepareResourcesPrimitive(e36, t27) {
    const r25 = this._getOutlineSize();
    if (he(t27) && 0 === r25) throw new Error("Nothing to render");
    if (this._outlineSize = r25, e36.color = this._getFillColor(), e36.outlineColor = this._getOutlineColor(), e36.outlineSize = this._outlineSize, null != this._context.sharedResources.textures) {
      const r26 = this._context.sharedResources.textures.fromData(`${t27}-icon`, () => u13(t27));
      this._textureHandle = r26, e36.textureId = r26.texture.id;
    }
    e36.textureIsSignedDistanceField = true, e36.sampleSignedDistanceFieldTexelCenter = s17(t27), e36.distanceFieldBoundingBox = c7;
    const i20 = this._getIconSize();
    this._size = [i20, i20], this._symbolTextureRatio = 1 / a12, this._createMaterialAndAddToStage(e36, this._context.stage);
  }
  async _prepareResourcesHref(e36, r25, s27) {
    this._outlineSize = this._getOutlineSize(), e36.color = this._getFillColor(), e36.outlineColor = this._getOutlineColor(), e36.outlineSize = this._outlineSize, e36.textureIsSignedDistanceField = false;
    const o27 = this._getIconSize(), a26 = o27 * this._context.graphicsCoreOwner.view.state.rasterPixelRatio;
    if (null != this._context.sharedResources.textures) {
      const l31 = await _(this._context.sharedResources.textures.fromUrl(r25, a26, { signal: s27 }));
      if (false === l31.ok) {
        a2(l31.error);
        throw new s2("graphics3diconsymbollayer:request-failed", `Failed to load (Request for icon resource failed: ${r25})`);
      }
      this._textureHandle = l31.value;
      const c20 = l31.value.texture;
      this._size = de(c20, o27), e36.textureId = c20.id;
    }
    this._createMaterialAndAddToStage(e36, this._context.stage);
  }
  async _prepareResourcesCIM(e36, t27, r25) {
    const { OverrideHelper: i20 } = await import("./OverrideHelper-4KRPQ524.js");
    if (this._overrideHelperClass = i20, this._cimData = t27, !this._context.sharedResources.cimSymbolRasterizer) {
      const e37 = (await import("./CIMSymbolRasterizer-RCSZEGJC.js")).CIMSymbolRasterizer;
      s3(r25), this._context.sharedResources.cimSymbolRasterizer || (this._context.sharedResources.cimSymbolRasterizer = new e37(this._context.renderCoordsHelper.spatialReference));
    }
    const s27 = this._context.sharedResources.cimSymbolRasterizer, o27 = [], a26 = t27, n33 = a26 == null ? void 0 : a26.symbol;
    te.fetchResources(n33, s27.resourceManager, o27, r25), te.fetchFonts(n33, s27.resourceManager, o27);
    const c20 = this._context.layer.fields ? this._context.layer.fields.map((e37) => e37.toJSON()) : [], h15 = this._context.renderCoordsHelper.spatialReference;
    if (this._arcadeInfo = { spatialReference: h15, fields: c20, geometryType: "esriGeometryPoint" }, (a26 == null ? void 0 : a26.primitiveOverrides) && o27.push(i20.createRenderExpressions(a26.primitiveOverrides, this._arcadeInfo)), o27.length > 0 && (await Promise.all(o27), s3(r25)), this._context.renderer && "dictionary" === this._context.renderer.type && this._context.renderer.scaleExpression) {
      const e37 = this._context.renderer;
      if (e37.scaleExpression) {
        const t28 = e37.scaleExpression, r26 = await p12(t28, this._context.layer.spatialReference, c20), { default: i21 } = await import("./callExpressionWithFeature-FONKYAHW.js");
        this._cimScaleFactorOrFunction = (e38, t29, s28) => {
          const o28 = i21(r26, e38, { $view: s28 }, "esriGeometryPoint", t29);
          return null !== o28 ? o28 : 1;
        };
      }
    }
    s3(r25), this._cimMaterialParametersInfo = e36, this._cimMaterialParametersInfo.color = this._getFillColor(), this._cimMaterialParametersInfo.outlineColor = [0, 0, 0, 0], this._cimMaterialParametersInfo.outlineSize = 0, this._cimMaterialParametersInfo.textureIsSignedDistanceField = false;
  }
  _getPrimitive() {
    var _a, _b;
    return ((_a = this.symbolLayer.resource) == null ? void 0 : _a.href) ? null : ((_b = this.symbolLayer.resource) == null ? void 0 : _b.primitive) ?? j6;
  }
  _getOutlineSize() {
    var _a;
    let e36 = 0;
    const t27 = this.symbolLayer;
    if (null != ((_a = t27.outline) == null ? void 0 : _a.size)) return Math.max(u6(t27.outline.size), 0);
    return e36 = he(this._getPrimitive()) ? ae2 : 0, Math.max(e36, 0);
  }
  _getOutlineColor() {
    var _a;
    const t27 = this._getLayerOpacity(), r25 = this.symbolLayer, i20 = (_a = r25 == null ? void 0 : r25.outline) == null ? void 0 : _a.color;
    if (null != i20) {
      const r26 = h2.toUnitRGB(i20), s27 = i20.a * t27;
      return [r26[0], r26[1], r26[2], s27];
    }
    return [0, 0, 0, 0];
  }
  _getFillColor() {
    var _a, _b;
    if (he(this._getPrimitive())) return t20;
    const e36 = null == this._getPrimitive(), t27 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color;
    return this._getCombinedOpacityAndColor(t27, { hasIntrinsicColor: e36 });
  }
  _createMaterialAndAddToStage(e36, t27) {
    const r25 = this._context.spherical;
    if (this._cimData) {
      this._fastUpdates = null;
      let i20 = e36.textureId ? this._cimSymbolMaterials.get(e36.textureId) : null;
      return i20 || (i20 = new ae(e36, r25), this._cimSymbolMaterials.set(e36.textureId ?? 0, i20), t27.add(i20)), i20;
    }
    if (this._fastUpdates = O4(this._context.renderer, this._fastVisualVariableConvertOptions()), this._fastUpdates && (e36 = { ...e36, ...this._fastUpdates.materialParameters }), this._materials[0] = new ae(e36, r25), t27.add(this._materials[0]), this._context.graphicsCoreOwner.view.focusAreas.activePolygons.length > 0) {
      e36.isFocused = false;
      const i20 = this._context.stage.view.focusAreas.style;
      e36.color = C5(e36.color, i20), e36.outlineColor = C5(e36.outlineColor, i20), this._materials[1] = new ae(e36, r25), t27.add(this._materials[1]);
    }
    return this._materials[0];
  }
  _setDrapingDependentMaterialParameters() {
    this.draped && (this._forEachMaterial((e36) => {
      e36.setParameters({ verticalOffset: null, screenSizePerspective: null, occlusionTest: false, hasSlicePlane: false, shaderPolygonOffset: 0, draped: this.draped });
    }), this.layerOpacityChanged());
  }
  destroy() {
    super.destroy(), this._patchTask = e(this._patchTask), this._forEachMaterial((e36) => this._context.stage.remove(e36)), this._materials.length = 0, this._cimSymbolMaterials.clear(), this._cimSymbolTextures.forEach((e36) => this._context.stage.remove(e36)), this._cimSymbolTextures.clear(), this._textureHandle = t(this._textureHandle);
  }
  _getScaleFactor(e36, t27) {
    if (this._drivenProperties.size && e36.size) {
      const r25 = Array.from(e36.size);
      for (let e37 = 0; e37 < 3; e37++) {
        const t28 = r25[e37];
        t28 && "symbol-value" !== t28 && "proportional" !== t28 && (r25[e37] = u6(t28));
      }
      if ("symbol-value" === r25[0]) return 1;
      if (isFinite(+r25[0])) return +r25[0] / t27;
      if (isFinite(+r25[2])) return +r25[2] / t27;
    }
    return 1;
  }
  _getDrivenRotation(e36) {
    return this._drivenProperties.rotation ? e36.heading ?? 0 : 0;
  }
  createGraphics3DGraphic(e36) {
    var _a;
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry)) return null;
    let r25, i20 = [0, 0];
    const s27 = f17(t27.geometry);
    if (null == s27) return this.logger.warn(`unsupported geometry type for text symbol: ${t27.geometry.type}`), null;
    const o27 = this._context.stage.view.focusAreas.containsGeometry(s27);
    if (this._cimData) {
      if (!this._cimData.symbol) return null;
      const e37 = this._generateTextureCIM(t27), s28 = { textureId: e37.id, isFocused: o27, ...this._cimMaterialParametersInfo };
      r25 = this._createMaterialAndAddToStage(s28, this._context.stage);
      const a27 = this._context.graphicsCoreOwner.view.state.rasterPixelRatio;
      i20 = [e37.parameters.width / a27, e37.parameters.height / a27];
    } else i20 = this._size, r25 = o27 || 1 === this._materials.length ? this._materials[0] : this._materials[1];
    if (null == s27) return this.logger.warn(`unsupported geometry type for icon symbol: ${t27.geometry.type}`), null;
    const a26 = e36.renderingInfo, n33 = this._getVertexOpacityAndColor(a26), l31 = this._getDrivenRotation(a26);
    let c20 = 1;
    if (!((_a = this._fastUpdates) == null ? void 0 : _a.visualVariables.size)) {
      const e37 = i20[0] > i20[1] ? i20[0] : i20[1];
      c20 = this._getScaleFactor(a26, e37);
    }
    c20 *= this._symbolTextureRatio;
    const h15 = t6(i20[0] * c20, i20[1] * c20), u26 = this.setGraphicElevationContext(t27);
    return this.ensureDrapedStatus("on-the-ground" === u26.mode) && this._setDrapingDependentMaterialParameters(), this.draped ? this._createAsOverlay(t27, s27, r25, n33, l31, h15, e36.layer.uid) : this._createAs3DShape(t27, s27, r25, n33, l31, h15, u26, t27.uid);
  }
  layerOpacityChanged() {
    const e36 = this._getFillColor(), t27 = this._getOutlineColor();
    this._forEachMaterial((r25) => {
      r25.setParameters({ color: e36 }), r25.setParameters({ outlineColor: t27 });
    });
  }
  updateGeometry(e36, t27) {
    if (this.draped || !this._validateGeometry(t27)) return false;
    const { elevationContext: r25, stageObject: i20 } = e36;
    if (r25.mode !== this.getGeometryElevationMode(t27)) return false;
    const s27 = f17(t27);
    if (!s27) return false;
    const o27 = p17(i20, this._context, s27, r25);
    if (null == o27) return false;
    const a26 = d8(this._context, s27);
    return i20.geometries[0].localOrigin === a26 && (e36.alignedSampledElevation = o27, m10(e36, s27, this._context.elevationProvider), true);
  }
  layerElevationInfoChanged(e36, t27, r25) {
    const i20 = this._elevationContext.mode, s27 = m9(_le.elevationModeChangeTypes, r25, i20);
    if (s27 !== b7.UPDATE) return s27;
    const o27 = d7(i20) || "absolute-height" === i20;
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, () => o27);
  }
  slicePlaneEnabledChanged() {
    return this.draped || this._forEachMaterial((e36) => {
      e36.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled });
    }), true;
  }
  physicalBasedRenderingChanged() {
    return true;
  }
  get pixelRatioChanged() {
    return null != this._getPrimitive();
  }
  applyRendererDiff(e36, t27) {
    var _a;
    for (const r25 in e36.diff) {
      if ("visualVariables" !== r25) return e30.RecreateSymbol;
      if (!G(this._fastUpdates, t27, this._fastVisualVariableConvertOptions())) return e30.RecreateSymbol;
      (_a = this._materials[0]) == null ? void 0 : _a.setParameters(this._fastUpdates.materialParameters);
    }
    return e30.FastUpdate;
  }
  updateFocus(e36, t27) {
    t27.forEach((t28) => {
      const r25 = this._context.stage.view.focusAreas.containsGeometry(t28.graphic.geometry);
      t28.layers.forEach((i20) => {
        if ((i20 == null ? void 0 : i20.graphics3DSymbolLayer) === this) {
          i20.stageObject.geometries.some((e37) => e37.material.parameters.isFocused !== r25) && e36(t28);
        }
      });
    });
  }
  prepareSymbolLayerPatch(e36) {
    var _a;
    if ((_a = this._patchTask) == null ? void 0 : _a.abort(), "partial" !== e36.diff.type) return;
    const t27 = e36.diff.diff;
    this._preparePatchResource(e36, t27), this._preparePatchRotation(e36, t27);
  }
  _preparePatchResource(e36, s27) {
    var _a;
    if (!s27.resource || "partial" !== s27.resource.type) return;
    const c20 = s27.resource.diff;
    if ("complete" !== ((_a = c20 == null ? void 0 : c20.href) == null ? void 0 : _a.type)) return;
    const h15 = c20.href.newValue, { textures: u26 } = this._context.sharedResources;
    if (null == h15 || null == u26 || null != ue(h15)) return;
    const m17 = this._getIconSize(), d16 = m17 * this._context.graphicsCoreOwner.view.state.pixelRatio;
    e36.symbolLayerStatePatches.push(() => {
      this._patchTask = e(this._patchTask), this._patchTask = d((e37) => this._context.schedule(async (e38, r25) => {
        const s28 = await _(u26.fromUrl(h15, d16, { signal: r25 }));
        s3(r25);
        const o27 = !s28.ok;
        if (o27 && a2(s28.error), this._textureHandle = t(this._textureHandle), this._patchTask = null, o27) {
          this._forEachMaterial((e40) => {
            e40.visible = false, e40.setParameters({ textureId: null });
          });
          const e39 = `Failed to load (Request for icon resource failed: ${h15})`;
          return void this.logger.error(new s2("graphics3diconsymbollayer:request-failed", e39));
        }
        this._textureHandle = s28.value;
        const c21 = s28.value.texture;
        this._size = de(c21, m17), this._forEachMaterial((e39) => {
          e39.setParameters({ textureId: c21.id }), e39.visible = true;
        });
      }, e37));
    }), delete c20.href;
  }
  _preparePatchRotation(e36, t27) {
    if (!t27.angle || "complete" !== t27.angle.type) return;
    const r25 = t27.angle.newValue ?? 0, i20 = 0 !== r25 || this._drivenProperties.rotation;
    e36.symbolLayerStatePatches.push(() => {
      this._forEachMaterial((e37) => e37.setParameters({ rotation: r25, hasRotation: i20 }));
    }), delete t27.angle;
  }
  _defaultElevationInfoNoZ() {
    return pe;
  }
  _createAs3DShape(e36, t27, r25, i20, s27, o27, a26, n33) {
    const l31 = this.getFastUpdateAttrValues(e36), c20 = this._context.layer.uid, h15 = this._context.stage.renderView.getObjectAndLayerIdColor({ graphicUid: n33, layerUid: c20 }), u26 = lt(r25, { normal: se, color: i20, rotation: s27, size: o27, centerOffsetAndDistance: _e, featureAttribute: l31, objectAndLayerIdColor: h15 }), m17 = a18(this._context, t27, u26, a26, n33);
    if (null == m17) return null;
    const d16 = new p16(this, m17.object, [u26], null, null, p15, a26);
    return d16.alignedSampledElevation = m17.sampledElevation, d16.needsElevationUpdates = d7(a26.mode) || "absolute-height" === a26.mode, d16.getScreenSize = this._createScreenSizeGetter(o27, l31), d16.calculateRelativeScreenBounds = (e37) => r25.calculateRelativeScreenBounds(d16.getScreenSize(), 1, e37), m10(d16, t27, this._context.elevationProvider), d16;
  }
  _createAsOverlay(e36, t27, r25, i20, s27, o27, a26) {
    r25.renderPriority = this._renderPriority;
    const n33 = n3();
    c4(t27, n33, this._context.overlaySR), n33[2] = te2;
    const l31 = this._context.clippingExtent;
    if (null != l31 && !V2(l31, n33)) return null;
    const c20 = this.getFastUpdateAttrValues(e36), h15 = this._context.stage.renderView.getObjectAndLayerIdColor({ graphicUid: e36.uid, layerUid: this._context.layer.uid }), u26 = lt(r25, { normal: se, position: n33, color: i20, rotation: s27, size: o27, featureAttribute: c20, objectAndLayerIdColor: h15 }), m17 = new g7(u26, { layerUid: a26, graphicUid: e36.uid }), d16 = new l22(this, [m17], null, this._context.drapeSourceRenderer);
    return d16.getScreenSize = this._createScreenSizeGetter(o27, c20), d16.calculateRelativeScreenBounds = (e37) => r25.calculateRelativeScreenBounds(d16.getScreenSize(), 1, e37), d16;
  }
  _createScreenSizeGetter(e36, t27) {
    const r25 = this._outlineSize + 2;
    if (this._fastUpdates && t27) {
      const i21 = e36[0] / this._symbolTextureRatio, s28 = e36[1] / this._symbolTextureRatio;
      return (e37 = n6()) => {
        const [o27, a26] = W(fe, this._fastUpdates.materialParameters, t27);
        return e37[0] = o27 * i21 + r25, e37[1] = a26 * s28 + r25, e37;
      };
    }
    const i20 = e36[0] / this._symbolTextureRatio + r25, s27 = e36[1] / this._symbolTextureRatio + r25;
    return (e37 = n6()) => (e37[0] = i20, e37[1] = s27, e37);
  }
  _fastVisualVariableConvertOptions() {
    const e36 = Math.max(this._size[0], this._size[1]), t27 = r4(e36, e36, e36), r25 = e5(1), i20 = e36 * r25, s27 = r4(i20, i20, i20);
    return new $2({ size: true, color: true, rotation: true, opacity: false }, t27, s27, r25);
  }
  _forEachMaterial(e36) {
    this._materials.forEach(e36), this._cimSymbolMaterials.forEach(e36);
  }
  test() {
    return { ...super.test(), material: this._materials[0] };
  }
};
function ce(e36) {
  return e36 && "point-3d" === e36.type && e36.hasVisibleVerticalOffset();
}
function he(e36) {
  return null != e36 && ("cross" === e36 || "x" === e36);
}
function ue(e36) {
  const t27 = ot(e36);
  return "application/json" === (t27 == null ? void 0 : t27.mediaType) ? t27.data : void 0;
}
function me(e36, t27) {
  return "relative" === e36 ? t6((t27.x || 0) + 0.5, 0.5 - (t27.y || 0)) : e36 in s15 ? s15[e36] : s15.center;
}
function de({ parameters: e36 }, t27) {
  const r25 = (e36.width ?? 1) / (e36.height ?? 1);
  return r25 > 1 ? [t27, Math.round(t27 / r25)] : [Math.round(t27 * r25), t27];
}
le.PRIMITIVE_SIZE = ne, le.elevationModeChangeTypes = { definedChanged: b7.UPDATE, staysOnTheGround: b7.NONE, onTheGroundChanged: b7.RECREATE };
var pe = { mode: "relative-to-ground", offset: 0 };
var _e = r5(0, 0, 0, 1);
var fe = n3();

// node_modules/@arcgis/core/views/3d/layers/graphics/lineUtils.js
function n22(n33) {
  switch (n33) {
    case "butt":
      return s20.BUTT;
    case "square":
      return s20.SQUARE;
    case "round":
      return s20.ROUND;
    default:
      return null;
  }
}
function r17(e36) {
  return "diamond" === e36 ? "kite" : e36;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/LineMarkerTechnique.js
var W3 = class extends l9 {
  constructor(e36, i20) {
    super(e36, i20, new t13(k4, () => import("./LineMarker.glsl-DKNMBUHD.js")), b12);
  }
  _makePipelineState(t27, r25) {
    const { output: p25, oitPass: d16, space: T6, hasOccludees: h15 } = t27;
    return B2({ blending: u10(p25) ? a10(d16) : null, depthTest: T6 === s19.Draped ? null : { func: f9(d16) }, depthWrite: l10(t27), drawBuffers: p25 === n10.Depth ? { buffers: [f4.NONE] } : i9(d16, p25), colorWrite: g5, stencilWrite: h15 ? e24 : null, stencilTest: h15 ? r25 ? o14 : f10 : null, polygonOffset: { factor: 0, units: -10 } });
  }
  initializePipeline(e36) {
    return e36.occluder ? (this._occluderPipelineTransparent = B2({ blending: c6, depthTest: s16, depthWrite: null, colorWrite: g5, stencilWrite: null, stencilTest: m7 }), this._occluderPipelineOpaque = B2({ blending: c6, depthTest: s16, depthWrite: null, colorWrite: g5, stencilWrite: l11, stencilTest: P3 }), this._occluderPipelineMaskWrite = B2({ blending: null, depthTest: i10, depthWrite: null, colorWrite: null, stencilWrite: e24, stencilTest: o14 })) : this._occluderPipelineTransparent = this._occluderPipelineOpaque = this._occluderPipelineMaskWrite = null, this._occludeePipelineState = this._makePipelineState(e36, true), this._makePipelineState(e36, false);
  }
  getPipeline(e36, i20) {
    return e36 ? this._occludeePipelineState : i20 === A5.TRANSPARENT_OCCLUDER_MATERIAL ? this._occluderPipelineTransparent ?? super.getPipeline() : i20 === A5.OCCLUDER_MATERIAL ? this._occluderPipelineOpaque ?? super.getPipeline() : this._occluderPipelineMaskWrite ?? super.getPipeline();
  }
};
var b12 = /* @__PURE__ */ new Map([[e11.POSITION, 0], [e11.PREVPOSITION, 1], [e11.UV0, 2], [e11.NORMAL, 3], [e11.COLOR, 4], [e11.COLORFEATUREATTRIBUTE, 4], [e11.SIZE, 5], [e11.SIZEFEATUREATTRIBUTE, 5], [e11.OPACITYFEATUREATTRIBUTE, 6]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/LineMarkerMaterial.js
var S5 = class extends n12 {
  constructor(e36) {
    super(e36, I6), this._configuration = new a15(), this.vertexAttributeLocations = b12, this.produces = /* @__PURE__ */ new Map([[A5.OPAQUE_MATERIAL, (e37) => e37 === n10.Highlight || h5(e37) && this.parameters.renderOccluded === p6.OccludeAndTransparentStencil], [A5.OPAQUE_MATERIAL_WITHOUT_NORMALS, (e37) => S2(e37)], [A5.OCCLUDER_MATERIAL, (e37) => a6(e37) && this.parameters.renderOccluded === p6.OccludeAndTransparentStencil], [A5.TRANSPARENT_OCCLUDER_MATERIAL, (e37) => a6(e37) && this.parameters.renderOccluded === p6.OccludeAndTransparentStencil], [A5.TRANSPARENT_MATERIAL, (e37) => h5(e37) && this.parameters.writeDepth], [A5.TRANSPARENT_MATERIAL_WITHOUT_DEPTH, (e37) => h5(e37) && !this.parameters.writeDepth], [A5.DRAPED_MATERIAL, (e37) => u10(e37) || e37 === n10.Highlight]]), this._layout = this.createLayout();
  }
  getConfiguration(e36, t27) {
    return this._configuration.output = e36, this._configuration.space = t27.slot === A5.DRAPED_MATERIAL ? s19.Draped : this.parameters.worldSpace ? s19.World : s19.Screen, this._configuration.hideOnShortSegments = this.parameters.hideOnShortSegments, this._configuration.hasCap = this.parameters.cap !== s20.BUTT, this._configuration.anchor = this.parameters.anchor, this._configuration.hasTip = this.parameters.hasTip, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasOccludees = t27.hasOccludees, this._configuration.writeDepth = this.parameters.writeDepth, this._configuration.vvSize = !!this.parameters.vvSize, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.vvOpacity = !!this.parameters.vvOpacity, this._configuration.occluder = this.parameters.renderOccluded === p6.OccludeAndTransparentStencil, this._configuration.oitPass = t27.oitPass, this._configuration.terrainDepthTest = t27.terrainDepthTest && u10(e36), this._configuration.cullAboveTerrain = t27.cullAboveTerrain, this._configuration;
  }
  get visible() {
    return this.parameters.color[3] >= o16;
  }
  intersect() {
  }
  createLayout() {
    const e36 = H3().vec3f(e11.POSITION).vec3f(e11.PREVPOSITION).vec2f(e11.UV0);
    return this.parameters.worldSpace && e36.vec3f(e11.NORMAL), this.parameters.vvSize ? e36.f32(e11.SIZEFEATUREATTRIBUTE) : e36.f32(e11.SIZE), this.parameters.vvColor ? e36.f32(e11.COLORFEATUREATTRIBUTE) : e36.vec4f(e11.COLOR), this.parameters.vvOpacity && e36.f32(e11.OPACITYFEATUREATTRIBUTE), e36;
  }
  createBufferWriter() {
    return new P5(this._layout, this.parameters);
  }
  createGLMaterial(e36) {
    return new R6(e36);
  }
};
var R6 = class extends r14 {
  constructor() {
    super(...arguments), this._markerPrimitive = null;
  }
  dispose() {
    super.dispose(), this._markerTextures.release(this._markerPrimitive), this._markerPrimitive = null;
  }
  beginSlot(e36) {
    const t27 = this._material.parameters.markerPrimitive;
    return t27 !== this._markerPrimitive && (this._material.setParameters({ markerTexture: this._markerTextures.swap(t27, this._markerPrimitive) }), this._markerPrimitive = t27), this._material.setParameters(this.textureBindParameters), this.getTechnique(W3, e36);
  }
};
var I6 = class extends t15 {
  constructor() {
    super(...arguments), this.width = 0, this.color = [1, 1, 1, 1], this.markerPrimitive = "arrow", this.placement = "end", this.cap = s20.BUTT, this.anchor = p13.Center, this.hasTip = false, this.worldSpace = false, this.hideOnShortSegments = false, this.writeDepth = true, this.hasSlicePlane = false, this.vvFastUpdate = false, this.markerTexture = null;
  }
};
var P5 = class {
  constructor(e36, t27) {
    this.vertexBufferLayout = e36, this._parameters = t27;
  }
  elementCount() {
    return "begin-end" === this._parameters.placement ? 12 : 6;
  }
  write(i20, a26, s27, n33, o27, h15) {
    const c20 = s27.get(e11.POSITION).data, p25 = c20.length / 3;
    let m17 = [1, 0, 0];
    const l31 = s27.get(e11.NORMAL);
    this._parameters.worldSpace && null != l31 && (m17 = l31.data);
    let u26 = 1, d16 = 0;
    this._parameters.vvSize ? d16 = s27.get(e11.SIZEFEATUREATTRIBUTE).data[0] : s27.has(e11.SIZE) && (u26 = s27.get(e11.SIZE).data[0]);
    let f28 = [1, 1, 1, 1], A13 = 0;
    this._parameters.vvColor ? A13 = s27.get(e11.COLORFEATUREATTRIBUTE).data[0] : s27.has(e11.COLOR) && (f28 = s27.get(e11.COLOR).data);
    let _12 = 0;
    this._parameters.vvOpacity && (_12 = s27.get(e11.OPACITYFEATUREATTRIBUTE).data[0]);
    const v7 = new Float32Array(o27.buffer);
    let E13 = h15 * (this.vertexBufferLayout.stride / 4);
    const g14 = (e36, t27, r25, i21) => {
      if (v7[E13++] = e36[0], v7[E13++] = e36[1], v7[E13++] = e36[2], v7[E13++] = t27[0], v7[E13++] = t27[1], v7[E13++] = t27[2], v7[E13++] = r25[0], v7[E13++] = r25[1], this._parameters.worldSpace && (v7[E13++] = m17[0], v7[E13++] = m17[1], v7[E13++] = m17[2]), this._parameters.vvSize ? v7[E13++] = d16 : v7[E13++] = u26, this._parameters.vvColor) v7[E13++] = A13;
      else {
        const e37 = Math.min(4 * i21, f28.length - 4);
        v7[E13++] = f28[e37], v7[E13++] = f28[e37 + 1], v7[E13++] = f28[e37 + 2], v7[E13++] = f28[e37 + 3];
      }
      this._parameters.vvOpacity && (v7[E13++] = _12);
    };
    let O8;
    !function(e36) {
      e36[e36.ASCENDING = 1] = "ASCENDING", e36[e36.DESCENDING = -1] = "DESCENDING";
    }(O8 || (O8 = {}));
    const S10 = (a27, s28) => {
      const n34 = o6(L4, c20[3 * a27], c20[3 * a27 + 1], c20[3 * a27 + 2]), o28 = C6;
      let h16 = a27 + s28;
      do {
        o6(o28, c20[3 * h16], c20[3 * h16 + 1], c20[3 * h16 + 2]), h16 += s28;
      } while (J(n34, o28) && h16 >= 0 && h16 < p25);
      i20 && (E2(n34, n34, i20), E2(o28, o28, i20)), g14(n34, o28, [-1, -1], a27), g14(n34, o28, [1, -1], a27), g14(n34, o28, [1, 1], a27), g14(n34, o28, [-1, -1], a27), g14(n34, o28, [1, 1], a27), g14(n34, o28, [-1, 1], a27);
    }, R13 = this._parameters.placement;
    "begin" !== R13 && "begin-end" !== R13 || S10(0, O8.ASCENDING), "end" !== R13 && "begin-end" !== R13 || S10(p25 - 1, O8.DESCENDING);
  }
};
var L4 = n3();
var C6 = n3();

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DLineSymbolLayer.js
var G3 = ["polyline", "polygon", "extent"];
var O5 = new $2({ size: true, color: true, rotation: false, opacity: true });
var V6 = class _V extends y4 {
  constructor(e36, t27, r25, i20) {
    super(e36, t27, r25, i20);
  }
  async doLoad() {
    if (this._fastUpdates = O4(this._context.renderer, O5), !this._drivenProperties.size) {
      if ((null != this.symbolLayer.size ? this.symbolLayer.size : e5(1)) < 0) throw new s2("graphics3dlinesymbollayer:invalid-size", "Symbol sizes may not be negative values");
    }
  }
  _getMaterialParameters(e36, t27 = false) {
    var _a, _b;
    const r25 = this._getCombinedOpacityAndColor(t27 && this._markerColor || this._materialColor);
    this._patternHidesLine && !t27 && (r25[3] = 0);
    const i20 = { width: this._computeMaterialWidth((_a = this.symbolLayer) == null ? void 0 : _a.size), color: r25, hasPolygonOffset: true, join: this.symbolLayer.join || "miter", cap: n22(this.symbolLayer.cap || "butt"), hasSlicePlane: this._context.slicePlaneEnabled, isClosed: e36, stipplePattern: n19(this.symbolLayer.pattern) };
    return ((_b = this._fastUpdates) == null ? void 0 : _b.visualVariables) ? { ...i20, ...this._fastUpdates.materialParameters } : i20;
  }
  get _materialColor() {
    var _a;
    return (_a = this.symbolLayer.material) == null ? void 0 : _a.color;
  }
  get _markerColor() {
    var _a;
    return (_a = this.symbolLayer.marker) == null ? void 0 : _a.color;
  }
  get _lineMaterial() {
    return null == this._materials[H4.Line] && (this._materials[H4.Line] = new W2(this._getMaterialParameters(false)), this._context.stage.add(this._materials[H4.Line])), this._materials[H4.Line];
  }
  get _ringMaterial() {
    return null == this._materials[H4.Ring] && (this._materials[H4.Ring] = new W2(this._getMaterialParameters(true)), this._context.stage.add(this._materials[H4.Ring])), this._materials[H4.Ring];
  }
  get _wireframeLineMaterial() {
    return null == this._materials[H4.LineWireframe] && (this._materials[H4.LineWireframe] = new W2({ ...this._getMaterialParameters(false), wireframe: true }), this._context.stage.add(this._materials[H4.LineWireframe])), this._materials[H4.LineWireframe];
  }
  get _wireframeRingMaterial() {
    return null == this._materials[H4.RingWireframe] && (this._materials[H4.RingWireframe] = new W2({ ...this._getMaterialParameters(true), wireframe: true }), this._context.stage.add(this._materials[H4.RingWireframe])), this._materials[H4.RingWireframe];
  }
  get _markerMaterial() {
    return null == this._materials[H4.Marker] && null != this.symbolLayer.marker && (this._materials[H4.Marker] = new S5({ ...this._getMaterialParameters(false, true), placement: this.symbolLayer.marker.placement, markerPrimitive: r17(this.symbolLayer.marker.style) }), this._context.stage.add(this._materials[H4.Marker])), this._materials[H4.Marker];
  }
  destroy() {
    super.destroy(), this._forEachMaterial((e36) => this._context.stage.remove(e36)), this._materials.length = 0;
  }
  _getDrivenSize(e36) {
    return this._drivenProperties.size && e36.size ? u6(s21(e36.size)) : 1;
  }
  _getDrivenColor(e36) {
    const t27 = r5(1, 1, 1, 1);
    return this._drivenProperties.color && e36.color && (t27[0] = e36.color[0], t27[1] = e36.color[1], t27[2] = e36.color[2], e36.color.length > 0 && (t27[3] = e36.color[3])), this._drivenProperties.opacity && e36.opacity && (t27[3] = e36.opacity), t27;
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry, G3, this.symbolLayer.type)) return null;
    const r25 = this.setGraphicElevationContext(t27);
    return this.ensureDrapedStatus("on-the-ground" === r25.mode), this.draped ? this._createAsOverlay(e36, this._context.layer.uid) : this._createAs3DShape(e36, r25, t27.uid);
  }
  applyRendererDiff(e36, t27) {
    for (const r25 in e36.diff) {
      if ("visualVariables" !== r25) return e30.RecreateSymbol;
      {
        const e37 = this._fastUpdates;
        if (!G(e37, t27, O5)) return e30.RecreateSymbol;
        this._forEachMaterial((t28) => t28 == null ? void 0 : t28.setParameters(e37.materialParameters));
      }
    }
    return e30.FastUpdate;
  }
  prepareSymbolLayerPatch(e36) {
    var _a, _b;
    if ("partial" !== e36.diff.type) return;
    const t27 = e36.diff.diff, r25 = {};
    "complete" === ((_a = t27.size) == null ? void 0 : _a.type) && (r25.width = this._computeMaterialWidth(t27.size.newValue), delete t27.size), "complete" === ((_b = t27.cap) == null ? void 0 : _b.type) && (r25.cap = n22(t27.cap.newValue ?? "butt"), delete t27.cap);
    const i20 = this._prepareMarkerPatch(e36, t27);
    this._prepareMaterialPatch(e36, t27, i20), e36.symbolLayerStatePatches.push(() => this._forEachMaterial((e37) => e37 == null ? void 0 : e37.setParameters(r25)));
  }
  layerOpacityChanged() {
    this._forEachMaterial((e36, t27) => this._updateMaterialLayerOpacity(e36, t27 === H4.Marker));
  }
  _forEachMaterial(e36) {
    this._materials.forEach(e36);
  }
  _updateMaterialLayerOpacity(e36, t27 = false) {
    var _a, _b;
    if (null == e36) return;
    const r25 = e36.parameters.color, a26 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, s27 = this._patternHidesLine && !t27 ? 0 : this._getCombinedOpacity(a26), n33 = r5(r25[0], r25[1], r25[2], s27);
    e36.setParameters({ color: n33 });
  }
  layerElevationInfoChanged(e36, t27, r25) {
    const i20 = this._elevationContext.mode, a26 = m9(_V.elevationModeChangeTypes, r25, i20);
    if (a26 !== b7.UPDATE) return a26;
    const s27 = d7(i20);
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, () => s27);
  }
  slicePlaneEnabledChanged() {
    const e36 = { hasSlicePlane: this._context.slicePlaneEnabled };
    return this._forEachMaterial((t27) => t27 == null ? void 0 : t27.setParameters(e36)), true;
  }
  physicalBasedRenderingChanged() {
    return true;
  }
  _createAs3DShape(e36, t27, r25) {
    const i20 = I7(e36.graphic.geometry), a26 = "polygon" === i20.type ? i20.rings : i20.paths, s27 = new Array(), n33 = u4(), m17 = p14(i20, this._context.elevationProvider, this._context.renderCoordsHelper, t27), p25 = "polygon" === i20.type ? "rings" : "paths";
    this._logGeometryCreationWarnings(m17, a26, p25, "LineSymbol3DLayer");
    for (let o27 = 0; o27 < m17.lines.length; o27++) {
      const t28 = m17.lines[o27], a27 = t28.position, p26 = t28.mapPositions;
      if (null != this._context.clippingExtent && (m2(p26, n33), !A2(n33, this._context.clippingExtent))) continue;
      const c21 = this._createGeometry("polygon" === i20.type ? this._ringMaterial : this._lineMaterial, e36, a27, p26, i20.type, F3.ELEVATED, r25);
      s27.push(c21), t11.LINE_WIREFRAMES && s27.push(c21.instantiate({ material: "polygon" === i20.type ? this._wireframeRingMaterial : this._wireframeLineMaterial })), null != this._markerMaterial && s27.push(c21.instantiate({ material: this._markerMaterial }));
    }
    if (0 === s27.length) return null;
    const c20 = new A8({ geometries: s27, castShadow: false, layerUid: this._context.layer.uid, graphicUid: r25 }), d16 = new p16(this, c20, s27, null, null, I5, t27);
    return d16.alignedSampledElevation = m17.sampledElevation, d16.needsElevationUpdates = d7(t27.mode), d16;
  }
  _createGeometry(e36, t27, r25, i20, a26, s27, n33) {
    var _a, _b, _c;
    const o27 = s27 === F3.DRAPED ? { spatialReference: this._context.overlaySR, renderCoordsHelper: this._context.renderCoordsHelper } : null, l31 = "polygon" === a26, h15 = (_a = this._fastUpdates) == null ? void 0 : _a.visualVariables.color, m17 = (_b = this._fastUpdates) == null ? void 0 : _b.visualVariables.size, p25 = (_c = this._fastUpdates) == null ? void 0 : _c.visualVariables.opacity, c20 = this._context.stage.renderView.getObjectAndLayerIdColor({ graphicUid: n33, layerUid: this._context.layer.uid }), d16 = { position: r25, size: m17 ? null : this._getDrivenSize(t27.renderingInfo), color: h15 ? null : this._getDrivenColor(t27.renderingInfo), sizeFeature: m17 ? X(m17.field, t27.graphic) : null, colorFeature: h15 ? X(h15.field, t27.graphic) : null, opacityFeature: p25 ? X(p25.field, t27.graphic) : null };
    return b8(e36, { overlayInfo: o27, removeDuplicateStartEnd: l31, mapPositions: i20, attributeData: d16 }, c20);
  }
  _createAsOverlay(e36, t27) {
    const r25 = e36.graphic, i20 = I7(r25.geometry), a26 = "polygon" === i20.type ? i20.rings : i20.paths, s27 = "polygon" === i20.type ? this._ringMaterial : this._lineMaterial;
    s27.renderPriority = this._renderPriority;
    const n33 = t11.LINE_WIREFRAMES ? "polygon" === i20.type ? this._wireframeRingMaterial : this._wireframeLineMaterial : null, d16 = this._markerMaterial;
    null != n33 && (n33.renderPriority = this._renderPriority - 1e-3), null != d16 && (d16.renderPriority = this._renderPriority - 2e-3);
    const y11 = new Array(), u26 = u4(), _12 = q(), g14 = l16(i20, this._context.overlaySR), b19 = "polygon" === i20.type ? "rings" : "paths";
    this._logGeometryCreationWarnings(g14, a26, b19, "LineSymbol3DLayer");
    for (const o27 of g14.lines) {
      if (m2(o27.position, u26), !A2(u26, this._context.clippingExtent)) continue;
      M(_12, u26);
      const a27 = (a28) => {
        const s28 = this._createGeometry(a28, e36, o27.position, void 0, i20.type, F3.DRAPED, r25.uid), n34 = new g7(s28, { layerUid: t27, graphicUid: r25.uid });
        y11.push(n34);
      };
      if (null != d16) {
        a27(d16);
        const e37 = this.symbolLayer.marker.placement;
        "begin" !== e37 && "begin-end" !== e37 || s6(u26, o27.position, 0, 1), "end" !== e37 && "begin-end" !== e37 || s6(u26, o27.position, o27.position.length - 3, 1);
      }
      a27(s27), t11.LINE_WIREFRAMES && a27(n33);
    }
    return new l22(this, y11, _12, this._context.drapeSourceRenderer);
  }
  get _patternHidesLine() {
    const e36 = this.symbolLayer.pattern;
    return null != e36 && "style" === e36.type && "none" === e36.style;
  }
  _computeMaterialWidth(e36) {
    var _a;
    return e36 = e36 ?? e5(1), this._drivenProperties.size ? ((_a = this._fastUpdates) == null ? void 0 : _a.visualVariables.size) ? u6(1) : 1 : u6(e36);
  }
  _prepareMaterialPatch(e36, t27, r25) {
    var _a, _b;
    const i20 = t27.material;
    if (null == i20) return void (r25.changed && r25.useMaterialColor && T(this._getCombinedOpacityAndColor(this._materialColor), this._materials[H4.Marker], e36));
    if ("collection" === i20.type) return;
    const s27 = "complete" === i20.type ? (_a = i20.newValue) == null ? void 0 : _a.color : "complete" === ((_b = i20.diff.color) == null ? void 0 : _b.type) ? i20.diff.color.newValue : null, n33 = this._getCombinedOpacityAndColor(s27);
    r25.useMaterialColor && T(t4(n33), this._materials[H4.Marker], e36), this._patternHidesLine && (n33[3] = 0), T(n33, this._materials[H4.Line], e36), delete t27.material;
  }
  _prepareMarkerPatch(e36, t27) {
    var _a;
    const r25 = t27.marker, i20 = this._markerMaterial;
    if (null == r25 || "partial" !== r25.type || null == r25.diff || null != r25.diff.placement || null != r25.diff.style && "complete" !== r25.diff.style.type || null != r25.diff.color && "complete" !== r25.diff.color.type || null == i20) return { changed: false, useMaterialColor: null == this._markerColor };
    const a26 = r25.diff.color, s27 = null != a26, n33 = s27 ? a26.newValue : null, o27 = null == n33 && null == this._markerColor;
    n33 && T(this._getCombinedOpacityAndColor(n33), i20, e36);
    const l31 = (_a = r25.diff.style) == null ? void 0 : _a.newValue;
    return l31 && e36.symbolLayerStatePatches.push(() => i20.setParameters({ markerPrimitive: r17(l31) })), delete t27.marker, { changed: s27, useMaterialColor: o27 };
  }
};
function I7(e36) {
  switch (e36.type) {
    case "extent":
      if (e36 instanceof w) return j2.fromExtent(e36);
      break;
    case "polygon":
    case "polyline":
      return e36;
  }
  return null;
}
function T(e36, t27, r25) {
  null != t27 && r25.symbolLayerStatePatches.push(() => t27.setParameters({ color: e36 }));
}
var F3;
var H4;
V6.elevationModeChangeTypes = { definedChanged: b7.RECREATE, staysOnTheGround: b7.NONE, onTheGroundChanged: b7.RECREATE }, function(e36) {
  e36[e36.DRAPED = 0] = "DRAPED", e36[e36.ELEVATED = 1] = "ELEVATED";
}(F3 || (F3 = {})), function(e36) {
  e36[e36.Line = 0] = "Line", e36[e36.Ring = 1] = "Ring", e36[e36.LineWireframe = 2] = "LineWireframe", e36[e36.RingWireframe = 3] = "RingWireframe", e36[e36.Marker = 4] = "Marker";
}(H4 || (H4 = {}));

// node_modules/@arcgis/core/views/3d/layers/graphics/meshAutoFastUpdateConstants.js
var e31 = { disableDelayMs: 2e3 };

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DMeshObject3DGraphicLayer.js
var p23 = class extends p16 {
  constructor() {
    super(...arguments), this.fastTransformUpdatesAllowed = false, this._originalGeometries = [], this._fastTransformUpdatesEnabled = false, this._autoDisableFastUpdatesTimeoutId = 0;
  }
  get fastTransformUpdatesEnabled() {
    return this._fastTransformUpdatesEnabled;
  }
  destroy() {
    super.destroy(), this._cancelAutoDisableFastUpdates();
  }
  enableFastTransformUpdates(e36, a26) {
    if (!this.fastTransformUpdatesAllowed || this._fastTransformUpdatesEnabled) return;
    this._cancelAutoDisableFastUpdates(), this._fastTransformUpdatesEnabled = true;
    const { stageObject: s27 } = this, r25 = s27.geometries.slice();
    s27.removeAllGeometries();
    const i20 = I(g11, s27.transformation), o27 = a26.getOrigin(i20);
    for (const t27 of r25) {
      const a27 = e36(t27.material), r26 = t27.instantiate({ material: a27 });
      r26.localOrigin = o27, s27.addGeometry(r26);
    }
    this._originalGeometries = r25;
  }
  autoDisableFastTransformUpdates(t27) {
    this._cancelAutoDisableFastUpdates(), this._autoDisableFastUpdatesTimeoutId = setTimeout(() => {
      this._autoDisableFastUpdatesTimeoutId = 0, t27();
    }, e31.disableDelayMs);
  }
  updateAutoDisableFastTransformUpdates(t27) {
    this._autoDisableFastUpdatesTimeoutId && this.autoDisableFastTransformUpdates(t27);
  }
  _cancelAutoDisableFastUpdates() {
    clearTimeout(this._autoDisableFastUpdatesTimeoutId), this._autoDisableFastUpdatesTimeoutId = 0;
  }
  disableFastTransformUpdates(t27) {
    if (!this._fastTransformUpdatesEnabled) return;
    this._cancelAutoDisableFastUpdates(), this._fastTransformUpdatesEnabled = false;
    const { stageObject: e36 } = this, a26 = e36.geometries.map((e37) => t27(e37.material));
    e36.removeAllGeometries();
    for (let s27 = 0; s27 < this._originalGeometries.length; s27++) {
      const t28 = this._originalGeometries[s27], r25 = a26[s27];
      r25.setParameters({ modelTransformation: null }), r25 === t28.material ? e36.addGeometry(t28) : e36.addGeometry(t28.instantiate({ material: r25 }));
    }
    this._originalGeometries.length = 0;
  }
  updateFastLocalOrigin(e36, a26, s27) {
    if (!this._fastTransformUpdatesEnabled) return;
    const { stageObject: r25 } = this;
    if (0 === r25.geometries.length) return;
    const o27 = r25.geometries[0].localOrigin, n33 = I(g11, e36), m17 = s27.getOrigin(n33);
    if (m17 === o27) return;
    const l31 = (a26 == null ? void 0 : a26.localMatrix) ?? o9;
    r25.shaderTransformation = null, r25.transformation = e36, r25.geometries.forEach((t27) => {
      t27.transformation = l31, t27.localOrigin = m17;
    });
  }
  updateTransform(t27, s27, r25) {
    const { stageObject: o27 } = this, n33 = (s27 == null ? void 0 : s27.localMatrix) ?? o9;
    if (!this._fastTransformUpdatesEnabled) return o27.shaderTransformation = null, o27.transformation = t27, o27.geometries.forEach((t28) => t28.transformation = n33), void this._updateEdgeTransform(r25);
    const m17 = o27.transformation, l31 = o27.geometries[0].transformation, f28 = t27, d16 = n33, c20 = c(u20, m17, l31), h15 = c(T2, f28, d16), p25 = c(_7, h15, h4(_7, l31));
    o27.shaderTransformation = p25, this._setFastMaterialTransformation({ matA: c20, matB: h15 }), this._updateEdgeTransform(r25);
  }
  alignWithElevation(t27, a26, r25, i20) {
    if (!this._fastTransformUpdatesEnabled) return void super.alignWithElevation(t27, a26, r25, i20);
    null != r25 && l15(this.elevationContext.featureExpressionInfoContext, r25);
    const o27 = (e36, s27) => c10(e36, t27, this.elevationContext, a26, s27), { stageObject: n33 } = this;
    if (!n33.geometries[0].material.parameters.modelTransformation) return;
    const m17 = n33.transformation, c20 = n33.geometries[0].transformation, h15 = c(u20, m17, c20), p25 = n33.effectiveTransformation, g14 = n4(b13, p25);
    this.alignedSampledElevation = p15(this, this.elevationContext, t27.spatialReference, o27, a26, g14), n33.shaderTransformation = g14;
    const _12 = n33.geometries[0].transformation, U7 = c(T2, g14, _12);
    this._setFastMaterialTransformation({ matA: h15, matB: U7 }), this._updateEdgeTransform(i20);
  }
  _setFastMaterialTransformation({ matA: t27, matB: s27 }) {
    const { stageObject: i20 } = this;
    if (0 === i20.geometries.length) return;
    const o27 = i20.geometries[0].localOrigin, m17 = q2(F4, g3(g11, o27.vec3, -1)), l31 = c(U2, m17, t27), f28 = c(E9, m17, s27), d16 = h4(U2, l31), c20 = c(E9, f28, d16);
    for (const e36 of i20.geometries) e36.material.setParameters({ modelTransformation: c20 });
  }
  _updateEdgeTransform(t27) {
    const { stageObject: e36, _stageLayer: a26 } = this;
    a26.stage.renderer.withEdgeView((a27) => {
      a27.fastUpdateObject3DEdgesTransform(e36) || this.resetEdgeObject(t27);
    });
  }
};
var g11 = n3();
var u20 = e15();
var T2 = e15();
var b13 = e15();
var _7 = e15();
var U2 = e15();
var E9 = e15();
var F4 = e15();

// node_modules/@arcgis/core/views/3d/layers/graphics/MeshFastUpdateProcessor.js
var r18 = class {
  constructor() {
    this._fastTransformOriginalMaterials = /* @__PURE__ */ new Map(), this._fastTransformClonedMaterials = /* @__PURE__ */ new Map(), this._graphicReferenceCount = 0;
  }
  enable(r25, t27, e36) {
    r25.enableFastTransformUpdates((r26) => {
      if (this._graphicReferenceCount <= 1) {
        if (this._fastTransformOriginalMaterials.has(r26)) return r26;
        const a26 = t27.byMaterial(r26);
        return this._fastTransformOriginalMaterials.set(r26, a26), t27.delete(r26), r26;
      }
      const s27 = new z(r26.parameters, e36);
      return e36.stage.add(s27), this._fastTransformClonedMaterials.set(s27, r26), s27;
    }, e36.localOriginFactory);
  }
  disable(a26, r25, t27) {
    const e36 = /* @__PURE__ */ new Set(), s27 = /* @__PURE__ */ new Set();
    a26.disableFastTransformUpdates((a27) => {
      if (!this._fastTransformClonedMaterials.has(a27)) {
        const t28 = a27, i21 = this._fastTransformOriginalMaterials.get(t28);
        return r25.has(i21.uid) ? (e36.add(t28), r25.byUid(i21.uid).material) : (s27.add(t28), i21.material);
      }
      const i20 = a27, n33 = this._fastTransformClonedMaterials.get(i20);
      return this._fastTransformClonedMaterials.delete(i20), t27.stage.remove(i20), n33;
    });
    for (const i20 of e36) this._fastTransformOriginalMaterials.delete(i20), t27.stage.remove(i20);
    for (const i20 of s27) {
      const a27 = this._fastTransformOriginalMaterials.get(i20);
      this._fastTransformOriginalMaterials.delete(i20), r25.set(a27.uid, a27);
    }
  }
  onAddGraphic() {
    this._graphicReferenceCount++;
  }
  onRemoveGraphic(a26, r25, t27) {
    this._graphicReferenceCount--, this.disable(a26, r25, t27);
  }
  forEachMaterialInfo(a26) {
    this._fastTransformOriginalMaterials.forEach(a26);
  }
  forEachClonedMaterial(a26) {
    this._fastTransformClonedMaterials.forEach(a26);
  }
  destroy(a26) {
    a26.removeMany(Array.from(this._fastTransformClonedMaterials.keys())), a26.removeMany(Array.from(this._fastTransformOriginalMaterials.values(), ({ material: a27 }) => a27)), this._fastTransformClonedMaterials.clear(), this._fastTransformOriginalMaterials.clear();
  }
};
var t24 = class {
  constructor() {
    this._byUid = /* @__PURE__ */ new Map(), this._byMaterial = /* @__PURE__ */ new Map();
  }
  get materials() {
    return Array.from(this._byUid.values(), (a26) => a26.material);
  }
  byUid(a26) {
    return this._byUid.get(a26);
  }
  byMaterial(a26) {
    return this._byMaterial.get(a26);
  }
  set(a26, r25) {
    this._byUid.set(a26, r25), this._byMaterial.set(r25.material, r25);
  }
  delete(a26) {
    var _a;
    const r25 = (_a = this._byMaterial.get(a26)) == null ? void 0 : _a.uid;
    r25 && (this._byUid.delete(r25), this._byMaterial.delete(a26));
  }
  has(a26) {
    return this._byUid.has(a26);
  }
  forEachMaterialInfo(a26) {
    this._byUid.forEach(a26);
  }
  clear() {
    this._byUid.clear(), this._byMaterial.clear();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/NativeLineTechnique.js
var d9 = class extends l9 {
  constructor(e36, r25) {
    super(e36, r25, new t13(p18, () => import("./NativeLine.glsl-XSRAG5QI.js"))), this.primitiveType = E3.LINES;
  }
  initializePipeline(i20) {
    const { hasOccludees: r25, output: o27, transparent: u26 } = i20, d16 = (e36, i21 = null, o28 = null) => B2({ blending: i21, depthTest: i10, depthWrite: o28, colorWrite: g5, stencilWrite: r25 ? e24 : null, stencilTest: r25 ? e36 ? o14 : f10 : null });
    return u10(o27) ? (this._occludeePipeline = d16(true, u26 ? c6 : null, p5), d16(false, u26 ? c6 : null, p5)) : d16(false);
  }
  getPipeline(e36) {
    return e36 ? this._occludeePipeline : super.getPipeline();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/NativeLineTechniqueConfiguration.js
var s22 = class extends a13 {
  constructor() {
    super(...arguments), this.hasVertexColors = false, this.transparent = false, this.hasOccludees = false;
  }
};
r2([i12()], s22.prototype, "hasVertexColors", void 0), r2([i12()], s22.prototype, "transparent", void 0), r2([i12()], s22.prototype, "hasOccludees", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/NativeLineMaterial.js
var U3 = class extends n12 {
  constructor(e36) {
    super(e36, q5), this._configuration = new s22(), this.produces = /* @__PURE__ */ new Map([[A5.OPAQUE_MATERIAL, (e37) => g4(e37)]]);
  }
  getConfiguration(e36, r25) {
    return this._configuration.output = e36, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasVertexColors = this.parameters.hasVertexColors, this._configuration.transparent = this.parameters.color[3] < 1 || this.parameters.width < 1, this._configuration.hasOccludees = r25.hasOccludees, this._configuration;
  }
  get visible() {
    return this.parameters.color[3] >= o16;
  }
  intersect(r25, t27, u26, p25, g14, A13) {
    if (!u26.options.selectionMode || !r25.visible) return;
    if (!m4(t27)) return void n.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial").error("intersection assumes a translation-only matrix");
    const y11 = r25.attributes.get(e11.POSITION).data, N10 = u26.camera, R13 = H5;
    r6(R13, u26.point);
    const v7 = 2;
    o6(J2[0], R13[0] - v7, R13[1] + v7, 0), o6(J2[1], R13[0] + v7, R13[1] + v7, 0), o6(J2[2], R13[0] + v7, R13[1] - v7, 0), o6(J2[3], R13[0] - v7, R13[1] - v7, 0);
    for (let e36 = 0; e36 < 4; e36++) if (!N10.unprojectFromRenderScreen(J2[e36], K[e36])) return;
    p4(N10.eye, K[0], K[1], Y2), p4(N10.eye, K[1], K[2], $3), p4(N10.eye, K[2], K[3], ee), p4(N10.eye, K[3], K[0], re);
    let E13 = Number.MAX_VALUE, _12 = 0;
    for (let e36 = 0; e36 < y11.length - 5; e36 += 3) {
      if (B3[0] = y11[e36] + t27[12], B3[1] = y11[e36 + 1] + t27[13], B3[2] = y11[e36 + 2] + t27[14], D3[0] = y11[e36 + 3] + t27[12], D3[1] = y11[e36 + 4] + t27[13], D3[2] = y11[e36 + 5] + t27[14], V4(Y2, B3) < 0 && V4(Y2, D3) < 0 || V4($3, B3) < 0 && V4($3, D3) < 0 || V4(ee, B3) < 0 && V4(ee, D3) < 0 || V4(re, B3) < 0 && V4(re, D3) < 0) continue;
      if (N10.projectToRenderScreen(B3, G4), N10.projectToRenderScreen(D3, k6), G4[2] < 0 && k6[2] > 0) {
        c2(W4, B3, D3);
        const e37 = N10.frustum, r27 = -V4(e37[j5.NEAR], B3) / P2(W4, O2(e37[j5.NEAR]));
        g3(W4, W4, r27), u9(B3, B3, W4), N10.projectToRenderScreen(B3, G4);
      } else if (G4[2] > 0 && k6[2] < 0) {
        c2(W4, D3, B3);
        const e37 = N10.frustum, r27 = -V4(e37[j5.NEAR], D3) / P2(W4, O2(e37[j5.NEAR]));
        g3(W4, W4, r27), u9(D3, D3, W4), N10.projectToRenderScreen(D3, k6);
      } else if (G4[2] < 0 && k6[2] < 0) continue;
      G4[2] = 0, k6[2] = 0;
      const r26 = M3(b5(G4, k6, Z2), R13);
      r26 < E13 && (E13 = r26, s10(F5, B3), s10(Q3, D3), _12 = e36 / 3);
    }
    const w13 = u26.rayBegin, O8 = u26.rayEnd;
    if (E13 < v7 * v7) {
      let e36 = Number.MAX_VALUE;
      if (B(b5(F5, Q3, Z2), b5(w13, O8, z2), X2)) {
        c2(X2, X2, w13);
        const r26 = r7(X2);
        g3(X2, X2, 1 / r26), e36 = r26 / p3(w13, O8);
      }
      A13(e36, X2, _12, false);
    }
  }
  intersectDraped(e36, t27, o27, s27, i20, a26) {
    if (!o27.options.selectionMode) return;
    const n33 = e36.attributes.get(e11.POSITION).data, c20 = e36.attributes.get(e11.SIZE), m17 = c20 ? c20.data[0] : 0, l31 = s27[0], f28 = s27[1], u26 = ((m17 + 1) / 2 + 4) * e36.screenToWorldRatio;
    let p25 = Number.MAX_VALUE, h15 = 0;
    for (let g14 = 0; g14 < n33.length - 5; g14 += 3) {
      const e37 = n33[g14], t28 = n33[g14 + 1], o28 = l31 - e37, s28 = f28 - t28, i21 = n33[g14 + 3] - e37, a27 = n33[g14 + 4] - t28, c21 = r((i21 * o28 + a27 * s28) / (i21 * i21 + a27 * a27), 0, 1), m18 = i21 * c21 - o28, u27 = a27 * c21 - s28, d16 = m18 * m18 + u27 * u27;
      d16 < p25 && (p25 = d16, h15 = g14 / 3);
    }
    p25 < u26 * u26 && i20(a26.dist, a26.normal, h15, false);
  }
  createGLMaterial(e36) {
    return new I8(e36);
  }
  createBufferWriter() {
    const e36 = this.parameters.hasVertexColors ? r16 : t19;
    return new f12(e36);
  }
};
var I8 = class extends e25 {
  beginSlot(e36) {
    return this.getTechnique(d9, e36);
  }
};
var q5 = class extends o12 {
  constructor() {
    super(...arguments), this.color = N, this.hasVertexColors = false, this.hasSlicePlane = false, this.width = 1;
  }
};
var B3 = n3();
var D3 = n3();
var W4 = n3();
var X2 = n3();
var G4 = y();
var k6 = y();
var F5 = n3();
var Q3 = n3();
var Z2 = v3();
var z2 = v3();
var H5 = n3();
var J2 = [y(), y(), y(), y()];
var K = [n3(), n3(), n3(), n3()];
var Y2 = M2();
var $3 = M2();
var ee = M2();
var re = M2();

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DMeshFillSymbolLayer.js
var Ne = ["mesh"];
var Ie = class extends y4 {
  constructor(e36, t27, r25, o27) {
    super(e36, t27, r25, o27), this._materialInfoCache = new t24(), this._fastUpdateProcessor = new r18(), this._textures = /* @__PURE__ */ new Map(), this.ensureDrapedStatus(false);
  }
  async doLoad() {
    t11.DRAW_MESH_GEOMETRY_NORMALS && (this._debugVertexNormalMaterial = new U3({ color: [1, 0, 1, 1] }), this._debugTangentNormalMaterial = new U3({ color: [1, 0.5, 0, 1] }), this._debugFaceNormalMaterial = new U3({ color: [0, 1, 1, 1] }));
  }
  destroy() {
    super.destroy(), this._textures.forEach((e36) => e36.unload()), this._context.stage.removeMany(this._materialInfoCache.materials), this._context.stage.removeMany(Array.from(this._textures.values())), this._materialInfoCache.clear(), this._textures.clear(), this._fastUpdateProcessor.destroy(this._context.stage);
  }
  get materials() {
    return this._materialInfoCache.materials;
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry, Ne, "fill on mesh-3d")) return null;
    const r25 = this.setGraphicElevationContext(t27), o27 = e36.renderingInfo;
    return this._createAs3DShape(t27, o27, r25, t27.uid);
  }
  onRemoveGraphic(e36) {
    this._fastUpdateProcessor.onRemoveGraphic(e36, this._materialInfoCache, this._context);
  }
  layerOpacityChanged(e36, t27) {
    const r25 = this._getLayerOpacity();
    this._updateMaterialParameters((e37) => {
      e37.material.setParameters({ layerOpacity: r25 });
      const t28 = e37.material.parameters;
      this._setMaterialTransparentParameter(t28, e37), e37.material.setParameters({ transparent: t28.transparent });
    }), e36.forEach((e37) => {
      var _a;
      return (_a = t27(e37)) == null ? void 0 : _a.layerOpacityChanged(r25, this._context.isAsync);
    });
  }
  layerElevationInfoChanged(e36, t27) {
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, g8);
  }
  slicePlaneEnabledChanged(e36, t27) {
    return this._updateMaterialParameters(({ material: e37 }) => {
      e37.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled });
    }), e36.forEach((e37) => {
      var _a;
      return (_a = t27(e37)) == null ? void 0 : _a.slicePlaneEnabledChanged(this._context.slicePlaneEnabled, this._context.isAsync);
    }), true;
  }
  physicalBasedRenderingChanged() {
    const e36 = this._usePBR();
    return this._updateMaterialParameters(({ material: t27 }) => t27.setParameters({ usePBR: e36 })), true;
  }
  updateTransform(e36, t27, r25, o27) {
    if (!e36.fastTransformUpdatesAllowed) return false;
    const a26 = e36.fastTransformUpdatesEnabled;
    switch (o27) {
      case a16.EnableFastUpdates:
        if (a26) return true;
        break;
      case a16.DisableFastUpdates:
        if (!a26) return true;
        break;
      default:
        if (!a26) return !!this.updateTransform(e36, t27, r25, a16.EnableFastUpdates) && (e36.autoDisableFastTransformUpdates(() => this.updateTransform(e36, t27, r25, a16.DisableFastUpdates)), true);
    }
    const n33 = this._context.renderCoordsHelper.spatialReference, s27 = at2, { origin: i20, transform: l31 } = r25;
    if (!m5(t27, o6(Ze, i20.x, i20.y, i20.z ?? 0), s27, n33)) return false;
    switch (o27) {
      case a16.EnableFastUpdates:
        this._fastUpdateProcessor.enable(e36, this._materialInfoCache, this._context);
        break;
      case a16.DisableFastUpdates:
        this._fastUpdateProcessor.disable(e36, this._materialInfoCache, this._context);
        break;
      case a16.UpdateFastLocalOrigin:
        e36.updateFastLocalOrigin(s27, l31, this._context.localOriginFactory);
    }
    const { elevationContext: c20 } = e36;
    c20.centerPointInElevationSR = this._getCenterPointInElevationSR(s27);
    const { elevationProvider: u26, renderCoordsHelper: m17 } = this._context, f28 = (e37, t28) => c10(e37, u26, c20, m17, t28);
    return e36.alignedSampledElevation = p15(e36, c20, u26.spatialReference, f28, m17, s27), e36.updateTransform(s27, l31, this._context.isAsync), e36.updateAutoDisableFastTransformUpdates(() => this.updateTransform(e36, t27, r25, a16.DisableFastUpdates)), true;
  }
  _requiresSymbolVertexColors() {
    return this._drivenProperties.color || this._drivenProperties.opacity;
  }
  _materialPropertiesDefault(e36, t27) {
    const r25 = this._requiresSymbolVertexColors(), o27 = !!e36.vertexAttributes.color, a26 = !!e36.vertexAttributes.tangent;
    return { hasSymbolVertexColors: r25, hasVertexColors: o27, hasVertexTangents: a26, uid: `vc:${o27},vt:${a26},vct${t27},svc:${r25}` };
  }
  _materialProperties(e36, t27, r25) {
    const o27 = this._materialPropertiesDefault(e36, r25);
    if (!t27.material) return o27;
    const { color: a26, colorTexture: n33, colorTextureTransform: s27, normalTexture: i20, normalTextureTransform: l31, doubleSided: c20, alphaCutoff: u26, alphaMode: m17 } = t27.material, f28 = Ye(a26), p25 = Ye(n33), h15 = Je(s27), d16 = Ye(i20), g14 = Je(l31);
    if (o27.color = a26, o27.colorTexture = n33, o27.normalTexture = i20, o27.uid = `${o27.uid},cmuid:${f28},ctmuid:${p25},cttuid:${h15},ntmuid:${d16},nttuid:${g14},ds:${c20},ac:${u26},am:${m17}`, t27.material instanceof m8) {
      const { metallic: e37, roughness: r26, metallicRoughnessTexture: a27, metallicRoughnessTextureTransform: n34, emissiveColor: i21, emissiveTexture: c21, emissiveTextureTransform: u27, occlusionTexture: m18, occlusionTextureTransform: f29 } = t27.material, p26 = Ye(a27), h16 = Je(n34), d17 = Ye(i21), g15 = Ye(c21), x9 = Je(u27), _12 = Ye(m18), T6 = Je(f29);
      o27.metallic = e37, o27.roughness = r26, o27.metallicRoughnessTexture = a27, o27.emissiveColor = i21, o27.emissiveTexture = c21, o27.occlusionTexture = m18, o27.colorTextureTransform = $e(s27), o27.normalTextureTransform = $e(l31), o27.emissiveTextureTransform = $e(u27), o27.occlusionTextureTransform = $e(f29), o27.metallicRoughnessTextureTransform = $e(n34), o27.uid = `${o27.uid},mrm:${e37},mrr:${r26},mrt:${p26},mrtt:${h16},emuid:${d17},etmuid:${g15},ett:${x9},otmuid:${_12},ott:${T6}`;
    }
    return o27;
  }
  _getInternalTexture(e36, t27 = i8.Opaque) {
    const a26 = We(e36);
    if (!a26) return null;
    const n33 = `${e36.contentHash}/${t27}`;
    let s27 = this._textures.get(n33);
    if (s27) {
      const e37 = this._context.stage.renderView.textures;
      let t28 = null;
      const a27 = e37.acquire(s27.id);
      return null == a27 || S(a27) || (s27.events.on("unloaded", () => t28 = t(t28)), t28 = a27), s27;
    }
    let i20 = null;
    const l31 = this._context.stage.renderView.renderingContext.parameters.maxMaxAnisotropy, c20 = { wrap: He(e36.wrap), noUnpackFlip: true, maxAnisotropy: l31, mipmap: l31 > 1 };
    return n17(a26) ? (i20 = a26.data, c20.preMultiplyAlpha = false, c20.encoding = a26.encoding) : (i20 = a26, c20.preMultiplyAlpha = t27 !== i8.Opaque, c20.downsampleUncompressed = this._context.graphicsCoreOwner.view.qualitySettings.graphics3D.uncompressedTextureDownsamplingEnabled), s27 = new N5(i20, c20), this._textures.set(n33, s27), s27.load(this._context.stage.renderView.renderingContext), this._context.stage.add(s27), s27.events.on("unloaded", () => {
      this._textures.delete(n33);
    }), s27;
  }
  _setInternalMaterialTextureParameters(t27, r25) {
    var _a, _b, _c, _d;
    if (null != t27.colorTexture) {
      const e36 = this._getInternalTexture(t27.colorTexture, r25.textureAlphaMode);
      e36 ? (r25.textureId = e36.id, r25.textureAlphaPremultiplied = !!e36.parameters.preMultiplyAlpha) : r25.textureId = void 0;
    }
    t27.normalTexture && (r25.normalTextureId = (_a = this._getInternalTexture(t27.normalTexture)) == null ? void 0 : _a.id), t27.emissiveColor && (r25.emissiveFactor = h2.toUnitRGB(t27.emissiveColor)), t27.emissiveTexture && (r25.emissiveTextureId = (_b = this._getInternalTexture(t27.emissiveTexture)) == null ? void 0 : _b.id), t27.occlusionTexture && (r25.occlusionTextureId = (_c = this._getInternalTexture(t27.occlusionTexture)) == null ? void 0 : _c.id), t27.metallicRoughnessTexture && (r25.metallicRoughnessTextureId = (_d = this._getInternalTexture(t27.metallicRoughnessTexture)) == null ? void 0 : _d.id);
  }
  _setInternalMaterialParameters(e36, t27) {
    var _a, _b;
    null != e36.color && ze(e36.color, t27), this._setInternalMaterialTextureParameters(e36, t27), t27.colorTextureTransformMatrix = s18(e36.colorTextureTransform), t27.normalTextureTransformMatrix = s18(e36.normalTextureTransform);
    const r25 = null != ((_a = e36.normalTextureTransform) == null ? void 0 : _a.scale) ? (_b = e36.normalTextureTransform) == null ? void 0 : _b.scale : s11;
    t27.scale = [r25[0], r25[1]], t27.occlusionTextureTransformMatrix = s18(e36.occlusionTextureTransform), t27.emissiveTextureTransformMatrix = s18(e36.emissiveTextureTransform), t27.metallicRoughnessTextureTransformMatrix = s18(e36.metallicRoughnessTextureTransform);
  }
  _setExternalMaterialParameters(t27, r25 = ((_b) => (_b = ((_a) => (_a = this.symbolLayer) == null ? void 0 : _a.material)()) == null ? void 0 : _b.color)()) {
    var _a2;
    const o27 = this._drivenProperties.color;
    let a26 = ((_a2 = this.symbolLayer.material) == null ? void 0 : _a2.colorMixMode) ?? null;
    if (o27) t27.externalColor = N;
    else {
      const o28 = r25 ?? null;
      o28 ? t27.externalColor = h2.toUnitRGBA(o28) : (a26 = null, t27.externalColor = N);
    }
    a26 && (t27.colorMixMode = a26), t27.castShadows = !!this.symbolLayer.castShadows;
  }
  _getOrCreateMaterial(t27, r25) {
    var _a, _b, _c;
    const o27 = (_a = r25.material) == null ? void 0 : _a.color, a26 = (_b = r25.material) == null ? void 0 : _b.colorTexture, n33 = (_c = r25.material) == null ? void 0 : _c.alphaMode, s27 = "blend" === n33, i20 = !("opaque" === n33) && (ke(t27) || null != o27 && o27.a < 1 || (a26 == null ? void 0 : a26.transparent) || s27), l31 = this._materialProperties(t27, r25, i20), c20 = this._materialInfoCache.byUid(l31.uid);
    if (c20) return this._setInternalMaterialTextureParameters(l31, c20.material.parameters), c20.material;
    const u26 = { uid: l31.uid, material: null, isComponentTransparent: i20, alphaMode: r25.material ? r25.material.alphaMode : "opaque" }, m17 = n13({ normalTexture: l31.normalTexture, metallicRoughnessTexture: l31.metallicRoughnessTexture, metallicFactor: l31.metallic, roughnessFactor: l31.roughness, emissiveTexture: l31.emissiveTexture, emissiveFactor: h2.toUnitRGB(l31.emissiveColor), occlusionTexture: l31.occlusionTexture }), f28 = { usePBR: this._usePBR(), isSchematic: m17, hasVertexColors: l31.hasVertexColors, hasSymbolColors: l31.hasSymbolVertexColors, hasVertexTangents: l31.hasVertexTangents, ambient: _2, diffuse: s7, opacity: 1, doubleSided: true, doubleSidedType: "winding-order", cullFace: e21.None, layerOpacity: this._getLayerOpacity(), hasSlicePlane: this._context.slicePlaneEnabled };
    f28.mrrFactors = m17 ? o15 : [l31.metallic, l31.roughness, t14[2]], r25.material && (f28.doubleSided = r25.material.doubleSided, f28.cullFace = r25.material.doubleSided ? e21.None : e21.Back, f28.textureAlphaCutoff = r25.material.alphaCutoff), this._setExternalMaterialParameters(f28), this._setMaterialTransparentParameter(f28, u26), this._setInternalMaterialParameters(l31, f28);
    const p25 = new z(f28, this._context);
    return u26.material = p25, this._materialInfoCache.set(l31.uid, u26), this._context.stage.add(p25), p25;
  }
  prepareSymbolLayerPatch(e36) {
    if ("partial" !== e36.diff.type) return;
    const t27 = e36.diff.diff;
    this._preparePatchColor(e36, t27);
  }
  _preparePatchColor(e36, t27) {
    if (!t27.material || "partial" !== t27.material.type) return;
    const r25 = t27.material.diff;
    if (!r25.color || "complete" !== r25.color.type || null == r25.color.newValue || null == r25.color.oldValue) return;
    const o27 = r25.color.newValue;
    delete r25.color, e36.symbolLayerStatePatches.push(() => {
      this._updateMaterialParameters((e37) => {
        const t28 = e37.material.parameters;
        this._setExternalMaterialParameters(t28, o27), this._setMaterialTransparentParameter(t28, e37), e37.material.setParameters({ externalColor: t28.externalColor, transparent: t28.transparent });
      });
    });
  }
  _usePBR() {
    return this._context.physicalBasedRenderingEnabled;
  }
  _setMaterialTransparentParameter(e36, t27) {
    e36.transparent = this.needsDrivenTransparentPass || t27.isComponentTransparent || e36.layerOpacity < 1 || e36.opacity < 1 || e36.externalColor && e36.externalColor[3] < 1, "auto" === t27.alphaMode ? e36.textureAlphaMode = e36.transparent ? i8.MaskBlend : i8.Opaque : e36.textureAlphaMode = "opaque" === t27.alphaMode ? i8.Opaque : "mask" === t27.alphaMode ? i8.Mask : i8.Blend;
  }
  _createFaceDebugNormals(e36, t27) {
    const r25 = t27.length, o27 = e36.spatialReference.isGeographic ? 20015077 / 180 : 1, n33 = 0.1 * Math.max(e36.extent.width * o27, e36.extent.height * o27, e36.extent.zmax - e36.extent.zmin), i20 = [], l31 = [], c20 = t27[0].transformation, u26 = j4(e14(), c20);
    for (let a26 = 0; a26 < r25; a26++) {
      const e37 = t27[a26].attributes.get(e11.POSITION);
      if (!e37) continue;
      const r26 = e37.data, o28 = e37.indices;
      for (let t28 = 0; t28 < o28.length; t28 += 3) Le(r26, o28, t28, rt), Ve(r26, o28, t28, Ze, et, tt), u9(Ze, Ze, et), u9(Ze, Ze, tt), g3(Ze, Ze, 1 / 3), E2(Ze, Ze, c20), i20.push(...Ze), N2(rt, rt, u26), A3(rt, rt), q4(Ze, Ze, rt, n33), i20.push(...Ze), l31.push(l31.length), l31.push(l31.length);
    }
    return i20.length ? new f13(this._debugFaceNormalMaterial, [[e11.POSITION, new t9(i20, l31, 3, true)]], null, e23.Line) : null;
  }
  _createPerVertexDebugVectors(e36, t27, r25, o27, i20) {
    const l31 = t27.length, c20 = e36.spatialReference.isGeographic ? 20015077 / 180 : 1, u26 = 0.1 * i20 * Math.max(e36.extent.width * c20, e36.extent.height * c20, e36.extent.zmax - e36.extent.zmin), m17 = [], f28 = [], p25 = t27[0].transformation, h15 = j4(e14(), p25);
    r25 === e11.TANGENT && n8(h15, p25);
    for (let a26 = 0; a26 < l31; a26++) {
      const e37 = t27[a26], o28 = e37.attributes.get(e11.POSITION), n33 = e37.attributes.get(r25);
      if (!o28 || !n33) continue;
      const s27 = o28.data, i21 = o28.indices, l32 = n33.data, c21 = n33.indices;
      for (let t28 = 0; t28 < i21.length; t28++) {
        const e38 = 3 * i21[t28], r26 = c21[t28] * n33.stride;
        o6(Ze, s27[e38 + 0], s27[e38 + 1], s27[e38 + 2]), E2(Ze, Ze, p25), m17.push(...Ze), o6(et, l32[r26 + 0], l32[r26 + 1], l32[r26 + 2]), N2(et, et, h15), A3(et, et), q4(Ze, Ze, et, u26), m17.push(...Ze), f28.push(f28.length), f28.push(f28.length);
      }
    }
    return m17.length ? new f13(o27, [[e11.POSITION, new t9(m17, f28, 3, true)]], null, e23.Line) : null;
  }
  _createAs3DShape(e36, t27, r25, o27) {
    const a26 = e36.geometry;
    if ("mesh" !== a26.type) return null;
    const n33 = this._createGeometryInfo(a26, t27, o27);
    if (null == n33) return null;
    const { geometries: s27, objectTransformation: i20 } = n33;
    if (t11.DRAW_MESH_GEOMETRY_NORMALS) {
      const e37 = this._createPerVertexDebugVectors(a26, s27, e11.NORMAL, this._debugVertexNormalMaterial, 1), t28 = this._createPerVertexDebugVectors(a26, s27, e11.TANGENT, this._debugTangentNormalMaterial, 0.5), r26 = this._createFaceDebugNormals(a26, s27);
      e37 && s27.push(e37), t28 && s27.push(t28), r26 && s27.push(r26);
    }
    const l31 = new A8({ geometries: s27, layerUid: this._context.layer.uid, graphicUid: o27, isElevationSource: true });
    l31.transformation = i20;
    const c20 = a8(this.symbolLayer, { opacity: this._getLayerOpacity() }), u26 = c20 ? new j8(s27[0].material, c20, this._context.slicePlaneEnabled) : null, m17 = new p23(this, l31, s27, null, null, p15, r25, u26);
    this._fastUpdateProcessor.onAddGraphic(), m17.needsElevationUpdates = g8(r25.mode), m17.useObjectOriginAsAttachmentOrigin = true, m17.fastTransformUpdatesAllowed = this._fastTransformUpdatesAllowed(a26), r25.centerPointInElevationSR = this._getCenterPointInElevationSR(l31.transformation);
    const { elevationProvider: f28, renderCoordsHelper: p25 } = this._context, h15 = (e37, t28) => c10(e37, f28, r25, p25, t28);
    return m17.alignedSampledElevation = p15(m17, r25, f28.spatialReference, h15, p25), m17;
  }
  _fastTransformUpdatesAllowed(e36) {
    const { vertexSpace: t27, spatialReference: r25 } = e36;
    if (!t8(t27)) return false;
    const { type: o27 } = t27, { view: a26 } = this._context.graphicsCoreOwner, { viewingMode: n33 } = a26.state, s27 = a26.spatialReference;
    return n33 === l8.Global && "local" === o27 || n33 === l8.Local && s4(s27, r25) && "georeferenced" === o27 && !r25.isGeographic;
  }
  _getCenterPointInElevationSR(e36) {
    const t27 = e17(0, 0, 0, this._context.elevationProvider.spatialReference ?? null);
    return t18([e36[12], e36[13], e36[14]], this._context.renderCoordsHelper.spatialReference, t27), t27;
  }
  _passthroughReprojectionInfo(e36) {
    return e36.reprojection === it2.NONE && !!e36.objectTransformation;
  }
  _createPositionBuffer(e36, t27) {
    const r25 = e36.vertexAttributes.position;
    let o27, a26 = r25;
    if (t27.reprojection === it2.NONE) return { position: a26, georeferencedPositionBuffer: o27 };
    const n33 = t27.reprojection === it2.RENDER ? t27.transformBeforeProject : null;
    n33 && (a26 = r10(new Float64Array(a26.length), a26, n33));
    const { normal: s27, tangent: i20 } = e36.vertexAttributes;
    this._passthroughReprojectionInfo(t27) || !s27 && !i20 || (o27 = a26);
    const l31 = a26 === r25 || a26 === o27 ? new Float64Array(a26.length) : a26;
    return o2(a26, e36.spatialReference, 0, l31, this._context.renderCoordsHelper.spatialReference, 0), { position: l31, georeferencedPositionBuffer: o27 };
  }
  _createNormalBuffer(e36, t27, r25, o27) {
    const a26 = e36.vertexAttributes.normal;
    if (null == a26) return null;
    let n33 = a26;
    const s27 = o27.reprojection === it2.RENDER ? o27.transformBeforeProject : null;
    s27 && (n33 = _6(n33, new Float32Array(n33.length), s27));
    const i20 = this._context.graphicsCoreOwner.view.viewingMode;
    if (o27.reprojection === it2.NONE) return n33;
    if ("local" === i20) {
      if (!f(this._context.renderCoordsHelper.spatialReference)) return n33;
      if (null == r25) return null;
      if (e36.spatialReference.isGeographic) {
        const e37 = n33 === a26 ? new Float32Array(n33.length) : n33;
        return b4(n33, V3.NORMAL, r25, e37);
      }
      if (e36.spatialReference.isWebMercator) {
        const e37 = n33 === a26 ? new Float32Array(n33.length) : n33;
        return L3(n33, V3.NORMAL, r25, e37);
      }
      return n33;
    }
    if (null == r25) return null;
    const l31 = n33 === a26 ? new Float32Array(n33.length) : n33, c20 = this._context.renderCoordsHelper.spatialReference;
    return E4(n33, r25, e36.spatialReference, t27, c20, l31);
  }
  _createTangentBuffer(e36, t27, r25, o27) {
    const a26 = e36.vertexAttributes.tangent;
    if (null == a26) return null;
    let n33 = a26;
    const s27 = o27.reprojection === it2.RENDER ? o27.transformBeforeProject : null;
    s27 && (n33 = C(n33, new Float32Array(n33.length), s27));
    const i20 = this._context.graphicsCoreOwner.view.viewingMode;
    if (o27.reprojection === it2.NONE) return n33;
    if ("local" === i20) {
      if (!f(this._context.renderCoordsHelper.spatialReference)) return n33;
      if (null == r25) return null;
      if (e36.spatialReference.isGeographic) {
        const e37 = n33 === a26 ? new Float32Array(n33.length) : n33;
        return b4(n33, V3.TANGENT, r25, e37);
      }
      if (e36.spatialReference.isWebMercator) {
        const e37 = n33 === a26 ? new Float32Array(n33.length) : n33;
        return L3(n33, V3.TANGENT, r25, e37);
      }
      return n33;
    }
    if (null == r25) return null;
    const l31 = n33 === a26 ? new Float32Array(n33.length) : n33, c20 = this._context.renderCoordsHelper.spatialReference;
    return w4(n33, r25, e36.spatialReference, t27, c20, l31);
  }
  _createSymbolColorBuffer(e36) {
    var _a, _b;
    if (this._requiresSymbolVertexColors()) {
      const t27 = this._getVertexOpacityAndColor(e36), r25 = e18((_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.colorMixMode), o27 = new Uint8Array(4);
      return r11(t27, r25, o27), o27;
    }
    return null;
  }
  _createBuffers(e36, t27) {
    const r25 = e36.vertexAttributes && e36.vertexAttributes.position;
    if (!r25) return this.logger.warn("Mesh geometry must contain position vertex attributes"), null;
    const o27 = e36.vertexAttributes.normal, a26 = e36.vertexAttributes.uv, n33 = e36.vertexAttributes.tangent;
    if (o27 && o27.length !== r25.length) return this.logger.warn("Mesh normal vertex buffer must contain the same number of elements as the position buffer"), null;
    if (n33 && n33.length / 4 != r25.length / 3) return this.logger.warn("Mesh tangent vertex buffer must contain the same number of elements as the position buffer"), null;
    if (a26 && a26.length / 2 != r25.length / 3) return this.logger.warn("Mesh uv vertex buffer must contain the same number of elements as the position buffer"), null;
    const s27 = this._computeReprojectionInfo(e36), { position: i20, georeferencedPositionBuffer: l31 } = this._createPositionBuffer(e36, s27), c20 = Ke(e36), u26 = this._createSymbolColorBuffer(t27), f28 = this._createNormalBuffer(e36, i20, l31, s27), p25 = this._createTangentBuffer(e36, i20, l31, s27), h15 = a26, { transformation: d16, position: g14, normal: x9, tangent: _12 } = this._passthroughReprojectionInfo(s27) ? { transformation: s27.objectTransformation, position: i20, normal: f28, tangent: p25 } : this._transformOriginLocal(e36, i20, f28, p25);
    return { positionBuffer: g14, normalBuffer: x9, tangentBuffer: _12, uvBuffer: h15, colorBuffer: c20, symbolColorBuffer: u26, objectTransformation: d16, geometryTransformation: s27.reprojection === it2.NONE && s27.geometryTransformation ? s27.geometryTransformation : e15() };
  }
  _computeReprojectionInfo(e36) {
    var _a;
    const { vertexSpace: t27 } = e36, r25 = "georeferenced" === t27.type ? s4(this._context.renderCoordsHelper.spatialReference, e36.spatialReference) ? it2.NONE : it2.RENDER : it2.NONE;
    if (o10(t27)) return { reprojection: r25 };
    const o27 = t27.origin, a26 = e15(), n33 = ((_a = e36.transform) == null ? void 0 : _a.localMatrix) ?? o9;
    if (r25 === it2.NONE) {
      m5(e36.spatialReference, o27, a26, this._context.renderCoordsHelper.spatialReference);
      return { reprojection: r25, objectTransformation: a26, geometryTransformation: r9(n33) };
    }
    const s27 = q2(e15(), o27);
    return c(s27, s27, n33), { reprojection: r25, transformBeforeProject: s27 };
  }
  _transformOriginLocal(e36, t27, r25, o27) {
    const a26 = this._context.renderCoordsHelper.spatialReference, n33 = e36.origin;
    Xe[0] = n33.x, Xe[1] = n33.y, Xe[2] = n33.z ?? 0;
    const s27 = e15();
    m5(e36.spatialReference, Xe, s27, a26), h4(ot3, s27);
    const { position: i20, normal: l31, tangent: u26 } = e36.vertexAttributes, f28 = t27 === i20 ? new Float64Array(t27.length) : t27;
    r10(f28, t27, ot3);
    const p25 = r25 ? r25 === l31 ? new Float32Array(r25.length) : r25 : null, h15 = o27 ? o27 === u26 ? new Float32Array(o27.length) : o27 : null;
    return r25 && p25 && _6(r25, p25, ot3), o27 && h15 && C(o27, h15, ot3), { transformation: s27, position: f28, normal: p25, tangent: h15 };
  }
  _validateFaces(e36, t27) {
    const r25 = e36.vertexAttributes.position.length / 3, o27 = t27.faces;
    if (o27) {
      let e37 = -1;
      for (let t28 = 0; t28 < o27.length; t28++) {
        const r26 = o27[t28];
        r26 > e37 && (e37 = r26);
      }
      if (r25 <= e37) return this.logger.warn(`Vertex index ${e37} is out of bounds of the mesh position buffer`), false;
    } else if (r25 % 3 != 0) return this.logger.warn("Mesh position buffer length must be a multiple of 9 if no component faces are defined (3 values per vertex * 3 vertices per triangle)"), false;
    return true;
  }
  _isOutsideClippingArea(e36) {
    var _a;
    if (!this._context.clippingExtent) return false;
    const t27 = (_a = e36.vertexAttributes) == null ? void 0 : _a.position;
    if (!t27) return false;
    const r25 = this._context.elevationProvider.spatialReference, o27 = n11(e36, r25 ?? e36.spatialReference);
    return !!o27 && (m2(o27, nt2), !A2(nt2, this._context.clippingExtent));
  }
  _createGeometryInfo(e36, t27, r25) {
    if (!L(e36.spatialReference, this._context.renderCoordsHelper.spatialReference)) return this.logger.warn("Geometry spatial reference is not compatible with the view"), null;
    if (!this._validateVertexSpace(e36)) return null;
    if (this._isOutsideClippingArea(e36)) return null;
    const o27 = this._createBuffers(e36, t27);
    if (null == o27) return null;
    const { positionBuffer: a26, uvBuffer: n33, colorBuffer: s27, symbolColorBuffer: i20, normalBuffer: l31, tangentBuffer: c20, objectTransformation: m17, geometryTransformation: f28 } = o27, p25 = e36.components ?? st2, h15 = new Array();
    let d16 = false;
    const g14 = I(Ze, m17), x9 = this._context.localOriginFactory.getOrigin(g14);
    for (const u26 of p25) {
      if (!this._validateFaces(e36, u26)) return null;
      const t28 = Ue(e36, u26);
      if (0 === t28.length) continue;
      const o28 = Be(a26, l31, u26, t28);
      o28.didFlipNormals && (d16 = true);
      const m18 = [[e11.POSITION, new t9(a26, t28, 3, true)], [e11.NORMAL, new t9(o28.normals, o28.indices, 3, true)]];
      s27 && m18.push([e11.COLOR, new t9(s27, t28, 4, true)]), i20 && m18.push([e11.SYMBOLCOLOR, new t9(i20, w3(t28.length), 4, true)]), n33 && m18.push([e11.UV0, new t9(n33, t28, 2, true)]), c20 && m18.push([e11.TANGENT, new t9(c20, t28, 4, true)]);
      const p26 = this._context.stage.renderView.getObjectAndLayerIdColor({ graphicUid: r25, layerUid: this._context.layer.uid }), g15 = this._getOrCreateMaterial(e36, u26), _12 = new f13(g15, m18, null, e23.Mesh, p26);
      _12.transformation = f28, _12.localOrigin = x9, h15.push(_12);
    }
    return d16 && this.logger.warn("Normals have been automatically flipped to be consistent with the counter clock wise face winding order. It is better to generate mesh geometries that have consistent normals."), { geometries: h15, objectTransformation: m17 };
  }
  _updateMaterialParameters(e36) {
    this._materialInfoCache.forEachMaterialInfo(e36), this._fastUpdateProcessor.forEachMaterialInfo(e36), this._fastUpdateProcessor.forEachClonedMaterial((e37, t27) => {
      t27.setParameters(e37.parameters);
    });
  }
  _validateVertexSpace(e36) {
    const { _context: { graphicsCoreOwner: { view: { state: { viewingMode: t27 } } } } } = this, { vertexSpace: r25 } = e36;
    return t27 !== l8.Local || "local" !== r25.type || (this.logger.warn("Displaying a mesh with a local vertex space in a view in local viewing mode is not supported."), false);
  }
  test() {
    return { ...super.test(), materials: this._materialInfoCache.materials };
  }
};
var Se = class {
  constructor(e36, t27, r25) {
    this.normals = e36, this.indices = t27, this.didFlipNormals = r25;
  }
};
function Ue(e36, t27) {
  return t27.faces ?? o8(e36.vertexAttributes.position.length / 3);
}
function Be(e36, t27, r25, o27) {
  switch (r25.shading || "flat") {
    default:
    case "source":
      return De(e36, t27, r25, o27);
    case "flat":
      return Fe(e36, o27);
    case "smooth":
      return Ge(e36, o27);
  }
}
function Fe(e36, t27) {
  const r25 = n7(t27.length), o27 = new Array(3 * t27.length);
  for (let a26 = 0; a26 < t27.length; a26 += 3) {
    const n33 = Le(e36, t27, a26, rt);
    for (let e37 = 0; e37 < 3; e37++) r25[a26 + e37] = n33[e37], o27[a26 + e37] = a26 / 3;
  }
  return new Se(r25, o27, false);
}
function De(e36, t27, r25, o27) {
  if (null == t27) return Fe(e36, o27);
  let a26 = false;
  if (!r25.trustSourceNormals) for (let n33 = 0; n33 < o27.length; n33 += 3) {
    Le(e36, o27, n33, rt);
    for (let e37 = 0; e37 < 3; e37++) {
      const r26 = 3 * o27[n33 + e37];
      Ze[0] = t27[r26], Ze[1] = t27[r26 + 1], Ze[2] = t27[r26 + 2], P2(rt, Ze) < 0 && (t27[r26] = -t27[r26], t27[r26 + 1] = -t27[r26 + 1], t27[r26 + 2] = -t27[r26 + 2], a26 = true);
    }
  }
  return new Se(t27, o27, a26);
}
function Ge(e36, t27) {
  const r25 = {};
  for (let n33 = 0; n33 < t27.length; n33 += 3) {
    const o28 = Le(e36, t27, n33, rt);
    for (let e37 = 0; e37 < 3; e37++) {
      const a27 = t27[n33 + e37];
      let s27 = r25[a27];
      s27 || (s27 = { normal: n3(), count: 0 }, r25[a27] = s27), u9(s27.normal, s27.normal, o28), s27.count++;
    }
  }
  const o27 = n7(3 * t27.length), a26 = new Array(3 * t27.length);
  for (let n33 = 0; n33 < t27.length; n33++) {
    const e37 = r25[t27[n33]];
    1 !== e37.count && (A3(e37.normal, e37.normal), e37.count = 1);
    for (let t28 = 0; t28 < 3; t28++) o27[3 * n33 + t28] = e37.normal[t28];
    a26[n33] = n33;
  }
  return new Se(o27, a26, false);
}
function Ve(e36, t27, r25, o27, a26, n33) {
  const s27 = 3 * t27[r25], i20 = 3 * t27[r25 + 1], l31 = 3 * t27[r25 + 2];
  o27[0] = e36[s27], o27[1] = e36[s27 + 1], o27[2] = e36[s27 + 2], a26[0] = e36[i20], a26[1] = e36[i20 + 1], a26[2] = e36[i20 + 2], n33[0] = e36[l31], n33[1] = e36[l31 + 1], n33[2] = e36[l31 + 2];
}
function Le(e36, t27, r25, o27) {
  return Ve(e36, t27, r25, Ze, et, tt), c2(et, et, Ze), c2(tt, tt, Ze), _3(Ze, et, tt), A3(o27, Ze), o27;
}
function $e(e36) {
  if (!e36) return null;
  const { scale: r25, offset: o27, rotation: a26 } = e36;
  return { scale: r25, offset: o27, rotation: s(a26) };
}
function He(e36 = "repeat") {
  if ("string" == typeof e36) {
    const t27 = qe(e36);
    return { s: t27, t: t27 };
  }
  return { s: qe(e36.horizontal), t: qe(e36.vertical) };
}
function qe(e36) {
  switch (e36) {
    case "clamp":
      return D.CLAMP_TO_EDGE;
    case "mirror":
      return D.MIRRORED_REPEAT;
    default:
      return D.REPEAT;
  }
}
function ke(e36) {
  const t27 = e36.vertexAttributes.color;
  if (null == t27) return false;
  for (let r25 = 3; r25 < t27.length; r25 += 4) if (255 !== t27[r25]) return true;
  return false;
}
function ze(t27, r25) {
  r25.diffuse = h2.toUnitRGB(t27), r25.opacity = t27.a;
}
function We(e36) {
  return e36.data ?? e36.url;
}
function Ye(t27) {
  return null == t27 ? "-" : t27 instanceof h2 ? t27.toHex() : t27.contentHash;
}
function Je(e36) {
  const { offset: t27, scale: r25, rotation: o27 } = e36 ?? Qe;
  return `${t27[0]},${t27[1]},${o27},${r25[0]},${r25[1]}`;
}
function Ke(e36) {
  return e36.vertexAttributes.color;
}
var Qe = new i14();
var Xe = n3();
var Ze = n3();
var et = n3();
var tt = n3();
var rt = n3();
var ot3 = e15();
var at2 = e15();
var nt2 = u4();
var st2 = [new f14()];
var it2;
!function(e36) {
  e36[e36.NONE = 0] = "NONE", e36[e36.RENDER = 1] = "RENDER";
}(it2 || (it2 = {}));

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DLodInstanceGraphicLayer.js
var u21 = class {
  constructor(t27, e36, i20, n33, s27) {
    this.graphics3DSymbolLayer = t27, this.instanceIndex = e36, this.elevationAligner = i20, this.elevationContext = n33, this._highlightOrderMap = s27, this.type = "lod-instance", this._highlights = /* @__PURE__ */ new Set(), this.alignedSampledElevation = 0, this.isElevationSource = false, this.needsElevationUpdates = false, this._highlightName = null;
  }
  initialize() {
  }
  setVisibility(t27) {
    const { instanceData: e36 } = this;
    t27 !== e36.getVisible(this.instanceIndex) && e36.setVisible(this.instanceIndex, t27);
  }
  destroy() {
    null != this.instanceIndex && (this.instanceData.removeInstance(this.instanceIndex), this.graphics3DSymbolLayer.notifyDestroyGraphicLayer(this));
  }
  alignWithElevation(t27, e36, i20) {
    if (this.elevationAligner) {
      l15(this.elevationContext.featureExpressionInfoContext, i20);
      const n33 = (i21, n34) => c10(i21, t27, this.elevationContext, e36, n34), s27 = this.elevationAligner(this, this.elevationContext, t27.spatialReference, n33, e36);
      null != s27 && (this.alignedSampledElevation = s27);
    }
  }
  getCenterObjectSpace(t27 = n3()) {
    return this.instanceData.getCombinedLocalTransform(this.instanceIndex, _8), E2(t27, this._lodRenderer.baseBoundingSphere.center, _8);
  }
  getBoundingBoxObjectSpace(t27 = u4()) {
    this.instanceData.getCombinedLocalTransform(this.instanceIndex, _8);
    const n33 = this._lodRenderer.baseBoundingBox;
    q(t27);
    for (let s27 = 0; s27 < 8; ++s27) o6(b14, 1 & s27 ? n33[3] : n33[0], 2 & s27 ? n33[4] : n33[1], 4 & s27 ? n33[5] : n33[2]), E2(b14, b14, _8), l3(t27, b14);
    return t27;
  }
  computeAttachmentOrigin(t27) {
    this.instanceData.getGlobalTransform(this.instanceIndex, _8), t27.render.origin[0] += _8[12], t27.render.origin[1] += _8[13], t27.render.origin[2] += _8[14], t27.render.num++;
  }
  async getProjectedBoundingBox(t27, i20, n33, a26, h15) {
    const g14 = this.getBoundingBoxObjectSpace(h15), c20 = x5, m17 = v(g14) ? 1 : c20.length;
    this.instanceData.getGlobalTransform(this.instanceIndex, _8);
    for (let s27 = 0; s27 < m17; s27++) {
      const t28 = c20[s27];
      b14[0] = g14[t28[0]], b14[1] = g14[t28[1]], b14[2] = g14[t28[2]], E2(b14, b14, _8), f21[3 * s27] = b14[0], f21[3 * s27 + 1] = b14[1], f21[3 * s27 + 2] = b14[2];
    }
    if (!t27(f21, 0, m17)) return null;
    q(g14);
    let p25 = null;
    this.calculateRelativeScreenBounds && (p25 = this.calculateRelativeScreenBounds());
    for (let e36 = 0; e36 < 3 * m17; e36 += 3) {
      for (let t28 = 0; t28 < 3; t28++) g14[t28] = Math.min(g14[t28], f21[e36 + t28]), g14[t28 + 3] = Math.max(g14[t28 + 3], f21[e36 + t28]);
      p25 && n33.push({ location: f21.slice(e36, e36 + 3), screenSpaceBoundingRect: p25 });
    }
    if (i20 && (p(g14, v4), "absolute-height" !== this.elevationContext.mode)) {
      let t28;
      const e36 = E7(g14, i20.service.spatialReference, i20);
      try {
        t28 = await i20.service.queryElevation(v4[0], v4[1], a26, e36, "ground");
      } catch (u26) {
      }
      null != t28 && R(g14, 0, 0, -this.alignedSampledElevation + t28);
    }
    return g14;
  }
  addObjectState(t27) {
    t27.stateType === t12.Highlight && this.addObjectHighlightState(t27);
  }
  addObjectHighlightState(t27) {
    const e36 = new e26(t27.highlightName);
    this._addHighlightId(e36), t27.addExternal((t28) => {
      this._removeHighlightId(t28);
    }, e36);
  }
  removeObjectState(t27) {
    this._highlights.forEach((e36) => t27.remove(e36));
  }
  updateHighlights(t27) {
    this._highlightOrderMap = t27, this._updateHighlightOptions();
  }
  _calculateHighlightOptions() {
    let t27 = -1, e36 = null;
    return this._highlights.forEach(({ highlightName: i20 }) => {
      const n33 = this._highlightOrderMap.get(i20);
      void 0 !== n33 && n33 > t27 && (t27 = n33, e36 = i20);
    }), e36;
  }
  _addHighlightId(t27) {
    this._highlights.add(t27), this._updateHighlightOptions();
  }
  _removeHighlightId(t27) {
    this._highlights.delete(t27), this._updateHighlightOptions();
  }
  _updateHighlightOptions() {
    const t27 = this._calculateHighlightOptions();
    t27 !== this._highlightName && (this._highlightName = t27, this.instanceData.setHighlight(this.instanceIndex, t27));
  }
  get _lodRenderer() {
    return this.graphics3DSymbolLayer.lodRenderer;
  }
  get instanceData() {
    return this._lodRenderer.instanceData;
  }
};
var f21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
var b14 = n3();
var v4 = n3();
var x5 = [[0, 1, 2], [3, 1, 2], [0, 4, 2], [3, 4, 2], [0, 1, 5], [3, 1, 5], [0, 4, 5], [3, 4, 5]];
var _8 = e15();

// node_modules/@arcgis/core/views/3d/layers/graphics/lodResourceUtils.js
function t25(e36, t27) {
  const s27 = e36.stageResources.geometries.map((r25) => new l12(new a11(r25), e36.stageResources.textures)), l31 = null == e36.lodThreshold || 0 === e36.lodThreshold && t27 > 0 ? u22(s27) : e36.lodThreshold;
  return new f11(s27, l31, e36.pivotOffset);
}
function s23(n33) {
  return new h8(n33.map((e36, n34) => t25(e36, n34)));
}
function u22(e36) {
  const n33 = e36.reduce((e37, n34) => e37 + n34.numTriangles, 0);
  return Math.sqrt(n33 * l23 / Math.PI);
}
var l23 = 20;

// node_modules/@arcgis/core/views/3d/layers/graphics/webStyleUtils.js
async function r19(r25) {
  var _a;
  if (null == r25 || null == r25.styleName && null == r25.styleUrl) return null;
  const o27 = r25.name;
  if (null == o27) throw new s2("symbolstyleutils:style-symbol-reference-name-missing", "Missing name in style symbol reference");
  const u26 = { portal: r25.portal }, i20 = await i13(r25, u26).catch(() => null);
  if (null === i20) return null;
  const m17 = g6(o27, i20.data);
  if (m17 && !((_a = m17.formatInfos) == null ? void 0 : _a.some((l31) => "gltf_basisu" === l31.type))) return null;
  const a26 = await j7(i20, o27, u26, y3, { acceptedFormats: ["web-gltf-basisu", "web-gltf", "web"] }).catch(() => null);
  if (null === a26 || "point-3d" !== a26.type) return null;
  const y11 = a26.symbolLayers.items[0];
  return "object" === y11.type ? y11.resource : null;
}

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DObjectSymbolLayer.js
var de2 = class {
  constructor(e36, t27, s27, r25, i20, a26, o27, n33, l31, c20, h15, d16) {
    this.lodResources = e36, this.lodRenderer = t27, this.stageResources = s27, this.originalMaterialParameters = r25, this.resourceSize = i20, this.isEsriSymbolResource = a26, this.isWosr = o27, this.resourceBoundingBox = n33, this.symbolSize = l31, this.extentPadding = c20, this.physicalBasedRenderingEnabled = h15, this.pivotOffset = d16;
  }
};
var me2 = class extends y4 {
  getCachedSize() {
    const [e36, t27, s27] = null != this._resources ? this._resources.symbolSize : [1, 1, 1];
    return { width: e36, depth: t27, height: s27 };
  }
  constructor(e36, t27, s27, r25) {
    super(e36, t27, s27, r25), this._resources = null, this._optionalFields = new Array(), this._instanceIndexToGraphicUid = /* @__PURE__ */ new Map(), this._hasLoadedPBRTextures = false, this._disposeResourceHandles = new Array(), this.skipHighSymbolLodsChanged = false, this.ensureDrapedStatus(false), this._hasLoadedPBRTextures = s27.physicalBasedRenderingEnabled;
  }
  async doLoad(e36) {
    var _a;
    if (!this._drivenProperties.size) {
      const e37 = U(this.symbolLayer);
      if (e37) throw new Error(e37);
    }
    if (this._isPrimitive) {
      const t27 = this.symbolLayer.resource, s27 = t27 && S3(t27 == null ? void 0 : t27.primitive) ? t27.primitive : d6;
      this._resources = await this._createResourcesForPrimitive(s27, e36);
    } else {
      const t27 = await r19(this.symbol.styleOrigin), s27 = (t27 == null ? void 0 : t27.href) ?? ((_a = this.symbolLayer.resource) == null ? void 0 : _a.href);
      this._resources = await this._createResourcesForUrl(s27, e36);
    }
    this.layerOpacityChanged(), this.slicePlaneEnabledChanged(), this.physicalBasedRenderingChanged(), this.complexity = this.computeComplexity();
  }
  get extentPadding() {
    return null != this._resources ? this._resources.extentPadding : 0;
  }
  get _isPrimitive() {
    var _a;
    return !((_a = this.symbolLayer.resource) == null ? void 0 : _a.href);
  }
  get lodRenderer() {
    var _a;
    return (_a = this._resources) == null ? void 0 : _a.lodRenderer;
  }
  get materials() {
    var _a;
    return ((_a = this._resources) == null ? void 0 : _a.stageResources.materials) ?? [];
  }
  _setMaterialTransparencyParameters(e36, t27 = ((_b) => (_b = ((_a) => (_a = this.symbolLayer) == null ? void 0 : _a.material)()) == null ? void 0 : _b.color)()) {
    const s27 = this._getCombinedOpacity(t27), r25 = s27 < 1 || this.needsDrivenTransparentPass;
    return e36.transparent = r25, e36.opacity = s27, e36.cullFace = r25 ? e21.None : e21.Back, e36;
  }
  async _createResourcesForPrimitive(t27, r25) {
    var _a, _b;
    const i20 = this.symbolLayer, a26 = u4(c8(t27)), o27 = u5(b2(a26)), n33 = u5(t17(o27, i20)), h15 = r7(n33), d16 = false, m17 = false, p25 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.emissiveFactor, u26 = p25 ? b3(t3(p25)) : _2, b19 = { usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: true, mrrFactors: o15, ambient: s7, diffuse: s7, hasSlicePlane: this._context.slicePlaneEnabled, castShadows: this.symbolLayer.castShadows, emissiveFactor: u26, offsetTransparentBackfaces: !this.symbolLayer.isPrimitive }, P10 = !!b19.usePBR;
    this._setMaterialTransparencyParameters(b19);
    const x9 = this.symbol;
    if ("point-3d" === x9.type && x9.verticalOffset) {
      const { screenLength: e36, minWorldLength: t28, maxWorldLength: r26 } = x9.verticalOffset;
      b19.verticalOffset = { screenLength: u6(e36), minWorldLength: t28 || 0, maxWorldLength: null != r26 ? r26 : 1 / 0 }, b19.castShadows = false;
    }
    if (this._context.screenSizePerspectiveEnabled && (b19.screenSizePerspective = this._context.sharedResources.screenSizePerspectiveSettings), this._drivenProperties.color) b19.externalColor = N;
    else {
      const t28 = null != i20.material ? i20.material.color : null, s27 = null != t28 ? h2.toUnitRGBA(t28) : N;
      b19.externalColor = s27;
    }
    this._fastUpdates = O4(this._context.renderer, this._fastVisualVariableConvertOptions(a26, n33, o27, null)), b19.isInstanced = true, this._fastUpdates ? (Object.assign(b19, this._fastUpdates.materialParameters), this._optionalFields.push(e11.FEATUREATTRIBUTE)) : this._hasPerInstanceColor() && (b19.hasInstancedColor = true, this._optionalFields.push(e11.COLOR)), e19() && this._optionalFields.push(e11.OBJECTANDLAYERIDCOLOR);
    const v7 = new z(b19, this._context), L9 = l17(t27, v7);
    if (!L9) throw new Error(`Unknown object symbol primitive: ${t27}`);
    const w13 = L9.getMaterials().map((e36) => ({ opacity: 1, transparent: e36.parameters.transparent })), E13 = await this._createStageResources(L9, P10, r25), j13 = await this._createLodRenderer(L9, r25);
    return new de2(L9, j13, E13, w13, o27, d16, m17, a26, n33, h15, P10, null);
  }
  async _createResourcesForUrl(e36, t27) {
    var _a, _b;
    const r25 = { isInstanced: true, hasSlicePlane: this._context.slicePlaneEnabled, castShadows: this.symbolLayer.castShadows }, i20 = { spherical: this._context.spherical, doublePrecisionRequiresObfuscation: this._context.doublePrecisionRequiresObfuscation, materialParameters: r25, streamDataRequester: this._context.streamDataRequester, cache: this._context.sharedResources.objectResourceCache };
    this._fastUpdates = O4(this._context.renderer, this._fastVisualVariableConvertOptions(null, null, null, null)), this._fastUpdates ? (Object.assign(i20.materialParameters, this._fastUpdates.materialParameters), this._optionalFields.push(e11.FEATUREATTRIBUTE)) : this._hasPerInstanceColor() && (i20.materialParameters.hasInstancedColor = true, this._optionalFields.push(e11.COLOR)), e19() && this._optionalFields.push(e11.OBJECTANDLAYERIDCOLOR);
    const a26 = this.symbol;
    if ("point-3d" === a26.type && a26.verticalOffset) {
      const { screenLength: e37, minWorldLength: t28, maxWorldLength: r26 } = a26.verticalOffset;
      i20.materialParameters.verticalOffset = { screenLength: u6(e37), minWorldLength: t28 || 0, maxWorldLength: null != r26 ? r26 : 1 / 0 }, i20.materialParameters.castShadows = false;
    }
    const o27 = this._context.physicalBasedRenderingEnabled;
    i20.signal = t27, i20.usePBR = o27, i20.skipHighLods = this._context.skipHighSymbolLods;
    const n33 = await Y(e36, i20), c20 = n33.isEsriSymbolResource, h15 = n33.isWosr, d16 = s23(n33.lods), m17 = this._context, p25 = this.symbolLayer.material, u26 = this._getExternalColorParameters(p25), f28 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, _12 = this._getCombinedOpacity(f28, { hasIntrinsicColor: true }), g14 = this.needsDrivenTransparentPass, b19 = d16.getMaterials(), P10 = d16.getMaterials().map((e37) => ({ opacity: e37.parameters.opacity || 1, transparent: e37.parameters.transparent }));
    b19.forEach((e37) => {
      const t28 = e37.parameters;
      e37.setParameters(u26);
      const s27 = t28.opacity * _12, r26 = s27 < 1 || g14 || t28.transparent;
      e37.setParameters({ opacity: s27, transparent: r26 }), m17.screenSizePerspectiveEnabled && e37.setParameters({ screenSizePerspective: m17.sharedResources.screenSizePerspectiveSettings });
    });
    const R13 = n33.referenceBoundingBox, x9 = u5(b2(R13)), v7 = u5(d16.levels[0].pivotOffset), L9 = u5(t17(x9, this.symbolLayer)), C9 = r7(L9), w13 = this._fastUpdates;
    G(w13, this._context.renderer, this._fastVisualVariableConvertOptions(R13, L9, x9, v7)) && b19.forEach((e37) => e37.setParameters(w13.materialParameters));
    const E13 = await this._createStageResources(d16, o27, t27), j13 = await this._createLodRenderer(d16, t27);
    return new de2(d16, j13, E13, P10, x9, c20, h15, R13, L9, C9, o27, v7);
  }
  _addDisposeResource(e36) {
    this._disposeResourceHandles.push(e36);
  }
  async _createStageResources(e36, s27, r25) {
    const i20 = this._context.stage, a26 = e36.getMaterials();
    s27 !== this._context.physicalBasedRenderingEnabled && this.physicalBasedRenderingChanged(), i20.addMany(a26), this._addDisposeResource(() => i20.removeMany(a26));
    const o27 = e36.getTextures();
    i20.addMany(o27), this._addDisposeResource(() => {
      o27.forEach((e37) => e37.unload()), i20.removeMany(o27);
    }), await Promise.all(o27.map((e37) => this._context.stage.schedule(() => e37.load(i20.renderView.renderingContext), r25))), s3(r25);
    const n33 = e36.getEngineGeometries();
    return i20.addMany(n33), this._addDisposeResource(() => i20.removeMany(n33)), { materials: a26, textures: o27, geometries: n33 };
  }
  async _createLodRenderer(e36, t27) {
    const s27 = this._context.stage, r25 = { layerUid: this._context.layer.uid, graphicUid: (e37) => this._instanceIndexToGraphicUid.get(e37), notifyGraphicGeometryChanged: (e37) => this._context.notifyGraphicGeometryChanged(this._instanceIndexToGraphicUid.get(e37)), notifyGraphicVisibilityChanged: (e37) => this._context.notifyGraphicVisibilityChanged(this._instanceIndexToGraphicUid.get(e37)) }, i20 = this._fastUpdates, a26 = i20 ? { applyTransform: (e37, t28, s28) => {
      e37.getFeatureAttribute(t28, ge), n4(s28, Q2(i20.materialParameters, ge, s28));
    }, scaleFactor: (e37, t28, s28) => {
      t28.getFeatureAttribute(s28, ge), W(e37, i20.materialParameters, ge);
    } } : null, n33 = new k2({ symbol: e36, optionalFields: this._optionalFields, metadata: r25, shaderTransformation: a26 }, this._context.scheduler);
    return n33.slicePlaneEnabled = this._context.slicePlaneEnabled, this._addDisposeResource(() => {
      s27.removeRenderPlugin(n33), n33.destroy();
    }), await s27.addRenderPlugin(n33, t27), n33;
  }
  _getExternalColorParameters(t27) {
    const s27 = {};
    return this._drivenProperties.color ? s27.externalColor = N : null != (t27 == null ? void 0 : t27.color) ? s27.externalColor = h2.toUnitRGBA(t27.color) : (s27.externalColor = N, s27.colorMixMode = "ignore"), s27;
  }
  destroy() {
    super.destroy(), this._cleanupResources();
  }
  _cleanupResources() {
    this._disposeResourceHandles.forEach((e36) => e36()), this._disposeResourceHandles.length = 0, this._resources = null;
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry)) return null;
    const s27 = f17(t27.geometry);
    if (null == s27) return this.logger.warn(`unsupported geometry type for object symbol: ${t27.geometry.type}`), null;
    const r25 = this.setGraphicElevationContext(t27), i20 = e36.renderingInfo;
    return this._createAs3DShape(t27, s27, i20, r25, t27.uid, e36.layer.uid);
  }
  notifyDestroyGraphicLayer(e36) {
    this._instanceIndexToGraphicUid.delete(e36.instanceIndex);
  }
  graphicLayerToGraphicId() {
    return 0;
  }
  layerOpacityChanged() {
    var _a, _b;
    if (null == this._resources) return;
    const e36 = this._drivenProperties.opacity, t27 = !this._isPrimitive, s27 = this._resources.stageResources.materials, r25 = this._resources.originalMaterialParameters;
    for (let i20 = 0; i20 < s27.length; i20++) {
      const a26 = s27[i20], o27 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, n33 = r25[i20], l31 = this._getCombinedOpacity(o27, { hasIntrinsicColor: t27 }) * n33.opacity, c20 = l31 < 1 || e36 || n33.transparent;
      a26.setParameters({ opacity: l31, transparent: c20 }), this._isPrimitive && a26.setParameters({ cullFace: c20 ? e21.None : e21.Back });
    }
  }
  layerElevationInfoChanged(e36, t27) {
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, g8);
  }
  slicePlaneEnabledChanged() {
    if (null == this._resources) return true;
    this._resources.lodRenderer.slicePlaneEnabled = this._context.slicePlaneEnabled;
    for (const e36 of this._resources.stageResources.materials) e36.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled });
    return true;
  }
  physicalBasedRenderingChanged() {
    if (null == this._resources) return true;
    const { stageResources: e36, isWosr: t27 } = this._resources;
    for (const s27 of e36.materials) this._isPrimitive ? s27.setParameters({ usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: true }) : t27 || s27.setParameters({ usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: false });
    return false !== this._hasLoadedPBRTextures || true !== this._context.physicalBasedRenderingEnabled || (this._hasLoadedPBRTextures = true, false);
  }
  applyRendererDiff(e36, t27) {
    if (null == this._resources) return e30.RecreateSymbol;
    const { stageResources: { materials: s27 }, lodRenderer: r25, resourceBoundingBox: i20, symbolSize: a26, resourceSize: o27, pivotOffset: n33 } = this._resources;
    for (const l31 in e36.diff) {
      if ("visualVariables" !== l31) return e30.RecreateSymbol;
      if (!G(this._fastUpdates, t27, this._fastVisualVariableConvertOptions(i20, a26, o27, n33))) return e30.RecreateSymbol;
      for (const e37 of s27) e37.setParameters(this._fastUpdates.materialParameters);
      r25.notifyShaderTransformationChanged();
    }
    return e30.FastUpdate;
  }
  computeComplexity() {
    if (null == this._resources) return super.computeComplexity();
    const e36 = this._resources.lodResources, t27 = w7(e36.levels), s27 = e36.computeUsedMemory(), r25 = { ...C3(this.symbol, this.symbolLayer), resourceBytes: s27 };
    return new e28({ verticesPerFeature: t27, memory: r25 });
  }
  _hasLodRenderer() {
    return null != this._resources;
  }
  _createAs3DShape(e36, t27, s27, r25, i20, a26) {
    if (!this._hasLodRenderer() || null == this._resources) return null;
    const o27 = this.getFastUpdateAttrValues(e36), n33 = this._context.clippingExtent;
    if (c4(t27, ye, this._context.elevationProvider.spatialReference), null != n33 && !V2(n33, ye)) return null;
    const l31 = ue2(r25), c20 = this._computeGlobalTransform(t27, r25, _e2, be), h15 = this._computeLocalTransform(this._resources, this.symbolLayer, s27, fe2), d16 = this._resources.lodRenderer.instanceData, m17 = d16.addInstance();
    this._instanceIndexToGraphicUid.set(m17, i20), d16.setLocalTransform(m17, h15, false), d16.setGlobalTransform(m17, c20), o27 && d16.setFeatureAttribute(m17, o27), null == this._fastUpdates && this._hasPerInstanceColor() && d16.setColor(m17, A7(s27.color, s27.opacity, 255));
    const p25 = this._context.stage.renderView.olidRenderHelper;
    p25 && d16.setObjectAndLayerIdColor(m17, p25.getObjectAndLayerIdColor({ graphicUid: i20, layerUid: a26 }));
    const u26 = new u21(this, m17, b9, r25, this._context.stage.view.state.highlightOrderMap);
    return l31 && (u26.alignedSampledElevation = be.sampledElevation), u26.needsElevationUpdates = g8(r25.mode), m10(u26, t27, this._context.elevationProvider), u26;
  }
  _computeGlobalTransform(e36, t27, s27, r25) {
    return c10(e36, this._context.elevationProvider, t27, this._context.renderCoordsHelper, r25), ye[0] = e36.x, ye[1] = e36.y, ye[2] = r25.z, m5(e36.spatialReference, ye, s27, this._context.renderCoordsHelper.spatialReference), s27;
  }
  _computeLocalTransform(e36, t27, s27, i20) {
    return o3(i20), this._applyObjectRotation(s27, false, i20), this._applyObjectRotation(t27, true, i20), this._applyObjectScale(e36, s27, i20), this._applyAnchor(e36, t27, i20), i20;
  }
  _applyObjectScale(e36, t27, s27) {
    var _a;
    if ((_a = this._fastUpdates) == null ? void 0 : _a.requiresShaderTransformation) return;
    const r25 = this._drivenProperties.size && t27.size ? t27.size : e36.symbolSize, a26 = D2(r25, e36.symbolSize, e36.resourceSize, this._context.renderCoordsHelper.unitInMeters);
    1 === a26[0] && 1 === a26[1] && 1 === a26[2] || f3(s27, s27, a26);
  }
  prepareSymbolLayerPatch(e36) {
    if ("partial" !== e36.diff.type) return;
    const t27 = e36.diff.diff;
    this._preparePatchTransform(e36, t27), this._preparePatchColor(e36, t27);
  }
  updateGeometry(e36, t27) {
    if (null == this._resources) return true;
    const s27 = t27 && f17(t27);
    if (null == s27) return false;
    const r25 = this.getGeometryElevationMode(t27);
    return e36.elevationContext.mode === r25 && (this._computeGlobalTransform(s27, e36.elevationContext, _e2, be), ue2(e36.elevationContext) && (e36.alignedSampledElevation = be.sampledElevation), this._resources.lodRenderer.instanceData.setGlobalTransform(e36.instanceIndex, _e2, true), m10(e36, s27, this._context.elevationProvider), true);
  }
  _preparePatchTransform(e36, t27) {
    if (!(t27.heading || t27.tilt || t27.roll || t27.width || t27.height || t27.depth || t27.anchor || t27.anchorPosition)) return;
    if (null == this._resources) return;
    const s27 = (e37, t28, s28) => (null != e37 && "complete" === e37.type ? e37.newValue : t28) ?? s28, r25 = s27(t27.heading, this.symbolLayer.heading, 0), i20 = s27(t27.tilt, this.symbolLayer.tilt, 0), a26 = s27(t27.roll, this.symbolLayer.roll, 0), o27 = s27(t27.width, this.symbolLayer.width, void 0), n33 = s27(t27.height, this.symbolLayer.height, void 0), l31 = s27(t27.depth, this.symbolLayer.depth, void 0), c20 = s27(t27.anchor, this.symbolLayer.anchor, void 0), h15 = s27(t27.anchorPosition, this.symbolLayer.anchorPosition, void 0);
    delete t27.heading, delete t27.tilt, delete t27.roll, delete t27.width, delete t27.height, delete t27.depth, delete t27.anchor, delete t27.anchorPosition;
    const d16 = { heading: r25, tilt: i20, roll: a26, anchor: c20, anchorPosition: h15 }, m17 = this._resources;
    this.loadStatus === l18.LOADED && e36.symbolLayerStatePatches.push(() => {
      m17.symbolSize = u5(t17(m17.resourceSize, { width: o27, height: n33, depth: l31, isPrimitive: this.symbolLayer.isPrimitive }));
    }), e36.graphics3DGraphicPatches.push(({ instanceIndex: e37 }, t28) => {
      const s28 = this._computeLocalTransform(m17, d16, t28, fe2);
      m17.lodRenderer.instanceData.setLocalTransform(e37, s28, true);
    });
  }
  _preparePatchColor(t27, s27) {
    if (!s27.material || "partial" !== s27.material.type) return;
    const r25 = s27.material.diff;
    if (!r25.color || "complete" !== r25.color.type || null == r25.color.newValue || null == r25.color.oldValue) return;
    const i20 = r25.color.newValue, a26 = null != i20 ? h2.toUnitRGBA(i20) : N;
    delete r25.color;
    const o27 = this._resources;
    null != o27 && t27.graphics3DGraphicPatches.push(({ instanceIndex: e36 }) => {
      let t28;
      this._hasPerInstanceColor() ? (o27.lodRenderer.instanceData.setColor(e36, a26), t28 = this._setMaterialTransparencyParameters({}, i20)) : t28 = this._setMaterialTransparencyParameters({ externalColor: a26 }, i20);
      for (const s28 of o27.stageResources.materials) s28.setParameters(t28);
    });
  }
  _applyObjectRotation(e36, t27, s27) {
    var _a;
    if (!((_a = this._fastUpdates) == null ? void 0 : _a.requiresShaderTransformation) || !t27) return k3(e36.heading, e36.tilt, e36.roll, s27);
  }
  _applyAnchor(e36, t27, s27) {
    var _a;
    if ((_a = this._fastUpdates) == null ? void 0 : _a.requiresShaderTransformation) return;
    const r25 = pe2(e36.resourceBoundingBox, e36.pivotOffset, t27);
    r25 && i3(s27, s27, r25);
  }
  _hasPerInstanceColor() {
    return this._drivenProperties.color || this._drivenProperties.opacity;
  }
  _fastVisualVariableConvertOptions(e36, t27, s27, r25) {
    const i20 = null != e36 ? u5(b2(e36)) : s7, a26 = null != e36 ? pe2(e36, r25, this.symbolLayer) : _2, o27 = this._context.renderCoordsHelper.unitInMeters, n33 = D2(null != t27 ? t27 : void 0, t27, s27, o27), l31 = r4(this.symbolLayer.tilt || 0, this.symbolLayer.roll || 0, this.symbolLayer.heading || 0);
    return new $2({ size: true, color: true, rotation: true, opacity: false }, i20, t27 ?? s7, o27, a26, n33, l31);
  }
};
function pe2(e36, t27, s27) {
  const r25 = n3();
  switch (s27.anchor) {
    case "center":
      s10(r25, p(e36)), y2(r25, r25);
      break;
    case "top": {
      const t28 = p(e36);
      o6(r25, -t28[0], -t28[1], -e36[5]);
      break;
    }
    case "bottom": {
      const t28 = p(e36);
      o6(r25, -t28[0], -t28[1], -e36[2]);
      break;
    }
    case "relative": {
      const t28 = p(e36), i20 = b2(e36), a26 = s27.anchorPosition, o27 = a26 ? r4(a26.x, a26.y, a26.z) : _2;
      e10(r25, i20, o27), u9(r25, r25, t28), y2(r25, r25);
      break;
    }
    default:
      null != t27 ? y2(r25, t27) : s10(r25, _2);
  }
  return r25;
}
function ue2(e36) {
  return "absolute-height" !== e36.mode;
}
var ye = n3();
var fe2 = e15();
var _e2 = e15();
var ge = n5();
var be = new R4();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Path.js
var n23 = class {
  constructor(t27, i20, s27, o27) {
    this.vertices = t27, this.positionsES = i20, this.offset = o27;
    const n33 = t27.length, r25 = Math.floor(n33 / 2), g14 = this.offset + 3 * r25, v7 = s27[g14], f28 = s27[g14 + 1], c20 = s27[g14 + 2];
    this.origin = r4(v7, f28, c20), this.positions = n7(3 * n33);
    const a26 = this.offset + 3 * n33;
    for (let e36 = this.offset; e36 < a26; e36 += 3) this.positions[e36] = s27[e36] - v7, this.positions[e36 + 1] = s27[e36 + 1] - f28, this.positions[e36 + 2] = s27[e36 + 2] - c20;
    this.updatePathVertexInformation();
  }
  get usedMemory() {
    return i2(this.positions);
  }
  updatePathVertexInformation() {
    const t27 = this.vertices.length, e36 = this.vertices[0];
    let h15 = this.offset;
    const n33 = this.positions;
    e36.vRight[0] = n33[h15 + 3] - n33[h15], e36.vRight[1] = n33[h15 + 4] - n33[h15 + 1], e36.vRight[2] = n33[h15 + 5] - n33[h15 + 2], h15 += 3;
    let r25 = r7(e36.vRight);
    e36.vMinSiblingLength = r25, A3(e36.vRight, e36.vRight);
    let g14 = e36;
    for (let v7 = 1; v7 < t27; ++v7) {
      const e37 = this.vertices[v7];
      if (e37.vLeft = g14.vRight, v7 < t27 - 1) {
        e37.vRight[0] = n33[h15 + 3] - n33[h15], e37.vRight[1] = n33[h15 + 4] - n33[h15 + 1], e37.vRight[2] = n33[h15 + 5] - n33[h15 + 2];
        const t28 = r7(e37.vRight);
        e37.vMinSiblingLength = Math.min(r25, t28), r25 = t28, A3(e37.vRight, e37.vRight);
      } else s10(e37.vRight, e37.vLeft), e37.vMinSiblingLength = r25;
      g14 = e37, h15 += 3;
    }
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathBuilder.js
var o22 = class {
  constructor(t27, r25, o27, h15, p25, n33 = {}) {
    this.path = t27, this.profile = r25, this.extruder = o27, this.startCap = h15, this.endCap = p25, this.options = n33, this._extrusionVertexCount = 0;
    const l31 = this.path.vertices.length - 2;
    this.numExtrusionProfiles = o27.numProfilesPerJoin() * l31 + 2, this.numVerticesTotal = r25.vertices.length * this.numExtrusionProfiles, this.startCap.vertexBufferStart = this.numVerticesTotal;
    const a26 = this.startCap.numVertices;
    this.numVerticesTotal += a26, this.endCap.vertexBufferStart = this.numVerticesTotal;
    const u26 = this.endCap.numVertices;
    this.numVerticesTotal += u26, this.pathVertexData = f5(1 * this.numVerticesTotal), this.profileRightAxes = n7(4 * this.numVerticesTotal), this.profileUpAxes = n7(4 * this.numVerticesTotal), this.profileVertexAndNormals = n7(4 * this.numVerticesTotal), this.positions = e12(t27.positions, t27.offset, 3 * t27.vertices.length), this._rebuildGeometry(), this.buildTopology();
  }
  get usedMemory() {
    return i2(this.pathVertexData, this.profileRightAxes, this.profileUpAxes, this.profileVertexAndNormals) + this.path.usedMemory + this.profile.usedMemory;
  }
  emitVertex(t27, e36, i20, s27, r25) {
    const o27 = 4 * this._extrusionVertexCount;
    if (this.profileRightAxes[o27] = e36.right[0], this.profileRightAxes[o27 + 1] = e36.right[1], this.profileRightAxes[o27 + 2] = e36.right[2], this.profileUpAxes[o27] = e36.up[0], this.profileUpAxes[o27 + 1] = e36.up[1], this.profileUpAxes[o27 + 2] = e36.up[2], this.profileVertexAndNormals[o27] = i20[0], this.profileVertexAndNormals[o27 + 1] = i20[1], this.profileVertexAndNormals[o27 + 2] = s27[0], this.profileVertexAndNormals[o27 + 3] = s27[1], this.pathVertexData[this._extrusionVertexCount] = t27, r25) {
      const e37 = this.path.vertices[t27], i21 = e37.maxStretchDistance;
      this.profileRightAxes[o27 + 3] = e37.rotationRight[0] * i21, this.profileUpAxes[o27 + 3] = e37.rotationRight[1] * i21;
    } else this.profileRightAxes[o27 + 3] = 0, this.profileUpAxes[o27 + 3] = 0;
    ++this._extrusionVertexCount;
  }
  emitCapVertex(t27, e36, i20, s27, r25, o27) {
    const h15 = 4 * this._extrusionVertexCount;
    this.profileRightAxes[h15] = e36.right[0], this.profileRightAxes[h15 + 1] = e36.right[1], this.profileRightAxes[h15 + 2] = e36.right[2], this.profileRightAxes[h15 + 3] = r25, this.profileUpAxes[h15] = e36.up[0], this.profileUpAxes[h15 + 1] = e36.up[1], this.profileUpAxes[h15 + 2] = e36.up[2], this.profileUpAxes[h15 + 3] = o27, this.profileVertexAndNormals[h15] = i20[0], this.profileVertexAndNormals[h15 + 1] = i20[1], this.profileVertexAndNormals[h15 + 2] = s27[0], this.profileVertexAndNormals[h15 + 3] = s27[1], this.pathVertexData[this._extrusionVertexCount] = t27, ++this._extrusionVertexCount;
  }
  _rebuildGeometry() {
    this._extrusionVertexCount = 0;
    const { positions: t27, offset: e36, vertices: s27 } = this.path;
    this.positions = e12(t27, e36, 3 * s27.length);
    let r25 = 0;
    const o27 = (t28, e37, i20, s28, o28) => this.emitCapVertex(r25, t28, e37, i20, s28, o28), h15 = (t28, e37, i20, s28) => this.emitVertex(r25, t28, e37, i20, s28);
    for (this.startCap.rebuildConnectingProfileGeometry(s27[r25], this.profile, o27), r25 = 1; r25 < s27.length - 1; ++r25) this.extruder.extrude(s27[r25], this.profile, h15);
    this.endCap.rebuildConnectingProfileGeometry(s27[r25], this.profile, o27), r25 = 0, this.startCap.rebuildCapGeometry(s27[r25], o27), r25 = s27.length - 1, this.endCap.rebuildCapGeometry(s27[r25], o27);
  }
  buildTopology() {
    const t27 = this.profile.vertices.length, e36 = this.profile.numSegments, i20 = this.numExtrusionProfiles - 1;
    let s27 = 3 * (2 * (e36 * i20));
    this.startCap.indexBufferStart = s27, this.startCap.firstProfileVertexIndex = 0, s27 += this.startCap.numIndices, this.endCap.indexBufferStart = s27, this.endCap.firstProfileVertexIndex = t27 * (this.numExtrusionProfiles - 1);
    const o27 = new Array(), h15 = new Array(), p25 = new Array(), n33 = (t28, e37, i21) => {
      o27.push(t28), o27.push(e37), o27.push(i21), h15.push(t28), h15.push(e37), h15.push(i21), p25.push(this.pathVertexData[t28]), p25.push(this.pathVertexData[e37]), p25.push(this.pathVertexData[i21]);
    };
    for (let r25 = 0; r25 < e36; ++r25) {
      const e37 = this.profile.indices[2 * r25], s28 = this.profile.indices[2 * r25 + 1];
      for (let r26 = 0; r26 < i20; ++r26) {
        const i21 = r26 * t27 + e37, o28 = (r26 + 1) * t27 + s28, h16 = r26 * t27 + s28;
        n33(i21, (r26 + 1) * t27 + e37, o28), n33(i21, o28, h16);
      }
    }
    this.startCap.buildTopology(this.path.vertices[0], n33), this.endCap.buildTopology(this.path.vertices[this.path.vertices.length - 1], n33), this.vertexIndices = t7(o27), this.normalIndices = t7(h15), this.pathVertexIndices = t7(p25);
  }
  onPathChanged() {
    this._rebuildGeometry();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathCapBuilder.js
var o23 = class {
  rebuildConnectingProfileGeometry(e36, t27, s27) {
    for (let i20 = 0; i20 < t27.vertices.length; ++i20) s27(e36.frame, t27.vertices[i20], t27.normals[i20], 0, 0);
  }
};
var l24 = class extends o23 {
  constructor() {
    super(), this.numVertices = 0, this.numIndices = 0;
  }
  rebuildCapGeometry() {
  }
  buildTopology() {
  }
};
var f22 = class extends o23 {
  constructor(e36, t27 = 0, s27 = false) {
    super(), this.profile = e36, this.profilePlaneOffset = t27, this.flip = s27;
  }
  get numVertices() {
    return this.profile.vertices.length;
  }
  get numIndices() {
    return 3 * this.profile.numSegments;
  }
  rebuildConnectingProfileGeometry(e36, t27, s27) {
    const i20 = this.profilePlaneOffset;
    for (let r25 = 0; r25 < t27.vertices.length; ++r25) s27(e36.frame, t27.vertices[r25], t27.normals[r25], i20, 0);
  }
  rebuildCapGeometry(t27, s27) {
    const i20 = this.profile, r25 = this.flip ? 1 : -1, n33 = this.profilePlaneOffset, o27 = m13;
    o5(o27, 0, 0);
    for (let e36 = 0; e36 < i20.vertices.length; ++e36) s27(t27.frame, i20.vertices[e36], o27, n33, r25);
  }
  buildTopology(e36, t27) {
    const s27 = this.profile, i20 = this.vertexBufferStart + s27.indices[0];
    for (let r25 = 1; r25 < s27.numSegments; ++r25) {
      const e37 = s27.indices[2 * r25], n33 = s27.indices[2 * r25 + 1], o27 = this.vertexBufferStart + e37, l31 = this.vertexBufferStart + n33;
      this.flip ? t27(l31, o27, i20) : t27(i20, o27, l31);
    }
  }
};
var h11 = class extends o23 {
  constructor(e36) {
    super(), this.flip = false, this.sign = 0, this.breakNormals = false, this.numSegments = 3, this.profile = e36.profile, this.flip = e36.flip, this.sign = this.flip ? 1 : -1, this.breakNormals = e36.breakNormals, this.numSegments = e36.subdivisions;
  }
  get numVertices() {
    let e36 = this.profile.vertices.length * (this.numSegments - 1) + this.profile.poles.length;
    return this.breakNormals && (e36 += this.profile.vertices.length), e36;
  }
  get numIndices() {
    let e36 = 0;
    const t27 = this.profile;
    e36 += 2 * t27.numSegments * (this.numSegments - 1);
    for (let s27 = 0; s27 < t27.numSegments; ++s27) {
      const i20 = t27.indices[2 * s27], r25 = t27.indices[2 * s27 + 1];
      t27.poleIndices[i20] === t27.poleIndices[r25] ? e36 += 1 : e36 += 2;
    }
    return 3 * e36;
  }
  rebuildCapGeometry(n33, o27) {
    const l31 = this.profile, f28 = n33.frame, h15 = 0.5 * this.sign, p25 = c13, a26 = m13;
    o5(a26, 0, 0);
    for (const e36 of l31.poles) e36.normal ? o27(f28, e36.position, e36.normal, h15, 0) : o27(f28, e36.position, a26, h15, this.sign);
    if (this.breakNormals) for (let e36 = 0; e36 < l31.vertices.length; ++e36) o27(f28, l31.vertices[e36], l31.normals[e36], 0, 0);
    for (let e36 = 0; e36 < this.numSegments - 1; ++e36) {
      const n34 = (1 - (e36 + 1) / this.numSegments) * Math.PI * 0.5, c20 = Math.sin(n34), m17 = Math.cos(n34);
      for (let e37 = 0; e37 < l31.vertices.length; ++e37) {
        const n35 = l31.poles[l31.poleIndices[e37]];
        e9(p25, l31.vertices[e37], n35.position), l4(p25, p25, c20), n35.normal ? (u8(p25, p25, n35.position), o27(f28, p25, n35.normal, h15 * m17, 0)) : (v2(a26, p25), l4(a26, a26, c20), u8(p25, p25, n35.position), o27(f28, p25, a26, h15 * m17, this.sign * m17));
      }
    }
  }
  buildTopology(e36, t27) {
    const s27 = this.profile, i20 = this.breakNormals ? this.vertexBufferStart + s27.poles.length : this.firstProfileVertexIndex, r25 = this.breakNormals ? this.vertexBufferStart + s27.poles.length + s27.vertices.length : this.vertexBufferStart + s27.poles.length;
    for (let n33 = 0; n33 < s27.numSegments; ++n33) {
      const e37 = s27.indices[2 * n33], o27 = s27.indices[2 * n33 + 1], l31 = this.vertexBufferStart + s27.poleIndices[e37], f28 = this.vertexBufferStart + s27.poleIndices[o27];
      let h15 = i20 + e37, c20 = i20 + o27;
      for (let i21 = 0; i21 < this.numSegments - 1; ++i21) {
        const n34 = r25 + i21 * s27.vertices.length + e37, l32 = r25 + i21 * s27.vertices.length + o27;
        this.flip ? (t27(n34, c20, h15), t27(c20, n34, l32)) : (t27(h15, c20, n34), t27(l32, n34, c20)), h15 = n34, c20 = l32;
      }
      this.flip ? (t27(l31, c20, h15), l31 !== f28 && t27(l31, f28, c20)) : (t27(h15, c20, l31), l31 !== f28 && t27(c20, f28, l31));
    }
  }
};
var c13 = n6();
var m13 = n6();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathExtruder.js
var c14 = class {
  numProfilesPerJoin() {
    return 1;
  }
  extrude(t27, e36, r25) {
    for (let s27 = 0; s27 < e36.vertices.length; ++s27) r25(t27.frame, e36.vertices[s27], e36.normals[s27], false);
  }
};
var a22 = class {
  constructor(t27, e36) {
    this.cutoffAngle = t27, this.numBendSubdivisions = e36;
  }
  numProfilesPerJoin() {
    return this.numBendSubdivisions + 1;
  }
  extrude(e36, s27, i20) {
    const o27 = h12, { rotationAngle: n33, rotationRight: c20, frame: a26 } = e36;
    if (Math.abs(n33) >= this.cutoffAngle) {
      const l31 = e36.rotationFrameUp;
      for (let h15 = 0; h15 < this.numBendSubdivisions + 1; ++h15) {
        p2(u23, 0.5 * -n33 + h15 * n33 / this.numBendSubdivisions, l31), m14(o27, a26, u23);
        for (let t27 = 0; t27 < s27.vertices.length; ++t27) {
          if (j3(s27.vertices[t27], c20) * n33 >= 0) i20(o27, s27.vertices[t27], s27.normals[t27], false);
          else {
            i20(a26, e36.applyMiterStretch(f23, s27.vertices[t27]), s27.normals[t27], true);
          }
        }
      }
    } else for (let t27 = 0; t27 < this.numBendSubdivisions + 1; ++t27) for (let o28 = 0; o28 < s27.vertices.length; ++o28) {
      const t28 = j3(s27.vertices[o28], c20) * n33 >= 0;
      i20(a26, e36.applyMiterStretch(f23, s27.vertices[o28]), s27.normals[o28], !t28);
    }
  }
};
var l25 = class {
  constructor() {
    this.up = n3(), this.right = n3();
  }
};
function m14(t27, e36, r25) {
  E2(t27.up, e36.up, r25), E2(t27.right, e36.right, r25);
}
var f23 = n6();
var u23 = e15();
var h12 = new l25();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathGeometry.js
var e32 = class extends f13 {
  constructor(r25, e36, o27, n33, s27, i20) {
    super(r25, e36, null, e23.Mesh, i20), this.path = o27, this.geometrySR = n33, this.stencilWidth = s27;
  }
};
var o24;
function n24(t27) {
  return "path" in t27;
}
!function(t27) {
  t27[t27.World = 0] = "World", t27[t27.Path = 1] = "Path";
}(o24 || (o24 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathGeometryData.js
var d10 = class {
  constructor(t27) {
    this.builder = t27;
  }
  onPathChanged(t27) {
    this.builder.onPathChanged();
  }
};
var f24 = class extends d10 {
  constructor(t27) {
    super(t27), this.vertexAttributeColor = r5(255, 255, 255, 255), this.size = new Array(), this.vertexAttributePosition = n7(3 * this.builder.numVerticesTotal), this.vertexAttributeNormal = new Int16Array(2 * this.builder.numVerticesTotal);
  }
  bakeVertexColors(t27) {
    this.vertexAttributeColor[0] = 255 * t27[0], this.vertexAttributeColor[1] = 255 * t27[1], this.vertexAttributeColor[2] = 255 * t27[2], this.vertexAttributeColor[3] = 255 * (t27.length > 3 ? t27[3] : 1);
  }
  bake(a26) {
    this.size = a26;
    const { numVerticesTotal: l31, pathVertexData: c20, path: u26, positions: b19, profileRightAxes: v7, profileUpAxes: m17, profileVertexAndNormals: x9 } = this.builder;
    for (let A13 = 0; A13 < l31; ++A13) {
      let l32 = c20[A13];
      const d16 = 0 === l32 || l32 === u26.vertices.length - 1;
      l32 *= 3;
      const f28 = V7;
      let g14 = 0, D6 = 0;
      const N10 = 4 * A13, j13 = o6(R7, v7[N10], v7[N10 + 1], v7[N10 + 2]), E13 = o6(w9, m17[N10], m17[N10 + 1], m17[N10 + 2]), y11 = o5(P6, x9[N10] * a26[0], x9[N10 + 1] * a26[1]);
      if (d16) _3(f28, E13, j13), g14 = v7[N10 + 3] * a26[0], D6 = m17[N10 + 3];
      else {
        const a27 = I9, h15 = C7;
        o5(a27, v7[N10 + 3], m17[N10 + 3]);
        const l33 = q3(a27);
        v2(a27, a27);
        const c21 = j3(y11, a27);
        if (Math.abs(c21) > l33) {
          o5(h15, -a27[1], a27[0]);
          const e36 = j3(y11, h15);
          l4(a27, a27, l33 * Math.sign(c21)), l4(h15, h15, e36), u8(y11, a27, h15);
        }
        o6(f28, 0, 0, 0);
      }
      const T6 = o6(O6, j13[0] * y11[0] + E13[0] * y11[1], j13[1] * y11[0] + E13[1] * y11[1], j13[2] * y11[0] + E13[2] * y11[1]), L9 = 3 * A13;
      this.vertexAttributePosition[L9] = b19[l32] + T6[0] + f28[0] * g14, this.vertexAttributePosition[L9 + 1] = b19[l32 + 1] + T6[1] + f28[1] * g14, this.vertexAttributePosition[L9 + 2] = b19[l32 + 2] + T6[2] + f28[2] * g14;
      const M8 = o5(P6, x9[N10 + 2], x9[N10 + 3]);
      s13(this.vertexAttributeNormal, A13, j13[0] * M8[0] + E13[0] * M8[1] + f28[0] * D6, j13[1] * M8[0] + E13[1] * M8[1] + f28[1] * D6, j13[2] * M8[0] + E13[2] * M8[1] + f28[2] * D6);
    }
  }
  createGeometryData() {
    const t27 = this.builder.vertexIndices.length, { normalIndices: e36, vertexIndices: r25 } = this.builder;
    return [[e11.POSITION, new t9(this.vertexAttributePosition, r25, 3, true)], [e11.NORMALCOMPRESSED, new t9(this.vertexAttributeNormal, e36, 2, true)], [e11.COLOR, new t9(this.vertexAttributeColor, w3(t27), 4)]];
  }
  onPathChanged(t27) {
    super.onPathChanged(t27), this.bake(this.size);
  }
  intersect(t27, e36, r25, i20) {
    const s27 = this.builder.vertexIndices, o27 = new s14(this.vertexAttributePosition, 3), a26 = s27.length / 3;
    x3(t27, e36, 0, a26, s27, o27, void 0, r25, (t28, e37, r26) => i20(t28, r26, e37, false));
  }
};
var g12 = class extends d10 {
  constructor(t27, e36, r25, i20) {
    super(t27), this.sizeAttributeValue = e36, this.colorAttributeValue = r25, this.opacityAttributeValue = i20, this.vvData = null, this.baked = new f24(t27), this.vvData = n7(4 * this.builder.path.vertices.length);
    for (let s27 = 0; s27 < this.builder.path.vertices.length; ++s27) {
      this.vvData[4 * s27] = e36, this.vvData[4 * s27 + 1] = r25, this.vvData[4 * s27 + 2] = i20;
      const t28 = 0 === s27 || s27 === this.builder.path.vertices.length - 1;
      this.vvData[4 * s27 + 3] = t28 ? 1 : 0;
    }
  }
  createGeometryData() {
    const { positions: t27, profileRightAxes: e36, profileUpAxes: r25, profileVertexAndNormals: i20, pathVertexIndices: s27, vertexIndices: o27 } = this.builder;
    return [[e11.POSITION, new t9(t27, s27, 3, true)], [e11.PROFILERIGHT, new t9(e36, o27, 4, true)], [e11.PROFILEUP, new t9(r25, o27, 4, true)], [e11.PROFILEVERTEXANDNORMAL, new t9(i20, o27, 4, true)], [e11.FEATUREVALUE, new t9(this.vvData, s27, 4, true)]];
  }
  onPathChanged(t27) {
    super.onPathChanged(t27);
    const e36 = t27.getMutableAttribute(e11.POSITION);
    e36 && (e36.data = this.builder.positions);
  }
};
var P6 = n6();
var I9 = n6();
var C7 = n6();
var O6 = n3();
var V7 = n3();
var R7 = n3();
var w9 = n3();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/pathGeometryUtils.js
function l26(l31, v7) {
  let h15 = null;
  const u26 = l31.vertices.length, j13 = 0.99619469809, R13 = n3(), y11 = n3(), x9 = n3(), L9 = n3(), b19 = n3(), k12 = n3(), q9 = M2();
  let G6 = l31.vertices[0];
  s10(y11, v7), o6(R13, 0, 1, 0), Mt(G6.vRight, y11, R13, R13, x9, y11, j13), s10(G6.frame.up, y11), s10(G6.frame.right, x9);
  const M8 = l31.positions;
  let U7 = l31.offset;
  h15 = G6;
  for (let m17 = 1; m17 < u26; ++m17) {
    G6 = l31.vertices[m17], u9(b19, G6.vLeft, G6.vRight);
    let a26 = r7(b19);
    a26 > 0 ? (a26 = 1 / Math.sqrt(a26), b19[0] = b19[0] * a26, b19[1] = b19[1] * a26, b19[2] = b19[2] * a26) : (b19[0] = G6.vRight[0], b19[1] = G6.vRight[1], b19[2] = G6.vRight[2]), k12[0] = M8[U7] + h15.frame.up[0], k12[1] = M8[U7 + 1] + h15.frame.up[1], k12[2] = M8[U7 + 2] + h15.frame.up[2], U7 += 3;
    const v8 = o6(n25, M8[U7], M8[U7 + 1], M8[U7 + 2]);
    l7(v8, b19, q9);
    x2(q9, k(k12, G6.vLeft), L9) ? (L9[0] -= M8[U7], L9[1] -= M8[U7 + 1], L9[2] -= M8[U7 + 2], A3(y11, L9), _3(x9, b19, y11), A3(x9, x9)) : Mt(b19, h15.frame.up, h15.frame.right, R13, x9, y11, j13), s10(G6.frame.up, y11), s10(G6.frame.right, x9), h15 = G6;
  }
}
var n25 = n3();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathProfile.js
var r20 = class {
  constructor() {
    this.vertices = new Array(), this.normals = new Array(), this.indices = new Array(), this.poles = new Array(), this.poleIndices = new Array();
  }
  addVertex(t27, e36) {
    return this.vertices.push(r8(t27)), this.normals.push(r8(e36)), this.vertices.length - 1;
  }
  addPole(t27, e36 = null) {
    return this.poles.push({ position: r8(t27), normal: e36 ? r8(e36) : null }), this.poles.length - 1;
  }
  addSegment(t27, e36 = null) {
    this.indices.push(t27.v0), this.indices.push(t27.v1), e36 && (this.poleIndices.push(e36.v0), this.poleIndices.push(e36.v1));
  }
  get numSegments() {
    return this.indices.length / 2;
  }
  translate(t27, e36) {
    for (const s27 of this.vertices) s27[0] += t27, s27[1] += e36;
    for (const s27 of this.poles) s27.position[0] += t27, s27.position[1] += e36;
  }
  get usedMemory() {
    return this.vertices.length * i2(this.vertices[0]) * 2 + i2(this.indices);
  }
};
var n26 = { top: [0, -0.5], bottom: [0, 0.5] };
function i16(t27) {
  const s27 = 0.5, i20 = c11, d16 = new r20(), a26 = { v0: 0, v1: 0 };
  d16.addPole(t6(0, 0));
  for (let o27 = 0; o27 < i20; ++o27) {
    const t28 = 2 * o27 * Math.PI / i20, r25 = Math.cos(t28), n33 = Math.sin(t28), a27 = t6(r25 * s27, n33 * s27), c21 = t6(r25, n33);
    d16.addVertex(a27, c21);
  }
  for (let e36 = 0; e36 < i20 - 1; ++e36) {
    const t28 = { v0: e36, v1: e36 + 1 };
    d16.addSegment(t28, a26);
  }
  const c20 = { v0: i20 - 1, v1: 0 };
  if (d16.addSegment(c20, a26), "center" !== t27) {
    const e36 = n26[t27];
    d16.translate(e36[0], e36[1]);
  }
  return d16;
}
var d11 = { center: i16("center"), top: i16("top"), bottom: i16("bottom") };
var a23 = { center: c15("center"), top: c15("top"), bottom: c15("bottom") };
function c15(t27) {
  const s27 = 1, o27 = 1, i20 = new r20(), d16 = t6(-0.5, -0.5), a26 = t6(0.5 * s27, -0.5), c20 = t6(0.5 * s27, 0.5 * o27), h15 = t6(-0.5, 0.5 * o27), l31 = t6(0, -1), v7 = t6(1, 0), m17 = t6(0, 1), p25 = t6(-1, 0);
  if (i20.addPole(t6(0, 0.5 * o27), m17), i20.addPole(t6(0, 0.5 * o27)), i20.addPole(t6(0, -0.5)), i20.addPole(t6(0, -0.5), l31), i20.addVertex(d16, l31), i20.addVertex(a26, l31), i20.addSegment({ v0: 0, v1: 1 }, { v0: 3, v1: 3 }), i20.addVertex(a26, v7), i20.addVertex(c20, v7), i20.addSegment({ v0: 2, v1: 3 }, { v0: 2, v1: 1 }), i20.addVertex(c20, m17), i20.addVertex(h15, m17), i20.addSegment({ v0: 4, v1: 5 }, { v0: 0, v1: 0 }), i20.addVertex(h15, p25), i20.addVertex(d16, p25), i20.addSegment({ v0: 6, v1: 7 }, { v0: 1, v1: 2 }), "center" !== t27) {
    const e36 = n26[t27];
    i20.translate(e36[0], e36[1]);
  }
  return i20;
}

// node_modules/@arcgis/core/core/libs/gl-matrix-2/math/mat2.js
function n27(t27, n33) {
  return t27[0] = n33[0], t27[1] = n33[1], t27[2] = n33[2], t27[3] = n33[3], t27;
}
function r21(t27) {
  return t27[0] = 1, t27[1] = 0, t27[2] = 0, t27[3] = 1, t27;
}
function a24(t27, n33, r25, a26, u26) {
  return t27[0] = n33, t27[1] = r25, t27[2] = a26, t27[3] = u26, t27;
}
function u24(t27, n33) {
  if (t27 === n33) {
    const r25 = n33[1];
    t27[1] = n33[2], t27[2] = r25;
  } else t27[0] = n33[0], t27[1] = n33[2], t27[2] = n33[1], t27[3] = n33[3];
  return t27;
}
function o25(t27, n33) {
  const r25 = n33[0], a26 = n33[1], u26 = n33[2], o27 = n33[3];
  let e36 = r25 * o27 - u26 * a26;
  return e36 ? (e36 = 1 / e36, t27[0] = o27 * e36, t27[1] = -a26 * e36, t27[2] = -u26 * e36, t27[3] = r25 * e36, t27) : null;
}
function e33(t27, n33) {
  const r25 = n33[0];
  return t27[0] = n33[3], t27[1] = -n33[1], t27[2] = -n33[2], t27[3] = r25, t27;
}
function c16(t27) {
  return t27[0] * t27[3] - t27[2] * t27[1];
}
function s24(t27, n33, r25) {
  const a26 = n33[0], u26 = n33[1], o27 = n33[2], e36 = n33[3], c20 = r25[0], s27 = r25[1], i20 = r25[2], f28 = r25[3];
  return t27[0] = a26 * c20 + o27 * s27, t27[1] = u26 * c20 + e36 * s27, t27[2] = a26 * i20 + o27 * f28, t27[3] = u26 * i20 + e36 * f28, t27;
}
function i17(t27, n33, r25) {
  const a26 = n33[0], u26 = n33[1], o27 = n33[2], e36 = n33[3], c20 = Math.sin(r25), s27 = Math.cos(r25);
  return t27[0] = a26 * s27 + o27 * c20, t27[1] = u26 * s27 + e36 * c20, t27[2] = a26 * -c20 + o27 * s27, t27[3] = u26 * -c20 + e36 * s27, t27;
}
function f25(t27, n33, r25) {
  const a26 = n33[0], u26 = n33[1], o27 = n33[2], e36 = n33[3], c20 = r25[0], s27 = r25[1];
  return t27[0] = a26 * c20, t27[1] = u26 * c20, t27[2] = o27 * s27, t27[3] = e36 * s27, t27;
}
function l27(t27, n33) {
  const r25 = Math.sin(n33), a26 = Math.cos(n33);
  return t27[0] = a26, t27[1] = r25, t27[2] = -r25, t27[3] = a26, t27;
}
function M4(t27, n33) {
  return t27[0] = n33[0], t27[1] = 0, t27[2] = 0, t27[3] = n33[1], t27;
}
function h13(t27) {
  return "mat2(" + t27[0] + ", " + t27[1] + ", " + t27[2] + ", " + t27[3] + ")";
}
function b15(t27) {
  return Math.sqrt(t27[0] ** 2 + t27[1] ** 2 + t27[2] ** 2 + t27[3] ** 2);
}
function m15(t27, n33, r25, a26) {
  return t27[2] = a26[2] / a26[0], r25[0] = a26[0], r25[1] = a26[1], r25[3] = a26[3] - t27[2] * r25[1], [t27, n33, r25];
}
function d12(t27, n33, r25) {
  return t27[0] = n33[0] + r25[0], t27[1] = n33[1] + r25[1], t27[2] = n33[2] + r25[2], t27[3] = n33[3] + r25[3], t27;
}
function p24(t27, n33, r25) {
  return t27[0] = n33[0] - r25[0], t27[1] = n33[1] - r25[1], t27[2] = n33[2] - r25[2], t27[3] = n33[3] - r25[3], t27;
}
function y5(t27, n33) {
  return t27[0] === n33[0] && t27[1] === n33[1] && t27[2] === n33[2] && t27[3] === n33[3];
}
function x6(n33, r25) {
  const a26 = n33[0], u26 = n33[1], o27 = n33[2], e36 = n33[3], c20 = r25[0], s27 = r25[1], i20 = r25[2], f28 = r25[3], l31 = e6();
  return Math.abs(a26 - c20) <= l31 * Math.max(1, Math.abs(a26), Math.abs(c20)) && Math.abs(u26 - s27) <= l31 * Math.max(1, Math.abs(u26), Math.abs(s27)) && Math.abs(o27 - i20) <= l31 * Math.max(1, Math.abs(o27), Math.abs(i20)) && Math.abs(e36 - f28) <= l31 * Math.max(1, Math.abs(e36), Math.abs(f28));
}
function S6(t27, n33, r25) {
  return t27[0] = n33[0] * r25, t27[1] = n33[1] * r25, t27[2] = n33[2] * r25, t27[3] = n33[3] * r25, t27;
}
function j9(t27, n33, r25, a26) {
  return t27[0] = n33[0] + r25[0] * a26, t27[1] = n33[1] + r25[1] * a26, t27[2] = n33[2] + r25[2] * a26, t27[3] = n33[3] + r25[3] * a26, t27;
}
var _9 = s24;
var g13 = p24;
var q6 = Object.freeze(Object.defineProperty({ __proto__: null, LDU: m15, add: d12, adjoint: e33, copy: n27, determinant: c16, equals: x6, exactEquals: y5, frob: b15, fromRotation: l27, fromScaling: M4, identity: r21, invert: o25, mul: _9, multiply: s24, multiplyScalar: S6, multiplyScalarAndAdd: j9, rotate: i17, scale: f25, set: a24, str: h13, sub: g13, subtract: p24, transpose: u24 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/mat2f64.js
function e34() {
  return [1, 0, 0, 1];
}
function r22(e36) {
  return [e36[0], e36[1], e36[2], e36[3]];
}
function t26(e36, r25, t27, n33) {
  return [e36, r25, t27, n33];
}
function n28(e36, r25) {
  return new Float64Array(e36, r25, 4);
}
var o26 = Object.freeze(Object.defineProperty({ __proto__: null, clone: r22, create: e34, createView: n28, fromValues: t26 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathVertex.js
var R8 = class {
  constructor() {
    this.vLeft = n3(), this.vRight = n3(), this.vMinSiblingLength = 0, this.frame = new l25();
  }
  setFrameFromUpVector(t27) {
    s10(this.frame.up, t27), u9(D4, this.vLeft, this.vRight), A3(D4, D4), g3(I10, this.frame.up, P2(D4, this.frame.up)), c2(k7, D4, I10), A3(k7, k7), _3(this.frame.right, k7, this.frame.up);
  }
  get foldingAngle() {
    return Math.PI - this.rotationAngle;
  }
};
var x7 = class extends R8 {
  get rotationFrameUp() {
    return this.frame.up;
  }
  get rotationRight() {
    return _4;
  }
  get rotationAngle() {
    g3(w10, this.frame.up, P2(this.frame.up, this.vLeft)), c2(w10, this.vLeft, w10), y2(w10, w10), A3(w10, w10), g3(y6, this.frame.up, P2(this.frame.up, this.vRight)), c2(y6, this.vRight, y6), A3(y6, y6), _3(U4, this.rotationFrameUp, this.vLeft);
    return Math.sign(P2(U4, this.vRight)) * (Math.PI - b(P2(w10, y6)));
  }
  get maxStretchDistance() {
    return Math.abs(this.vMinSiblingLength / Math.cos(0.5 * this.foldingAngle));
  }
  applyMiterStretch(t27, r25) {
    const s27 = this.rotationAngle;
    if (Math.abs(s27) <= 0) return r25;
    const a26 = h(Math.cos(0.5 * s27));
    return o5(t27, (a26 - 1 + 1) * r25[0], r25[1]);
  }
};
var L5 = class extends R8 {
  get rotationFrameUp() {
    const t27 = Math.sign(P2(this.frame.right, this.vRight));
    return _3(A10, this.vRight, this.vLeft), g3(A10, A10, t27), A3(A10, A10);
  }
  get rotationRight() {
    const t27 = this.rotationFrameUp, i20 = P2(t27, this.frame.up), r25 = P2(t27, this.frame.right);
    return g3(F6, this.frame.up, -r25), g3(P7, this.frame.right, i20), u9(F6, F6, P7), A3(F6, F6), j10(S7, this.frame, F6), S7;
  }
  get rotationAngle() {
    const i20 = Math.sign(P2(this.frame.right, this.vRight));
    return y2(U4, this.vLeft), -i20 * (Math.PI - b(P2(U4, this.vRight)));
  }
  get maxStretchDistance() {
    return Math.abs(this.vMinSiblingLength * h(Math.cos(0.5 * this.foldingAngle)));
  }
  applyMiterStretch(t27, s27) {
    const e36 = this.rotationAngle;
    if (0 === Math.abs(e36)) return s27;
    const h15 = h(Math.cos(0.5 * e36)), o27 = this.rotationRight, n33 = a24(E10, 1 + (h15 - 1) * o27[0] * o27[0], (h15 - 1) * o27[0] * o27[1], (h15 - 1) * o27[0] * o27[1], 1 + (h15 - 1) * o27[1] * o27[1]);
    return P(t27, s27, n33);
  }
};
function j10(t27, i20, r25) {
  o5(t27, P2(r25, i20.right), P2(r25, i20.up));
}
function d13(t27) {
  switch (t27) {
    case o24.World:
      return new x7();
    case o24.Path:
      return new L5();
  }
}
var A10 = n3();
var S7 = n6();
var F6 = n3();
var P7 = n3();
var U4 = n3();
var w10 = n3();
var y6 = n3();
var I10 = n3();
var D4 = n3();
var k7 = n3();
var E10 = e34();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/PathTechnique.js
var N7 = class extends n20 {
  constructor() {
    super(...arguments), this.ambient = e4(0.2, 0.2, 0.2), this.diffuse = e4(0.8, 0.8, 0.8), this.specular = e4(0, 0, 0), this.opacity = 1, this.origin = n3(), this.modelTransformation = null, this.mrrFactors = t14, this.emissiveFactor = _2, this.texture = null, this.textureNormal = null, this.textureEmissive = null, this.textureOcclusion = null, this.textureMetallicRoughness = null;
  }
};
var R9 = class extends l9 {
  constructor(e36, r25) {
    super(e36, r25, new t13(V5, () => import("./Path.glsl-IYU4XH5C.js")), L6);
  }
  initializePipeline(e36) {
    const { output: r25, transparent: t27, hasSlicePlane: l31, doubleSidedMode: n33, hasOccludees: a26, oitPass: b19 } = e36, O8 = b19 === o13.NONE, j13 = b19 === o13.FrontFace;
    return B2({ blending: u10(r25) && t27 ? a10(b19) : null, culling: l31 && !t27 && n33 !== i11.None ? u12 : null, depthTest: { func: f9(b19) }, depthWrite: O8 || j13 ? p5 : null, drawBuffers: r25 === n10.Depth ? { buffers: [f4.NONE] } : i9(b19, r25), colorWrite: g5, stencilWrite: a26 ? e24 : null, stencilTest: a26 ? f10 : null, polygonOffset: O8 || j13 ? null : C2 });
  }
};
var L6 = /* @__PURE__ */ new Map([[e11.POSITION, 0], [e11.PROFILERIGHT, 1], [e11.PROFILEUP, 2], [e11.PROFILEVERTEXANDNORMAL, 3], [e11.FEATUREVALUE, 4], [e11.OBJECTANDLAYERIDCOLOR, 5]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/PathTechniqueConfiguration.js
var n29 = class extends a13 {
  constructor(e36, s27) {
    super(), this.spherical = e36, this.doublePrecisionRequiresObfuscation = s27, this.pbrMode = n15.Disabled, this.doubleSidedMode = i11.None, this.emissionSource = d5.None, this.receiveShadows = false, this.receiveAmbientOcclusion = false, this.vvSize = false, this.vvColor = false, this.vvOpacity = false, this.transparent = false, this.hasOccludees = false, this.terrainDepthTest = false, this.cullAboveTerrain = false, this.textureCoordinateType = d4.None, this.occlusionPass = false, this.hasVvInstancing = true, this.useCustomDTRExponentForWater = false, this.useFillLights = false, this.hasColorTexture = false, this.objectAndLayerIdColorInstanced = false, this.hasMetallicRoughnessTexture = false, this.hasOcclusionTexture = false, this.hasNormalTexture = false;
  }
  get discardInvisibleFragments() {
    return this.transparent;
  }
};
r2([i12({ count: n15.COUNT })], n29.prototype, "pbrMode", void 0), r2([i12({ count: i11.COUNT })], n29.prototype, "doubleSidedMode", void 0), r2([i12({ count: d5.COUNT })], n29.prototype, "emissionSource", void 0), r2([i12()], n29.prototype, "receiveShadows", void 0), r2([i12()], n29.prototype, "receiveAmbientOcclusion", void 0), r2([i12()], n29.prototype, "vvSize", void 0), r2([i12()], n29.prototype, "vvColor", void 0), r2([i12()], n29.prototype, "vvOpacity", void 0), r2([i12()], n29.prototype, "transparent", void 0), r2([i12()], n29.prototype, "hasOccludees", void 0), r2([i12()], n29.prototype, "terrainDepthTest", void 0), r2([i12()], n29.prototype, "cullAboveTerrain", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/PathMaterial.js
var y7 = class extends n12 {
  constructor(e36, t27) {
    super(e36, E11), this._vertexBufferLayout = L7(), this.vertexAttributeLocations = L6, this.supportsEdges = true, this.produces = /* @__PURE__ */ new Map([[A5.OPAQUE_MATERIAL, (e37) => (this.parameters.castShadows && o11(e37) || t10(e37)) && !this.parameters.transparent], [A5.TRANSPARENT_MATERIAL, (e37) => (this.parameters.castShadows && o11(e37) || t10(e37)) && this.parameters.transparent]]), this._configuration = new n29(t27.spherical, t27.doublePrecisionRequiresObfuscation);
  }
  get hasEmissions() {
    return !H2(this.parameters.emissiveFactor, _2);
  }
  getConfiguration(e36, t27) {
    return this._configuration.output = e36, this._configuration.vvSize = !!this.parameters.vvSize, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.vvOpacity = !!this.parameters.vvOpacity, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.transparent = this.parameters.transparent, this._configuration.hasOccludees = t27.hasOccludees, u10(e36) ? (this._configuration.doubleSidedMode = this.parameters.doubleSided && "normal" === this.parameters.doubleSidedType ? i11.View : this.parameters.doubleSided && "winding-order" === this.parameters.doubleSidedType ? i11.WindingOrder : i11.None, this._configuration.receiveShadows = t27.shadowMap.enabled, this._configuration.receiveAmbientOcclusion = null != t27.ssao) : this._configuration.receiveShadows = this._configuration.receiveAmbientOcclusion = false, this._configuration.pbrMode = this.parameters.usePBR ? n15.Schematic : n15.Disabled, this._configuration.emissionSource = this.parameters.usePBR ? d5.Value : d5.None, this._configuration.oitPass = t27.oitPass, this._configuration.terrainDepthTest = t27.terrainDepthTest, this._configuration.cullAboveTerrain = t27.cullAboveTerrain, this._configuration;
  }
  isVisibleForOutput(e36) {
    return e36 !== n10.Shadow && e36 !== n10.ShadowExcludeHighlight && e36 !== n10.ShadowHighlight || this.parameters.castShadows;
  }
  get visible() {
    return this.parameters.opacity >= o16;
  }
  intersect(t27, i20, s27, a26, o27, n33) {
    const c20 = t27;
    if (!n24(c20)) return;
    const h15 = c20.path, u26 = [this.parameters.size[0], this.parameters.size[1]];
    if (this.parameters.vvSize) {
      const { offset: t28, factor: i21, minSize: r25, maxSize: s28 } = this.parameters.vvSize, a27 = h15.sizeAttributeValue;
      u26[0] *= r(t28[0] + a27 * i21[0], r25[0], s28[0]), u26[1] *= r(t28[2] + a27 * i21[2], r25[2], s28[2]);
    }
    const m17 = new h9(false, s27.options.normalRequired), p25 = Math.max(u26[0], u26[1]), f28 = t27.boundingInfo;
    if (null == f28) return void w11(h15, u26, a26, o27, m17, n33);
    const l31 = a5(f28.bbMin[0] - p25, f28.bbMin[1] - p25, f28.bbMin[2] - p25, f28.bbMax[0] + p25, f28.bbMax[1] + p25, f28.bbMax[2] + p25), v7 = [o27[0] - a26[0], o27[1] - a26[1], o27[2] - a26[2]], S10 = Math.sqrt(v7[0] * v7[0] + v7[1] * v7[1] + v7[2] * v7[2]), _12 = [S10 / v7[0], S10 / v7[1], S10 / v7[2]];
    w6(l31, a26, _12, s27.tolerance) && w11(h15, u26, a26, o27, m17, n33);
  }
  createBufferWriter() {
    return new f12(this._vertexBufferLayout);
  }
  createGLMaterial(e36) {
    return new T3(e36);
  }
};
function L7() {
  const e36 = H3().vec3f(e11.POSITION).vec4f(e11.PROFILERIGHT).vec4f(e11.PROFILEUP).vec4f(e11.PROFILEVERTEXANDNORMAL).vec4f(e11.FEATUREVALUE);
  return e19() && e36.vec4u8(e11.OBJECTANDLAYERIDCOLOR), e36;
}
var T3 = class extends e25 {
  beginSlot(e36) {
    return this.getTechnique(R9, e36);
  }
};
function w11(e36, t27, i20, r25, s27, a26) {
  e36.baked.size && e36.baked.size[0] === t27[0] && e36.baked.size[1] === t27[1] || e36.baked.bake(t27), e36.baked.intersect(i20, r25, s27, a26);
}
var E11 = class extends N7 {
  constructor() {
    super(...arguments), this.doubleSided = false, this.doubleSidedType = "normal", this.castShadows = true, this.hasSlicePlane = false, this.transparent = false, this.usePBR = false;
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DPathSymbolLayer.js
var ie = ["polyline"];
var re2 = class extends y4 {
  get usedMemory() {
    return this._usedMemory + super.usedMemory;
  }
  constructor(e36, t27, i20, r25) {
    super(e36, t27, i20, r25), this._intrinsicSize = t6(1, 1), this._upVectorAlignment = o24.Path, this._stencilWidth = 0.1, this._usedMemory = 0, this.ensureDrapedStatus(false);
  }
  async doLoad() {
    var _a, _b, _c, _d, _e3, _f;
    const t27 = null != this.symbolLayer.width ? this.symbolLayer.width : this.symbolLayer.height, i20 = null != this.symbolLayer.height ? this.symbolLayer.height : t27;
    this._vvConvertOptions = new $2({ size: true, color: true, rotation: false, opacity: true }, [1, 1, 1], [t27, 1, i20], this._context.renderCoordsHelper.unitInMeters);
    const r25 = (_a = this._context.renderer) == null ? void 0 : _a.visualVariables;
    this._fastUpdates = (r25 == null ? void 0 : r25.length) ? O4(this._context.renderer, this._vvConvertOptions) : null;
    const o27 = this.symbolLayer.anchor || "center";
    this._upVectorAlignment = "heading" === this.symbolLayer.profileRotation ? o24.World : o24.Path;
    const h15 = this.symbolLayer.profile || "circle";
    switch (h15) {
      default:
      case "circle":
        this._profile = d11[o27];
        break;
      case "quad":
        this._profile = a23[o27];
    }
    switch (this.symbolLayer.join) {
      case "round":
        this._extruder = new a22(0, o21);
        break;
      case "bevel":
        this._extruder = new a22(0, 1);
        break;
      case "miter":
        this._extruder = new a22(0.8 * Math.PI, 1);
        break;
      default:
        this._extruder = new c14();
    }
    const d16 = this.symbolLayer.cap || "butt";
    switch (d16) {
      case "none":
        this._startCap = new l24(), this._endCap = new l24();
        break;
      case "butt":
      default:
        this._startCap = new f22(this._profile, 0), this._endCap = new f22(this._profile, 0, true);
        break;
      case "square":
        this._startCap = new f22(this._profile, -0.5), this._endCap = new f22(this._profile, 0.5, true);
        break;
      case "round": {
        const e36 = "quad" === h15;
        this._startCap = new h11({ profile: this._profile, flip: false, breakNormals: e36, subdivisions: t21 }), this._endCap = new h11({ profile: this._profile, flip: true, breakNormals: e36, subdivisions: t21 });
        break;
      }
    }
    const f28 = (_c = (_b = this.symbolLayer) == null ? void 0 : _b.material) == null ? void 0 : _c.emissiveFactor, u26 = f28 ? b3(t3(f28)) : _2, y11 = (_e3 = (_d = this.symbolLayer) == null ? void 0 : _d.material) == null ? void 0 : _e3.color, b19 = this._getCombinedOpacityAndColor(y11), g14 = u5(b19), _12 = b19[3], v7 = _12 < 1 || this.needsDrivenTransparentPass, x9 = { diffuse: g14, ambient: g14, emissiveFactor: u26, opacity: _12, transparent: v7, hasVertexColors: false, hasSlicePlane: this._context.slicePlaneEnabled, castShadows: this.symbolLayer.castShadows, cullFace: v7 || "none" === d16 ? e21.None : e21.Back, offsetTransparentBackfaces: true };
    if (!this._drivenProperties.size && (o5(this._intrinsicSize, t27, i20), !Z(this._intrinsicSize[0]) || !Z(this._intrinsicSize[1]))) throw new s2("graphics3dpathsymbollayer:invalid-size", "Symbol sizes may not be negative values");
    if (((_f = this._fastUpdates) == null ? void 0 : _f.visualVariables.size) || l4(this._intrinsicSize, this._intrinsicSize, 1 / this._context.renderCoordsHelper.unitInMeters), this._fastUpdates) {
      const e36 = { ...x9, ...this._fastUpdates.materialParameters, size: o7(this._intrinsicSize) };
      this._materials[0] = new y7(e36, this._context);
    } else x9.hasVertexColors = this._drivenProperties.color || this._drivenProperties.opacity, x9.normalType = a7.Compressed, this._materials[0] = new z(x9, this._context);
    this._materials[0].setParameters({ usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: true }), this._context.stage.add(this._materials[0]);
  }
  destroy() {
    super.destroy(), this._context.stage.remove(this._materials[0]), this._materials.length = 0;
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry, ie, this.symbolLayer.type)) return null;
    const i20 = this.setGraphicElevationContext(t27), r25 = e36.renderingInfo;
    return this._createAs3DShape(t27, r25, i20, t27.uid);
  }
  layerOpacityChanged() {
    var _a, _b, _c;
    const e36 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, t27 = this._getCombinedOpacity(e36), i20 = t27 < 1 || this.needsDrivenTransparentPass;
    (_c = this._materials[0]) == null ? void 0 : _c.setParameters({ opacity: t27, transparent: i20 });
  }
  layerElevationInfoChanged(e36, t27) {
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, g8);
  }
  slicePlaneEnabledChanged() {
    var _a;
    return (_a = this._materials[0]) == null ? void 0 : _a.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled }), true;
  }
  physicalBasedRenderingChanged() {
    var _a;
    return (_a = this._materials[0]) == null ? void 0 : _a.setParameters({ usePBR: this._context.physicalBasedRenderingEnabled, isSchematic: true }), true;
  }
  applyRendererDiff(e36, t27) {
    var _a;
    for (const i20 in e36.diff) {
      if ("visualVariables" !== i20) return e30.RecreateSymbol;
      if (!G(this._fastUpdates, t27, this._vvConvertOptions)) return e30.RecreateSymbol;
      (_a = this._materials[0]) == null ? void 0 : _a.setParameters(this._fastUpdates.materialParameters);
    }
    return e30.FastUpdate;
  }
  _getVertexData(e36) {
    let t27 = 0;
    const i20 = e36.paths, r25 = [], s27 = e36.spatialReference, a26 = this._context.elevationProvider.spatialReference, o27 = this._context.renderCoordsHelper.spatialReference;
    for (const c20 of i20) t27 += c20.length;
    const n33 = t2(3 * t27);
    let l31, h15 = 0;
    for (const c20 of i20) {
      r25.push({ offset: h15, numVertices: c20.length });
      for (const t28 of c20) n33[h15++] = t28[0], n33[h15++] = t28[1], n33[h15++] = e36.hasZ ? t28[2] : 0;
    }
    return null == a26 || s27.equals(a26) || o2(n33, s27, 0, n33, a26, 0, t27) ? (null == a26 || a26.equals(o27) ? l31 = e3(n33) : (l31 = t2(3 * t27), o2(n33, a26, 0, l31, o27, 0, t27)), { pathVertexDataInfos: r25, vertexDataES: n33, vertexDataRS: l31 }) : null;
  }
  _createAs3DShape(e36, s27, a26, o27) {
    var _a, _b, _c;
    this._usedMemory = 0;
    const n33 = e36.geometry, l31 = this._getVertexData(n33);
    if (null == l31) return this.logger.warn("PathSymbol3DLayer geometry failed to be created (failed to project geometry to view spatial reference)"), null;
    if (0 === l31.pathVertexDataInfos.length) return 0 !== n33.paths.length && n33.paths.some((e37) => e37.length > 0) || this.logger.warn("PathSymbol3DLayer geometry failed to be created (no paths were defined)"), null;
    const c20 = new Array(), m17 = n33.spatialReference, p25 = u4(), d16 = this._context.renderCoordsHelper, f28 = new r15(l31.vertexDataES);
    for (const u26 of l31.pathVertexDataInfos) {
      const n34 = u26.numVertices;
      if (n34 < 2) continue;
      const g15 = u26.offset;
      if (null != this._context.clippingExtent && (o(l31.vertexDataES, g15, n34, p25), !A2(p25, this._context.clippingExtent))) continue;
      const _13 = new Array(), v7 = g15 + 3 * n34;
      for (let e37 = g15; e37 < v7; e37 += 3) {
        f28.offset = e37;
        const t27 = f15(f28, this._context.elevationProvider, a26, d16);
        o6(le2, l31.vertexDataRS[e37], l31.vertexDataRS[e37 + 1], l31.vertexDataRS[e37 + 2]), d16.setAltitude(le2, t27), l31.vertexDataRS[e37] = le2[0], l31.vertexDataRS[e37 + 1] = le2[1], l31.vertexDataRS[e37 + 2] = le2[2], _13.push(d13(this._upVectorAlignment));
      }
      const w13 = new n23(_13, l31.vertexDataES, l31.vertexDataRS, g15);
      se2(w13, this._upVectorAlignment, this._context.renderCoordsHelper);
      const P10 = new o22(w13, this._profile, this._extruder, this._startCap, this._endCap);
      let j13 = null;
      if (this._fastUpdates) {
        const t27 = this._fastUpdates.visualVariables, i20 = X((_a = t27.size) == null ? void 0 : _a.field, e36) ?? 0, r25 = X((_b = t27.color) == null ? void 0 : _b.field, e36) ?? 0, s28 = X((_c = t27.opacity) == null ? void 0 : _c.field, e36) ?? 0;
        j13 = new g12(P10, i20, r25, s28);
      } else {
        const e37 = [this._intrinsicSize[0], this._intrinsicSize[1]];
        if (this._drivenProperties.size) {
          const t28 = s27.size;
          e37[0] *= ae3(t28[0], "symbol-value" === t28[2] ? this.symbolLayer.height || 0 : t28[2], this.symbolLayer.width || 0), e37[1] *= ae3(t28[2], "symbol-value" === t28[0] ? this.symbolLayer.width || 0 : t28[0], this.symbolLayer.height || 0);
        }
        let t27;
        this._drivenProperties.color && (t27 = s27.color), this._drivenProperties.opacity && null != s27.opacity && (t27 = t27 ? [t27[0], t27[1], t27[2], s27.opacity] : [1, 1, 1, s27.opacity]);
        const i20 = new f24(P10);
        i20.bake(e37), t27 && i20.bakeVertexColors(t27), j13 = i20;
      }
      const S10 = j13.createGeometryData(), D6 = this._context.stage.renderView.getObjectAndLayerIdColor({ graphicUid: o27, layerUid: this._context.layer.uid }), C9 = new e32(this._materials[0], S10, j13, m17, this._stencilWidth, D6);
      C9.transformation = i3(e15(), o9, P10.path.origin), c20.push(C9), this._usedMemory += P10.usedMemory;
    }
    if (0 === c20.length) return null;
    const g14 = new A8({ geometries: c20, layerUid: this._context.layer.uid, graphicUid: o27 }), _12 = new p16(this, g14, c20, null, null, (e37, t27, i20, r25, s28) => ne2(e37, t27, r25, s28, this._upVectorAlignment), a26);
    return _12.alignedSampledElevation = 0, _12.needsElevationUpdates = g8(a26.mode), _12;
  }
};
function se2(e36, t27, i20) {
  const { origin: r25, positions: s27 } = e36;
  let a26 = e36.offset;
  switch (t27) {
    default:
    case o24.World:
      for (const t28 of e36.vertices) le2[0] = s27[a26++] + r25[0], le2[1] = s27[a26++] + r25[1], le2[2] = s27[a26++] + r25[2], i20.worldUpAtPosition(le2, le2), t28.setFrameFromUpVector(le2);
      break;
    case o24.Path:
      le2[0] = s27[a26] + r25[0], le2[1] = s27[a26 + 1] + r25[1], le2[2] = s27[a26 + 2] + r25[2], i20.worldUpAtPosition(le2, le2), l26(e36, le2);
  }
}
function ae3(e36, t27, i20) {
  switch (e36) {
    case "symbol-value":
      return i20;
    case "proportional":
      return t27;
    default:
      return e36;
  }
}
function oe2(e36, t27, i20, r25) {
  let s27 = 0;
  const { origin: a26, vertices: o27, positions: n33, positionsES: l31 } = e36, c20 = e36.offset + 3 * o27.length;
  for (let m17 = e36.offset; m17 < c20; m17 += 3) o6(le2, l31[m17], l31[m17 + 1], l31[m17 + 2]), i20(le2, he2), s27 += he2.sampledElevation, le2[0] = n33[m17] + a26[0], le2[1] = n33[m17 + 1] + a26[1], le2[2] = n33[m17 + 2] + a26[2], r25.setAltitude(le2, he2.z), n33[m17] = le2[0] - a26[0], n33[m17 + 1] = le2[1] - a26[1], n33[m17 + 2] = le2[2] - a26[2];
  return e36.updatePathVertexInformation(), s27 / o27.length;
}
function ne2(e36, t27, i20, r25, s27) {
  const a26 = e36.stageObject, o27 = a26.geometries;
  let n33 = 0;
  for (const l31 of o27) {
    if (!n24(l31)) continue;
    const e37 = l31.path, o28 = e37.builder.path;
    n33 += oe2(o28, t27, i20, r25), s27 !== o24.World && se2(o28, s27, r25), e37.onPathChanged(l31), l31.invalidateBoundingInfo(), a26.geometryVertexAttributeUpdated(l31, e11.POSITION);
  }
  return n33 / o27.length;
}
var le2 = n3();
var he2 = new R4();

// node_modules/@arcgis/core/views/3d/layers/support/uvUtils.js
function T4(t27, r25, e36, s27, i20 = 1) {
  if (e36.isGeographic && s27 === l8.Global) {
    const t28 = t2(r25.length), o27 = r25.length, s28 = s5(e36);
    for (let e37 = 0; e37 < o27; e37 += 3) h3(r25, e37, t28, e37, s28);
    r25 = t28;
  }
  o5(y8, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);
  for (let o27 = 0; o27 < r25.length; o27 += 3) y8[0] = Math.min(y8[0], r25[o27]), y8[1] = Math.min(y8[1], r25[o27 + 1]);
  const a26 = y8[0] % i20, m17 = y8[1] % i20, n33 = y8[0] - a26, c20 = y8[1] - m17;
  for (let o27 = 0; o27 < r25.length; o27 += 3) {
    const e37 = o27 / 3 * 4;
    t27[e37] = (r25[o27] - n33) / i20, t27[e37 + 1] = (r25[o27 + 1] - c20) / i20, t27[e37 + 2] = n33 / i20, t27[e37 + 3] = c20 / i20;
  }
}
function M5(t27, r25, n33, c20, l31 = 1) {
  o6(F7, 1, 0, 0), o6(Y3, 0, 1, 0), o6(_10, 0, 0, 1), D5(x8, n33), A4(V8, n33) && O7(V8, F7, Y3, _10, c20, x8), o5(y8, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY), o5(P8, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);
  for (let o27 = 0; o27 < n33.length; o27 += 3) {
    o6(E12, n33[o27], n33[o27 + 1], n33[o27 + 2]);
    const t28 = P2(F7, E12), r26 = P2(Y3, E12);
    y8[0] = Math.min(y8[0], t28), y8[1] = Math.min(y8[1], r26), P8[0] = Math.max(P8[0], t28), P8[1] = Math.max(P8[1], r26);
  }
  const f28 = P2(_10, x8);
  q7(v5, y8[0], y8[1], f28, F7, Y3, _10), q7(A11, P8[0], y8[1], f28, F7, Y3, _10), q7(G5, y8[0], P8[1], f28, F7, Y3, _10), c2(A11, A11, v5), g3(A11, A11, 0.5), c2(G5, G5, v5), g3(G5, G5, 0.5), u9(v5, v5, A11), u9(v5, v5, G5);
  const I14 = y8[0] % l31, h15 = y8[1] % l31, p25 = y8[0] - I14, N10 = y8[1] - h15;
  for (let o27 = 0; o27 < n33.length; o27 += 3) {
    o6(E12, n33[o27], n33[o27 + 1], n33[o27 + 2]);
    const i20 = o27 / 3, a26 = 4 * i20;
    t27[a26] = (P2(F7, E12) - p25) / l31, t27[a26 + 1] = (P2(Y3, E12) - N10) / l31, t27[a26 + 2] = p25 / l31, t27[a26 + 3] = N10 / l31;
    const m17 = 9 * i20;
    for (let t28 = 0; t28 < 3; t28++) r25[m17 + t28] = v5[t28], r25[m17 + t28 + 3] = A11[t28], r25[m17 + t28 + 6] = G5[t28];
  }
}
var x8 = n3();
var E12 = n3();
var V8 = M2();
var F7 = n3();
var Y3 = n3();
var _10 = n3();
var y8 = n6();
var P8 = n6();
var v5 = n3();
var A11 = n3();
var G5 = n3();
function O7(t27, o27, r25, i20, m17, I14) {
  null != m17 ? (m17.basisMatrixAtPosition(I14, S8), o6(d14, S8[0], S8[1], S8[2]), o6(k8, S8[4], S8[5], S8[6]), o6(w12, S8[8], S8[9], S8[10])) : (o6(d14, 1, 0, 0), o6(k8, 0, 1, 0), o6(w12, 0, 0, 1));
  const h15 = O2(t27);
  P2(h15, w12) < 0 && g3(h15, h15, -1), s10(i20, h15);
  const p25 = P2(h15, k8), N10 = P2(h15, d14);
  Math.abs(p25) > Math.abs(N10) ? (q4(o27, d14, h15, -N10), A3(o27, o27), _3(r25, o27, h15), A3(r25, r25), g3(r25, r25, -1)) : (q4(r25, k8, h15, -p25), A3(r25, r25), _3(o27, r25, h15), A3(o27, o27));
}
var S8 = e15();
var d14 = n3();
var k8 = n3();
var w12 = n3();
function D5(t27, o27) {
  o6(U5, 0, 0, 0);
  for (let r25 = 0; r25 < o27.length - 3; r25 += 3) U5[0] += o27[r25], U5[1] += o27[r25 + 1], U5[2] += o27[r25 + 2];
  g3(t27, U5, 1 / (o27.length / 3 - 1));
}
var U5 = n3();
function q7(t27, o27, r25, s27, i20, a26, m17) {
  o6(t27, o27 * i20[0] + r25 * a26[0] + s27 * m17[0], o27 * i20[1] + r25 * a26[1] + s27 * m17[1], o27 * i20[2] + r25 * a26[2] + s27 * m17[2]);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/PatternTechnique.js
var S9 = class extends l9 {
  constructor(e36, t27) {
    super(e36, t27, new t13(C4, () => import("./Pattern.glsl-ANG5Z47Q.js")), e19() ? j11 : b16);
  }
  _setPipelineState(r25, i20) {
    const { oitPass: s27, output: m17, cullFace: d16, draped: S10, hasOccludees: b19, polygonOffset: j13, enableOffset: g14 } = r25, A13 = s27 === o13.NONE, I14 = s27 === o13.FrontFace;
    return B2({ blending: u10(m17) ? a10(s27) : null, culling: f8(d16), depthTest: S10 ? null : { func: f9(s27) }, depthWrite: l10(r25), drawBuffers: m17 === n10.Depth ? { buffers: [f4.NONE] } : i9(s27, m17), colorWrite: g5, stencilWrite: b19 ? e24 : null, stencilTest: b19 ? i20 ? o14 : f10 : null, polygonOffset: A13 || I14 ? j13 ? R10 : null : N4(g14) });
  }
  initializePipeline(e36) {
    return this._occludeePipelineState = this._setPipelineState(e36, true), this._setPipelineState(e36, false);
  }
  getPipeline(e36) {
    return e36 ? this._occludeePipelineState : super.getPipeline();
  }
};
var R10 = { factor: 1, units: 1 };
var b16 = /* @__PURE__ */ new Map([[e11.POSITION, 0], [e11.COLOR, 3], [e11.UVMAPSPACE, 4], [e11.COLORFEATUREATTRIBUTE, 5], [e11.BOUNDINGRECT, 6]]);
var j11 = /* @__PURE__ */ new Map([[e11.POSITION, 0], [e11.COLOR, 3], [e11.UVMAPSPACE, 4], [e11.COLORFEATUREATTRIBUTE, 5], [e11.BOUNDINGRECT, 6], [e11.OBJECTANDLAYERIDCOLOR, 9]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/PatternTechniqueConfiguration.js
var n30 = class extends a13 {
  constructor() {
    super(...arguments), this.cullFace = e21.None, this.style = a19.Horizontal, this.hasVertexColors = false, this.polygonOffset = false, this.hasOccludees = false, this.enableOffset = true, this.terrainDepthTest = false, this.cullAboveTerrain = false, this.vvColor = false, this.draped = false, this.textureCoordinateType = d4.None, this.emissionSource = d5.None, this.discardInvisibleFragments = true, this.writeDepth = true, this.occlusionPass = false, this.hasVvInstancing = false, this.vvSize = false, this.vvOpacity = false, this.objectAndLayerIdColorInstanced = false;
  }
};
r2([i12({ count: e21.COUNT })], n30.prototype, "cullFace", void 0), r2([i12({ count: a19.COUNT })], n30.prototype, "style", void 0), r2([i12()], n30.prototype, "hasVertexColors", void 0), r2([i12()], n30.prototype, "polygonOffset", void 0), r2([i12()], n30.prototype, "hasOccludees", void 0), r2([i12()], n30.prototype, "enableOffset", void 0), r2([i12()], n30.prototype, "terrainDepthTest", void 0), r2([i12()], n30.prototype, "cullAboveTerrain", void 0), r2([i12()], n30.prototype, "vvColor", void 0), r2([i12()], n30.prototype, "draped", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/PatternMaterial.js
var P9 = class extends e27 {
  constructor(e36) {
    super(e36, I11), this._configuration = new n30(), this.vertexAttributeLocations = e19() ? j11 : b16, this.supportsEdges = true, this.produces = /* @__PURE__ */ new Map([[A5.OPAQUE_MATERIAL, (e37) => i6(e37)], [A5.TRANSPARENT_MATERIAL, (e37) => u10(e37)], [A5.TRANSPARENT_MATERIAL_WITHOUT_NORMALS, (e37) => S2(e37)], [A5.DRAPED_MATERIAL, (e37) => this.parameters.draped && f6(e37)]]);
  }
  getConfiguration(e36, t27) {
    return this._configuration.output = e36, this._configuration.cullFace = this.parameters.cullFace, this._configuration.hasVertexColors = this.parameters.hasVertexColors && !this.parameters.vvColor, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.polygonOffset = this.parameters.polygonOffset, this._configuration.style = this.parameters.style, this._configuration.draped = this.parameters.draped, this._configuration.oitPass = t27.oitPass, this._configuration.enableOffset = t27.camera.relativeElevation < A6, this._configuration.terrainDepthTest = t27.terrainDepthTest && u10(e36), this._configuration.cullAboveTerrain = t27.cullAboveTerrain, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration;
  }
  get visible() {
    return this.parameters.color[3] >= o16;
  }
  createGLMaterial(e36) {
    return new R11(e36);
  }
  createBufferWriter() {
    const e36 = H3().vec3f(e11.POSITION).vec4f(e11.UVMAPSPACE);
    return this.parameters.draped || e36.mat3f(e11.BOUNDINGRECT), this.parameters.vvColor ? e36.f32(e11.COLORFEATUREATTRIBUTE) : e36.vec4u8(e11.COLOR), e19() && e36.vec4u8(e11.OBJECTANDLAYERIDCOLOR), new y9(e36);
  }
};
var R11 = class extends e25 {
  beginSlot(e36) {
    return this.getTechnique(S9, e36);
  }
};
var y9 = class extends f12 {
  write(e36, s27, i20, o27, a26, n33) {
    E6(i20, o27, this.vertexBufferLayout, e36, s27, a26, n33);
    for (const f28 of this.vertexBufferLayout.fields.keys()) {
      const s28 = i20.get(f28), o28 = s28 == null ? void 0 : s28.indices;
      if (s28 && o28) switch (f28) {
        case e11.UVMAPSPACE: {
          s12(4 === s28.size);
          const e37 = a26.getField(f28, c3);
          e37 && p8(s28, e37, n33);
          break;
        }
        case e11.BOUNDINGRECT: {
          s12(9 === s28.size);
          const r25 = a26.getField(f28, l5);
          r25 && L8(s28, e36, r25, n33);
          break;
        }
      }
    }
  }
};
function L8(e36, t27, r25, s27) {
  const { data: i20, indices: o27 } = e36, a26 = t27, n33 = r25.typedBuffer, f28 = r25.typedBufferStride, c20 = o27.length;
  s27 *= f28;
  for (let l31 = 0; l31 < c20; ++l31) {
    const e37 = 9 * o27[l31], t28 = i20[e37], r26 = i20[e37 + 1], c21 = i20[e37 + 2];
    n33[s27] = a26[0] * t28 + a26[4] * r26 + a26[8] * c21 + a26[12], n33[s27 + 1] = a26[1] * t28 + a26[5] * r26 + a26[9] * c21 + a26[13], n33[s27 + 2] = a26[2] * t28 + a26[6] * r26 + a26[10] * c21 + a26[14];
    for (let o28 = 3; o28 < 9; ++o28) n33[s27 + o28] = i20[e37 + o28];
    s27 += f28;
  }
}
var I11 = class extends t15 {
  constructor() {
    super(...arguments), this.color = r5(1, 1, 1, 1), this.hasVertexColors = false, this.polygonOffset = false, this.hasSlicePlane = false, this.cullFace = e21.None, this.hasOccludees = false, this.style = a19.Cross, this.draped = true;
  }
};

// node_modules/@arcgis/core/views/3d/layers/support/patternUtils.js
function s25(e36, r25) {
  const a26 = e36 == null ? void 0 : e36.pattern;
  return null == a26 ? new A9(r25) : "none" === a26.style || "solid" === a26.style ? ("none" === a26.style && (r25.color = r5(0, 0, 0, 0), r25.forceTransparentMode = true), new A9(r25)) : (r25.style = l28(a26.style), new P9(r25));
}
function l28(t27) {
  switch (t27) {
    case "horizontal":
      return a19.Horizontal;
    case "vertical":
      return a19.Vertical;
    case "cross":
      return a19.Cross;
    case "forward-diagonal":
      return a19.ForwardDiagonal;
    case "backward-diagonal":
      return a19.BackwardDiagonal;
    case "diagonal-cross":
      return a19.DiagonalCross;
    default:
      return;
  }
}
function c17(t27) {
  return t27.material instanceof P9 && !t27.material.parameters.draped;
}
function u25(t27, e36) {
  if (c17(t27)) {
    const o27 = t27.attributes.get(e11.POSITION).data, n33 = t27.getMutableAttribute(e11.UVMAPSPACE).data, i20 = t27.getMutableAttribute(e11.BOUNDINGRECT).data;
    M5(n33, i20, o27, e36);
  }
}
function m16(t27, r25, a26, o27, n33) {
  const i20 = u15(t27, r25, a26, o27, n33), s27 = t27.stageObject.geometries;
  for (const e36 of s27) u25(e36, n33);
  return i20;
}

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DPolygonFillSymbolLayer.js
var z3 = ["polyline", "polygon", "extent"];
var H6 = new $2({ size: false, color: true, rotation: false, opacity: false });
var N8 = class _N extends y4 {
  constructor(e36, t27, i20, r25) {
    super(e36, t27, i20, r25), this._needsUV = false;
  }
  async doLoad() {
    this._fastUpdates = O4(this._context.renderer, H6);
  }
  _createMaterials() {
    var _a, _b, _c;
    if (this._materials.length > 0) return;
    const e36 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, i20 = this._getCombinedOpacityAndColor(e36);
    this._materials[J3.Fill] = s25(this.symbolLayer, { color: i20, forceTransparentMode: this.needsDrivenTransparentPass, discardInvisibleFragments: true, polygonOffset: false, hasVertexColors: true, draped: this.draped, hasSlicePlane: this._context.slicePlaneEnabled, ...(_c = this._fastUpdates) == null ? void 0 : _c.materialParameters }), this._needsUV = this._materials[J3.Fill] instanceof P9;
    const r25 = this.symbolLayer.outline;
    if (K2(r25)) {
      const e37 = n19(r25.pattern);
      this._materials[J3.Outline] = new W2({ width: u6(r25.size), color: this._getOutlineColor(), hasPolygonOffset: true, hasSlicePlane: this._context.slicePlaneEnabled, isClosed: true, stipplePattern: e37, cap: n22(r25.patternCap || "butt") });
    }
    this._context.stage.addMany(this._materials);
  }
  destroy() {
    super.destroy(), this._context.stage.removeMany(this._materials), this._materials.length = 0;
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry, z3, this.symbolLayer.type)) return null;
    const i20 = this._getVertexOpacityAndColor(e36.renderingInfo, 255), r25 = this.setGraphicElevationContext(t27);
    return this.ensureDrapedStatus("on-the-ground" === r25.mode), this._createMaterials(), this.draped ? this._createAsOverlay(t27, i20) : this._createAs3DShape(t27, i20, r25);
  }
  applyRendererDiff(e36, t27) {
    var _a;
    for (const i20 in e36.diff) {
      if ("visualVariables" !== i20) return e30.RecreateSymbol;
      if (!G(this._fastUpdates, t27, H6)) return e30.RecreateSymbol;
      (_a = this._materials[J3.Fill]) == null ? void 0 : _a.setParameters(this._fastUpdates.materialParameters);
    }
    return e30.FastUpdate;
  }
  layerOpacityChanged() {
    var _a, _b;
    if (null != this._materials[J3.Fill]) {
      const e36 = this._materials[J3.Fill].parameters.color, t27 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.material) == null ? void 0 : _b.color, i20 = this._getCombinedOpacity(t27);
      this._materials[J3.Fill].setParameters({ color: [e36[0], e36[1], e36[2], i20], forceTransparentMode: this.needsDrivenTransparentPass });
    }
    if (null != this._materials[J3.Outline]) {
      const e36 = this._materials[J3.Outline].parameters.color;
      this._materials[J3.Outline].setParameters({ color: [e36[0], e36[1], e36[2], this._getOutlineOpacity()] });
    }
  }
  layerElevationInfoChanged(e36, t27, i20) {
    const r25 = this._elevationContext.mode, s27 = m9(_N.elevationModeChangeTypes, i20, r25);
    if (s27 !== b7.UPDATE) return s27;
    const o27 = d7(r25);
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, () => o27);
  }
  slicePlaneEnabledChanged() {
    var _a;
    if ((_a = this._materials[J3.Fill]) == null ? void 0 : _a.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled }), this._materials[J3.Outline]) {
      const e36 = { hasSlicePlane: this._context.slicePlaneEnabled };
      this._materials[J3.Outline].setParameters(e36);
    }
    return true;
  }
  physicalBasedRenderingChanged() {
    return true;
  }
  _createAs3DShape(e36, t27, i20) {
    var _a;
    const r25 = b10(e36.geometry);
    if (!r25) return null;
    const s27 = p20(r25, this._context.elevationProvider, this._context.renderCoordsHelper, i20), o27 = new k9(s27, t27, this._context.layer.uid, e36.uid), n33 = o27.renderData.position.length / 3;
    if (this._needsUV && (o27.uvMapSpace = n7(4 * n33, true), o27.boundingRect = t2(9 * n33, true), M5(o27.uvMapSpace, o27.boundingRect, o27.renderData.position, this._context.renderCoordsHelper)), o27.objectAndLayerIdColor = (_a = this._context.stage.renderView) == null ? void 0 : _a.getObjectAndLayerIdColor(o27), this._createAs3DShapeFill(e36, o27), this._materials[J3.Outline] && this._createAs3DShapeOutline(o27), this._logGeometryCreationWarnings(o27.renderData, r25.rings, "rings", "FillSymbol3DLayer"), 0 === o27.outGeometries.length) return null;
    const a26 = new A8({ geometries: o27.outGeometries, castShadow: false, layerUid: this._context.layer.uid, graphicUid: e36.uid }), c20 = new p16(this, a26, o27.outGeometries, null, null, m16, i20);
    return c20.alignedSampledElevation = o27.renderData.sampledElevation, c20.needsElevationUpdates = d7(i20.mode), c20;
  }
  _createAs3DShapeFill(e36, t27) {
    var _a;
    const i20 = t27.renderData.polygons;
    for (const { position: r25, mapPositions: n33, holeIndices: a26, index: l31, count: p25 } of i20) {
      if (null != this._context.clippingExtent && (m2(n33, W5), !A2(W5, this._context.clippingExtent))) continue;
      const i21 = p19(n33, a26, this._context.elevationProvider.spatialReference);
      if (0 === i21.length) continue;
      const u26 = (_a = this._fastUpdates) == null ? void 0 : _a.visualVariables.color, d16 = l20({ material: this._materials[J3.Fill], indices: i21, mapPositions: n33, attributeData: { position: r25, color: u26 ? null : t27.color, colorFeature: u26 ? X(u26.field, e36) : null, uvMapSpace: this._needsUV ? e12(t27.uvMapSpace, 4 * l31, 4 * p25) : null, boundingRect: this._needsUV ? a4(t27.boundingRect, 9 * l31, 9 * p25) : null, objectAndLayerIdColor: t27.objectAndLayerIdColor } });
      t27.outGeometries.push(d16);
    }
  }
  _createAs3DShapeOutline(e36) {
    if (null == this._materials[J3.Outline]) return;
    const t27 = e36.renderData.outlines;
    for (const { mapPositions: i20, position: r25 } of t27) {
      if (null != this._context.clippingExtent && (m2(i20, W5), !A2(W5, this._context.clippingExtent))) continue;
      const t28 = b8(this._materials[J3.Outline], { overlayInfo: null, removeDuplicateStartEnd: true, mapPositions: i20, attributeData: { position: r25 } }, e36.objectAndLayerIdColor);
      e36.outGeometries.push(t28);
    }
  }
  _createAsOverlay(e36, t27) {
    var _a;
    const i20 = b10(e36.geometry);
    if (null == i20) return null;
    this._materials[J3.Fill].renderPriority = this._renderPriority + this._renderPriorityStep / 2, null != this._materials[J3.Outline] && (this._materials[J3.Outline].renderPriority = this._renderPriority);
    const r25 = c12(i20, this._context.overlaySR), s27 = new q8(r25, t27, this._context.layer.uid, e36.uid), o27 = s27.renderData.position.length / 3;
    return this._needsUV && (s27.uvMapSpace = n7(4 * o27, true), T4(s27.uvMapSpace, s27.renderData.position, this._context.overlaySR, this._context.graphicsCoreOwner.view.state.viewingMode)), s27.outBoundingBox = q(), s27.objectAndLayerIdColor = (_a = this._context.stage.renderView) == null ? void 0 : _a.getObjectAndLayerIdColor(s27), this._createAsOverlayFill(e36, s27), this._materials[J3.Outline] && this._createAsOverlayOutline(s27), this._logGeometryCreationWarnings(s27.renderData, i20.rings, "rings", "FillSymbol3DLayer"), 0 === s27.outGeometries.length ? null : new l22(this, s27.outGeometries, s27.outBoundingBox, this._context.drapeSourceRenderer);
  }
  _createAsOverlayFill(e36, t27) {
    var _a;
    const r25 = t27.renderData.polygons;
    for (const { position: n33, holeIndices: l31, index: c20, count: p25 } of r25) {
      const r26 = m2(n33, W5);
      if (!A2(r26, this._context.clippingExtent)) continue;
      const u26 = e16(n33, l31, 3);
      if (0 === u26.length) continue;
      M(t27.outBoundingBox, r26);
      const d16 = (_a = this._fastUpdates) == null ? void 0 : _a.visualVariables.color, m17 = l20({ material: this._materials[J3.Fill], indices: u26, attributeData: { position: n33, color: d16 ? null : t27.color, colorFeature: d16 ? X(d16.field, e36) : null, uvMapSpace: this._needsUV ? e12(t27.uvMapSpace, 4 * c20, 4 * p25) : null, objectAndLayerIdColor: t27.objectAndLayerIdColor } });
      t27.outGeometries.push(new g7(m17, t27));
    }
  }
  _createAsOverlayOutline(e36) {
    if (null == this._materials[J3.Outline]) return;
    const t27 = e36.renderData.outlines;
    for (let i20 = 0; i20 < t27.length; ++i20) {
      const { position: r25 } = t27[i20];
      if (m2(r25, W5), !A2(W5, this._context.clippingExtent)) continue;
      M(e36.outBoundingBox, W5);
      const n33 = b8(this._materials[J3.Outline], { overlayInfo: { spatialReference: this._context.overlaySR, renderCoordsHelper: this._context.renderCoordsHelper }, removeDuplicateStartEnd: true, attributeData: { position: r25 } }, e36.objectAndLayerIdColor);
      e36.outGeometries.push(new g7(n33, e36));
    }
  }
  _getOutlineOpacity() {
    var _a, _b;
    const e36 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.outline) == null ? void 0 : _b.color;
    return (this.draped ? 1 : this._getLayerOpacity()) * (null != e36 ? e36.a : 0);
  }
  _getOutlineColor() {
    var _a, _b;
    const t27 = (_b = (_a = this.symbolLayer) == null ? void 0 : _a.outline) == null ? void 0 : _b.color, i20 = this._getOutlineOpacity();
    return A7(null != t27 ? h2.toUnitRGB(t27) : null, i20);
  }
  test() {
    return { ...super.test(), createAsOverlay: (e36, t27) => this._createAsOverlay(e36, t27), createAs3DShape: (e36, t27, i20) => this._createAs3DShape(e36, t27, i20) };
  }
};
N8.elevationModeChangeTypes = { definedChanged: b7.RECREATE, staysOnTheGround: b7.NONE, onTheGroundChanged: b7.RECREATE };
var W5 = u4();
var k9 = class extends g9 {
  constructor(e36, t27, i20, r25) {
    super(e36, i20, r25), this.color = t27;
  }
};
var q8 = class extends g9 {
  constructor(e36, t27, i20, r25) {
    super(e36, i20, r25), this.color = t27;
  }
};
var J3;
function K2(e36) {
  return null != (e36 == null ? void 0 : e36.size) && e36.size > 0 && null != e36.color && (null == e36.pattern || "style" !== e36.pattern.type || "none" !== e36.pattern.style);
}
!function(e36) {
  e36[e36.Fill = 0] = "Fill", e36[e36.Outline = 1] = "Outline";
}(J3 || (J3 = {}));

// node_modules/@arcgis/core/views/3d/layers/graphics/LabelParameters.js
var i18 = class {
  constructor(i20, r25 = "center", c20 = false, a26 = n6(), o27 = r5(0, 0, 0, -1), l31 = "world", f28 = n3(), n33 = 0) {
    this.verticalOffset = i20, this.anchor = r25, this.hasLabelVerticalOffset = c20, this.screenOffset = a26, this.centerOffset = o27, this.centerOffsetUnits = l31, this.translation = f28, this.elevationOffset = n33;
  }
};
var r23 = class {
  constructor(e36, s27 = "center", i20 = "center", r25 = null, c20 = n6(), a26 = true) {
    this.placement = e36, this.horizontalPlacement = s27, this.verticalPlacement = i20, this.text = r25, this.displaySize = c20, this.isFocused = a26;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextRenderParameters.js
var s26 = class _s {
  constructor(o27) {
    this.definition = o27, this.key = JSON.stringify(o27), this.haloSize = Math.round(o27.halo.size), this.textStyle = a25(o27.color), this.haloStyle = l29(o27.halo.color), this.backgroundStyle = 0 !== o27.background.color[3] ? a25(o27.background.color) : null;
  }
  fontString(o27) {
    const t27 = this.definition.font, e36 = "sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji";
    return `${t27.style} ${t27.weight} ${o27}px ${t27.family}, ${e36}`;
  }
  setFontProperties(o27, t27) {
    o27.font = this.fontString(t27), o27.textAlign = "left", o27.textBaseline = "alphabetic";
  }
  static async fromSymbol(l31, a26) {
    var _a, _b, _c, _d, _e3;
    const f28 = (_a = l31 == null ? void 0 : l31.material) == null ? void 0 : _a.color, m17 = h2.toUnitRGBA(f28) ?? s9, g14 = null != l31.size ? u6(l31.size) : 12, u26 = l31.lineHeight, d16 = null != l31.background ? h2.toUnitRGBA(l31.background.color) : s9, h15 = { family: ((_b = l31.font) == null ? void 0 : _b.family) ?? "sans-serif", decoration: ((_c = l31.font) == null ? void 0 : _c.decoration) ?? "none", weight: ((_d = l31.font) == null ? void 0 : _d.weight) ?? "normal", style: ((_e3 = l31.font) == null ? void 0 : _e3.style) ?? "normal" }, y11 = l31.halo, b19 = null != (y11 == null ? void 0 : y11.color) && y11.size > 0 ? { size: u6(y11.size), color: h2.toUnitRGBA(y11.color) } : { size: 0, color: s9 }, p25 = new _s({ color: m17, size: g14, background: { color: d16, padding: null != l31.background ? [0.65 * g14, 0.5 * g14] : [0, 0], borderRadius: null != l31.background ? g14 * (6 / 16) : 0 }, lineSpacingFactor: u26, font: h15, halo: b19, pixelRatio: a26 });
    if (l31.font) {
      let o27 = false;
      const r25 = p25.fontString(g14);
      try {
        o27 = (await document.fonts.load(r25)).some((o28) => !i5(o28));
      } catch (S10) {
        n.getLogger("esri.views.3d.webgl-engine.lib.TextRenderParameters").warnOnce(`Failed to preload font '${r25}'. Some text symbology may be rendered using the default browser font.`);
      }
      if (!o27 && !c18.has(l31.font.family)) try {
        await c5(l31.font);
      } catch (S10) {
      }
    }
    return p25;
  }
};
function l29(o27) {
  return `rgb(${o27.slice(0, 3).map((o28) => Math.floor(255 * o28)).toString()})`;
}
function a25(o27) {
  return `rgba(${o27.slice(0, 3).map((o28) => Math.floor(255 * o28)).toString()},${o27[3]})`;
}
var c18 = /* @__PURE__ */ new Set(["Arial", "Times New Roman", "Courier New", "serif", "sans-serif", "monospace", "cursive", "fantasy", "system-ui", "ui-serif", "ui-sans-serif", "ui-monospace", "ui-rounded", "math", "emoji", "fangsong"]);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextTextureAtlas.js
var T5 = 4096;
var k10 = class extends g {
  constructor(e36) {
    super(e36), this.type = e23.Texture, this.id = e2(), this.events = new i(), this._glTexture = null, this._atlas = new A12(256, 256), this._needsRepack = false, this._canRepack = true, this._elementsToRender = /* @__PURE__ */ new Map(), this._elements = /* @__PURE__ */ new Map(), this._uvCallbacks = /* @__PURE__ */ new Map(), this.updating = false;
  }
  initialize() {
    this._canvas = document.createElement("canvas"), this._canvas.setAttribute("id", "textAtlasCanvas"), this._canvas.setAttribute("style", "display:none"), this._ctx = this._canvas.getContext("2d"), this._stage = this.view._stage, this._stage.add(this), this._updateCanvasElementSize(this._atlas), this._reset();
  }
  unload() {
    this._glTexture = r3(this._glTexture), this._frameWorker = l2(this._frameWorker), this.updating = false, this.events.emit("unloaded");
  }
  get glTexture() {
    return this._glTexture;
  }
  static get maxSize() {
    return j12 = n18.stableRendering ? R12 : 0, [T5 - R12 - j12, T5 - R12 - j12 - y10];
  }
  load(e36) {
    if (this._glTexture) return this._glTexture;
    const t27 = new p7();
    return t27.wrapMode = D.CLAMP_TO_EDGE, t27.samplingMode = L2.LINEAR_MIPMAP_LINEAR, t27.hasMipmap = true, t27.preMultiplyAlpha = true, t27.maxAnisotropy = e36.parameters.maxMaxAnisotropy, this._glTexture = new w5(e36, t27, this._canvas), this._frameWorker = this.view.resourceController.scheduler.registerTask(g2.TEXT_TEXTURE_ATLAS, this), this.setDirty(), this._glTexture;
  }
  dispose() {
    this._elements.clear(), this._elementsToRender.clear(), this._frameWorker = l2(this._frameWorker), this._glTexture && (this._stage.remove(this), this._glTexture = r3(this._glTexture)), this._canvas.width = 0, this._canvas.height = 0, this._canvas = null, this._ctx = null;
  }
  _updateCanvasElementSize(e36) {
    this._canvas.width = e36.width, this._canvas.height = e36.height;
  }
  _resizeAtlas(e36, t27) {
    var _a, _b;
    const { width: s27, height: i20 } = this._atlas;
    s27 === e36 && i20 === t27 || (this._atlas.width = e36, this._atlas.height = t27, (_a = this._glTexture) == null ? void 0 : _a.resize(e36, t27), (_b = this._glTexture) == null ? void 0 : _b.updateData(0, 0, 0, s27, i20, this._canvas), this._updateCanvasElementSize(this._atlas), this._elements.forEach((e37) => {
      var _a2;
      return (_a2 = this._uvCallbacks.get(e37.textRenderer.key)) == null ? void 0 : _a2.forEach((t28) => t28(e37.uv));
    }), this._reset());
  }
  _reset() {
    this._elementsToRender.clear(), this._atlas.reset(), this._needsRepack = true, this.setDirty();
  }
  _addAtlasElement(e36, t27, s27, i20) {
    const r25 = this._atlas;
    if (r25.width < s27 || r25.height < i20) return false;
    let h15 = r25.cursors.get(i20);
    if (!h15) {
      if (r25.height < r25.nextY + i20) return false;
      h15 = [new C8(r25.nextY)], r25.cursors.set(i20, h15), r25.nextY += i20;
    }
    let n33 = h15.find((e37) => r25.width >= e37.x + s27);
    if (null == n33) {
      if (r25.height < r25.nextY + i20) return false;
      n33 = new C8(r25.nextY), r25.nextY += i20, h15.push(n33);
    }
    return e36.setNewPosition(n33), this._elements.set(t27, e36), this._elementsToRender.set(t27, e36), n33.x += s27, true;
  }
  _ensureCallbacks(e36) {
    const t27 = this._uvCallbacks.get(e36);
    if (t27) return t27;
    const s27 = /* @__PURE__ */ new Set();
    return this._uvCallbacks.set(e36, s27), s27;
  }
  _addCallback(e36, t27) {
    this._ensureCallbacks(e36).add(t27);
  }
  _removeCallback(e36, t27) {
    const s27 = this._uvCallbacks.get(e36);
    return !(!(s27 == null ? void 0 : s27.delete(t27)) || 0 !== s27.size) && (this._uvCallbacks.delete(e36), true);
  }
  _processAddition(e36) {
    const t27 = e36.textRenderer.key;
    if (this._needsRepack) return void this._elements.set(t27, e36);
    const s27 = this._atlas, i20 = e36.textRenderer.renderedWidth, r25 = e36.textRenderer.renderedHeight, h15 = i20 + R12, n33 = r25 + R12 + y10;
    if (!this._addAtlasElement(e36, t27, h15, n33)) {
      if (this._canRepack) this._reset();
      else if (s27.width < h15) {
        const e37 = Math.min(n16(Math.max(h15, 1.5 * s27.width)), T5);
        this._resizeAtlas(e37, s27.height);
      } else {
        const e37 = s27.nextY + n33, t28 = Math.min(n16(Math.max(e37, 1.5 * s27.height)), T5);
        if (t28 > s27.height) this._resizeAtlas(s27.width, t28);
        else if (s27.width < T5) {
          const e38 = Math.min(n16(1.5 * s27.width), T5);
          this._resizeAtlas(e38, s27.height);
        }
      }
      this._elements.set(t27, e36);
    }
  }
  _renderElement(e36) {
    var _a;
    const t27 = e36.commitNewPosition(), s27 = e36.textRenderer;
    this._ctx.clearRect(t27[0] - R12, t27[1] - R12, s27.renderedWidth + 2 * R12, s27.renderedHeight + 2 * R12), s27.render(this._ctx, t27[0], t27[1]), (_a = this._uvCallbacks.get(s27.key)) == null ? void 0 : _a.forEach((t28) => t28(e36.uv));
  }
  get running() {
    return this.updating;
  }
  runTask(e36) {
    if (null == this._glTexture) return o4;
    for (; this._needsRepack && (this._canRepack || this._atlas.height < T5 && this._atlas.height < T5); ) {
      this._canRepack = this._needsRepack = false;
      const t27 = this._elements;
      this._elements = /* @__PURE__ */ new Map(), t27.forEach((e37) => this._processAddition(e37)), e36.madeProgress();
    }
    if (this._elementsToRender.size > 0) {
      for (const [t27, s27] of this._elementsToRender) {
        if (e36.done) break;
        this._renderElement(s27), this._elementsToRender.delete(t27), e36.madeProgress();
      }
      this._glTexture.setData(this._canvas);
    }
    this.updating = this._elementsToRender.size > 0;
  }
  addText(e36, t27) {
    const s27 = e36.key;
    this._addCallback(s27, t27);
    let i20 = this._elements.get(s27);
    return i20 ? E(i20.uv, s9) || t27(i20.uv) : (i20 = new b17(this._atlas, e36), this._processAddition(i20), this.setDirty()), { remove: () => this._removeText(e36, t27) };
  }
  _removeText(e36, t27) {
    const s27 = e36.key;
    this._elements.get(s27) && this._removeCallback(s27, t27) && (this._elements.delete(s27), this._elementsToRender.delete(s27), this._canRepack = true);
  }
  setDirty() {
    this._glTexture && (this.updating = true);
  }
  get test() {
  }
};
r2([m({ constructOnly: true })], k10.prototype, "view", void 0), r2([m({ type: Boolean })], k10.prototype, "updating", void 0), k10 = r2([a3("esri.views.3d.webgl-engine.lib.TextTextureAtlas")], k10);
var R12 = 2;
var y10 = 2;
var b17 = class {
  constructor(e36, t27) {
    this._atlas = e36, this.textRenderer = t27, this._uv = n5(), this._newPosition = [0, 0];
  }
  get uv() {
    if (null == this._xOffset || null == this._yOffset) return s9;
    const { renderedWidth: e36, renderedHeight: t27 } = this.textRenderer;
    return s8(this._uv, this._xOffset / this._atlas.width, (this._yOffset + t27) / this._atlas.height, (this._xOffset + e36) / this._atlas.width, this._yOffset / this._atlas.height);
  }
  setNewPosition(e36) {
    this._newPosition[0] = e36.x, this._newPosition[1] = e36.y;
  }
  commitNewPosition() {
    return this._xOffset = this._newPosition[0], this._yOffset = this._newPosition[1], this._newPosition;
  }
  get xOffset() {
    return this._xOffset;
  }
  get yOffset() {
    return this._yOffset;
  }
};
var A12 = class {
  constructor(e36, t27) {
    this.width = e36, this.height = t27, this.cursors = /* @__PURE__ */ new Map(), this.nextY = 0;
  }
  reset() {
    this.cursors.clear(), this.nextY = j12;
  }
};
var C8 = class {
  constructor(e36) {
    this.y = e36, this.x = j12;
  }
};
var j12 = 0;

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextTextureFactory.js
var i19 = class {
  constructor(e36, n33, s27) {
    this._renderer = new r12(e36, n33, s27, k10.maxSize);
  }
  get key() {
    return this._renderer.key;
  }
  get baselineAnchorY() {
    return 1 - this._renderer.firstRenderedBaselinePosition / this._renderer.renderedHeight;
  }
  get displayWidth() {
    return this._renderer.displayWidth;
  }
  get displayHeight() {
    return this._renderer.displayHeight;
  }
  create() {
    const r25 = a9(d15, this._renderer.renderedWidth, this._renderer.renderedHeight), t27 = r25.getContext("2d");
    return t27.save(), this._renderer.render(t27, 0, 0), t27.restore(), new N5(r25, { wrap: { s: D.CLAMP_TO_EDGE, t: D.CLAMP_TO_EDGE }, noUnpackFlip: false, mipmap: true, preMultiplyAlpha: true });
  }
};
var d15 = { canvas: null };

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DTextSymbolLayer.js
var H7 = e4(0, 0, 1);
var W6 = class extends y4 {
  constructor(e36, t27, s27, r25) {
    super(e36, t27, s27, r25), this._elevationOptions = { supportsOffsetAdjustment: true, supportsOnTheGround: false }, this.ensureDrapedStatus(false);
  }
  async doLoad() {
    if (!this._drivenProperties.size) {
      const t27 = U(this.symbolLayer.size);
      if (t27) throw new s2("graphics3dtextsymbollayer:invalid-size", t27);
    }
    await this._createTextRenderParameters();
  }
  async _createTextRenderParameters() {
    const e36 = this._context.graphicsCoreOwner.view.state.rasterPixelRatio;
    this._textRenderParameters = await s26.fromSymbol(this.symbolLayer, e36);
  }
  destroy() {
    super.destroy();
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic, s27 = f17(t27.geometry);
    if (null == s27) return this.logger.warn(`unsupported geometry type for text symbol: ${t27.geometry.type}`), null;
    const r25 = this._context.stage.view.focusAreas.containsGeometry(s27), o27 = this.symbolLayer.text;
    if (null == o27 || "" === o27) return null;
    const n33 = o18(this.symbol) && this.symbol.hasVisibleVerticalOffset() ? this.symbol.verticalOffset : null;
    if (null != n33 && !l13(this.symbolLayer)) return this.logger.errorOncePerTick(`Callouts and vertical offset on text symbols are currently only supported with 'center' horizontal alignment (not with '${this.symbolLayer.horizontalAlignment}' alignment)`), null;
    const { verticalAlignment: i20 } = this.symbolLayer, a26 = new i18(n33);
    h6(i20, a26.screenOffset);
    const l31 = new r23(a26, this.symbolLayer.horizontalAlignment, u11(i20));
    return l31.isFocused = r25 ?? l31.isFocused, this._createAs3DShape(t27, s27, o27, l31);
  }
  updateFocus(e36, t27) {
    t27.forEach((t28) => {
      const s27 = this._context.stage.view.focusAreas.containsGeometry(t28.graphic.geometry);
      t28.layers.forEach((r25) => {
        if ((r25 == null ? void 0 : r25.graphics3DSymbolLayer) === this) {
          r25.stageObject.geometries.some((e37) => e37.material.parameters.isFocused !== s27) && e36(t28);
        }
      });
    });
  }
  createLabel(e36, t27, s27, r25, o27) {
    const n33 = e36.graphic, i20 = f17(n33.geometry);
    if (null == i20) return this.logger.warn(`unsupported geometry type for label: ${n33.geometry.type}`), null;
    const a26 = this._context.stage.view.focusAreas.containsGeometry(i20), l31 = t27.text;
    return !l31 || /^\s+$/.test(l31) ? null : (t27.isFocused = a26 ?? t27.isFocused, this._createAs3DShape(n33, i20, l31, t27, s27, r25, o27));
  }
  setGraphicElevationContext(e36, t27 = new o20(), s27 = 0) {
    return super.setGraphicElevationContext(e36, t27), t27.addOffsetRenderUnits(s27), t27;
  }
  layerOpacityChanged() {
    return this.logger.warn("layer opacity change not yet implemented in Graphics3DTextSymbolLayer"), false;
  }
  layerElevationInfoChanged(e36, t27) {
    return I12(e36, t27, (e37, t28) => {
      this.updateGraphicElevationContext(t28, e37);
    }), b7.UPDATE;
  }
  slicePlaneEnabledChanged(e36, t27) {
    return I12(e36, t27, (e37) => {
      for (const t28 of e37.stageObject.geometries) t28.material.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled });
    }), true;
  }
  physicalBasedRenderingChanged() {
    return true;
  }
  get pixelRatioChanged() {
    return false;
  }
  updateGraphicElevationContext(e36, t27) {
    const { elevationContext: s27, metadata: r25 } = t27;
    this.setGraphicElevationContext(e36, s27, (r25 == null ? void 0 : r25.elevationOffset) ?? 0), t27.needsElevationUpdates = d7(s27.mode) || "absolute-height" === s27.mode;
  }
  updateGeometry(e36, t27) {
    if (this.draped || !this._validateGeometry(t27)) return false;
    const { elevationContext: s27, stageObject: r25 } = e36;
    if (s27.mode !== this.getGeometryElevationMode(t27)) return false;
    const o27 = f17(t27);
    if (!o27) return false;
    const n33 = p17(r25, this._context, o27, s27);
    if (null == n33) return false;
    const i20 = d8(this._context, o27);
    return r25.geometries[0].localOrigin === i20 && (e36.alignedSampledElevation = n33, m10(e36, o27, this._context.elevationProvider), true);
  }
  _defaultElevationInfoNoZ() {
    return V9;
  }
  _createAs3DShape(e36, a26, c20, m17, u26 = null, x9 = null, v7 = () => m17.placement.elevationOffset) {
    var _a, _b, _c;
    const b19 = this.setGraphicElevationContext(e36, new o20(), m17.placement.elevationOffset), O8 = "polyline" === ((_a = e36.geometry) == null ? void 0 : _a.type), P10 = e36.uid;
    let w13 = null, j13 = null;
    if (null == x9) {
      const e37 = f7(m17.horizontalPlacement);
      w13 = new i19(c20, e37, this._textRenderParameters);
      let r25 = null;
      if (null != this._context.sharedResources.textures) {
        j13 = this._context.sharedResources.textures.fromData(w13.key, () => w13.create()), j13.texture.events.on("unloaded", () => r25 = t(r25));
        const e38 = this._context.stage.renderView.textures.acquire(j13.texture.id);
        if (null == e38 || S(e38)) return j13.release(), null;
        r25 = e38;
      }
    }
    const E13 = !!has("enable-feature:non-occluded-hud"), S10 = M6(w13, m17), L9 = { occlusionTest: !E13, occludedFragmentFade: E13, horizonCullingEnabled: E13 && this._context.spherical, screenOffset: m17.placement.screenOffset, anchorPosition: S10, polygonOffset: true, color: [1, 1, 1, 1], centerOffsetUnits: m17.placement.centerOffsetUnits, depthEnabled: false, drawAsLabel: true, isLabel: true, isFocused: m17.isFocused };
    if (O8 && (L9.shaderPolygonOffset = 1e-4), x9 ? L9.textureId = x9.id : j13 && (L9.textureId = j13.texture.id), null != m17.placement.verticalOffset) {
      const { screenLength: e37, minWorldLength: t27, maxWorldLength: s27 } = m17.placement.verticalOffset;
      L9.verticalOffset = { screenLength: u6(e37), minWorldLength: t27 || 0, maxWorldLength: null != s27 ? s27 : 1 / 0 };
    }
    const G6 = this._context.graphicsCoreOwner.view.focusAreas.activePolygons.length, A13 = { screenOffset: L9.screenOffset, anchorPosition: S10, centerOffsetUnits: L9.centerOffsetUnits, verticalOffset: L9.verticalOffset, shaderPolygonOffset: L9.shaderPolygonOffset, occlusionTest: L9.occlusionTest, isFocused: m17.isFocused, focusEffect: (_b = this._context.stage.view.focusAreas) == null ? void 0 : _b.style };
    if (this._context.screenSizePerspectiveEnabled) {
      const { screenSizePerspectiveSettings: e37, screenSizePerspectiveSettingsLabels: t27 } = this._context.sharedResources, s27 = e20(this._textRenderParameters);
      L9.screenSizePerspective = t27.overrideFontHeight(s27.maxHeight), L9.screenSizePerspectiveAlignment = e37, A13.fontHeight = s27.maxHeight;
    }
    L9.hasSlicePlane = this._context.slicePlaneEnabled;
    const D6 = this._context.spherical, W8 = u26 ? JSON.stringify(A13) : "";
    let I14 = u26 == null ? void 0 : u26.get(W8);
    if (null == I14) {
      if (!m17.isFocused && G6 > 0) {
        const e37 = (_c = this._context.stage.view.focusAreas) == null ? void 0 : _c.style;
        L9.color = C5(L9.color, e37), L9.outlineColor = C5(L9.outlineColor, e37);
      }
      I14 = new ae(L9, D6), u26 == null ? void 0 : u26.add(W8, I14);
    }
    const V11 = m17.placement.translation, $4 = w13 ? t6(w13.displayWidth, w13.displayHeight) : l6, k12 = m17.placement.centerOffset, N10 = H7, q9 = x9 ? r5(0, 0, 0, 0) : null, B5 = lt(I14, { normal: N10, position: V11, size: $4, centerOffsetAndDistance: k12, uvs: q9 }), J4 = a18(this._context, a26, B5, b19, P10);
    if (null == J4) return null;
    const Y4 = (t27, s27, r25, o27, n33, i20) => {
      const a27 = v7() || m17.placement.elevationOffset, l31 = this.setGraphicElevationContext(e36, s27, a27);
      return p15(t27, l31, r25, o27, n33, i20);
    }, Z3 = new p16(this, J4.object, [B5], null == u26 ? [I14] : null, j13, Y4, b19);
    Z3.alignedSampledElevation = J4.sampledElevation, Z3.needsElevationUpdates = d7(b19.mode) || "absolute-height" === b19.mode, Z3.getScreenSize = (e37 = n6()) => (e37[0] = w13 ? w13.displayWidth : m17.displaySize[0], e37[1] = w13 ? w13.displayHeight : m17.displaySize[1], e37);
    const K3 = new t22(m17.placement.elevationOffset, c20);
    return Z3.metadata = K3, m10(Z3, a26, this._context.elevationProvider), Z3;
  }
};
function I12(e36, t27, s27) {
  e36 == null ? void 0 : e36.forEach((e37) => {
    const r25 = t27(e37);
    null != r25 && s27(r25, e37.graphic);
  });
}
function M6(e36, t27) {
  if ("baseline" === t27.verticalPlacement) {
    const s28 = i7[t27.horizontalPlacement], r25 = null != e36 ? e36.baselineAnchorY : 0;
    return t6(s28, r25);
  }
  const s27 = m6(t27.horizontalPlacement, t27.verticalPlacement);
  return s15[s27];
}
var V9 = { mode: "relative-to-ground", offset: 0 };

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/WaterTechnique.js
var f27 = class extends l9 {
  constructor(r25, e36) {
    super(r25, e36, new t13(S4, () => import("./WaterSurface.glsl-MW2UF65V.js")));
  }
  initializePipeline(e36) {
    const { oitPass: t27, output: s27, transparent: p25, draped: m17, enableOffset: f28 } = e36, h15 = t27 === o13.NONE, j13 = t27 === o13.FrontFace;
    return B2({ blending: s27 !== n10.Normal && s27 !== n10.Highlight && s27 !== n10.ObjectAndLayerIdColor && p25 ? a10(t27) : null, depthTest: m17 ? null : { func: f9(t27) }, depthWrite: l10(e36), drawBuffers: i9(t27, s27), colorWrite: g5, polygonOffset: h15 || j13 ? null : N4(f28) });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/WaterGLMaterial.js
var r24 = class extends e25 {
  ensureResources(e36) {
    return this._techniques.context.waterTextures.ensureResources(e36);
  }
  beginSlot(e36) {
    const r25 = this._techniques.context.waterTextures.passParameters;
    return this._material.setParameters({ wavePerturbation: r25.wavePerturbation, waveNormal: r25.waveNormal }), this.getTechnique(f27, e36);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/WaterTechniqueConfiguration.js
var n31 = class extends a13 {
  constructor(e36, i20) {
    super(), this.spherical = e36, this.doublePrecisionRequiresObfuscation = i20, this.receiveShadows = false, this.transparent = false, this.enableOffset = true, this.writeDepth = false, this.screenSpaceReflections = false, this.cloudReflections = false, this.objectAndLayerIdColorInstanced = false, this.draped = false, this.terrainDepthTest = false, this.cullAboveTerrain = false, this.textureCoordinateType = d4.None, this.emissionSource = d5.None, this.pbrMode = n15.Water, this.occlusionPass = false, this.useCustomDTRExponentForWater = true, this.highStepCount = true, this.useFillLights = false;
  }
  get discardInvisibleFragments() {
    return this.transparent && this.writeDepth;
  }
};
r2([i12()], n31.prototype, "receiveShadows", void 0), r2([i12()], n31.prototype, "transparent", void 0), r2([i12()], n31.prototype, "enableOffset", void 0), r2([i12()], n31.prototype, "writeDepth", void 0), r2([i12()], n31.prototype, "screenSpaceReflections", void 0), r2([i12()], n31.prototype, "cloudReflections", void 0), r2([i12()], n31.prototype, "objectAndLayerIdColorInstanced", void 0), r2([i12()], n31.prototype, "draped", void 0), r2([i12()], n31.prototype, "terrainDepthTest", void 0), r2([i12()], n31.prototype, "cullAboveTerrain", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/WaterMaterial.js
var _11 = class extends e27 {
  constructor(t27, e36) {
    super(t27, v6), this.produces = /* @__PURE__ */ new Map([[A5.OPAQUE_MATERIAL, (t28) => u10(t28) && !this.parameters.transparent || i6(t28)], [A5.TRANSPARENT_MATERIAL, (t28) => u10(t28) && this.parameters.transparent || i6(t28)], [A5.DRAPED_MATERIAL, (t28) => this.parameters.draped && u10(t28) || i6(t28)], [A5.DRAPED_WATER, (t28) => t28 === n10.Normal]]), this._configuration = new n31(e36.spherical, e36.doublePrecisionRequiresObfuscation);
  }
  getConfiguration(t27, e36) {
    return this._configuration.output = t27, this._configuration.writeDepth = true, this._configuration.receiveShadows = e36.shadowMap.enabled, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.transparent = this.parameters.transparent, this._configuration.screenSpaceReflections = null != e36.ssr.lastFrameColor, this._configuration.cloudReflections = null != e36.clouds.data, this._configuration.draped = this.parameters.draped, this._configuration.oitPass = e36.oitPass, this._configuration.enableOffset = e36.camera.relativeElevation < A6, this._configuration.terrainDepthTest = e36.terrainDepthTest && u10(t27), this._configuration.cullAboveTerrain = e36.cullAboveTerrain, this._configuration;
  }
  get visible() {
    return true;
  }
  update(e36) {
    return this.setParameters({ timeElapsed: u2(e36.time) * this.parameters.animationSpeed }, false), this._animationEnabled(e36.camera) && e36.dt > 0;
  }
  _animationEnabled(t27) {
    const e36 = Math.min(t27.relativeElevation, t27.distance);
    return Math.sqrt(this.parameters.waveTextureRepeat / this.parameters.waveStrength) * e36 < b18;
  }
  createGLMaterial(t27) {
    return new r24(t27);
  }
  createBufferWriter() {
    return new f12(e19() ? I4 : f16);
  }
  get test() {
  }
};
var v6 = class extends o12 {
  constructor() {
    super(...arguments), this.waveStrength = 0.06, this.waveTextureRepeat = 32, this.waveDirection = t6(1, 0), this.waveVelocity = 0.05, this.flowStrength = 0.015, this.flowOffset = -0.5, this.animationSpeed = 0.35, this.timeElapsed = 0, this.color = r5(0, 0, 0, 0), this.transparent = true, this.hasSlicePlane = false, this.draped = false, this.origin = n3(), this.modelTransformation = null;
  }
};
var b18 = 35e3;

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/waterMaterialUtils.js
var e35 = { "calm-small": { waveStrength: 5e-3, perturbationStrength: 0.02, textureRepeat: 12, waveVelocity: 0.01 }, "rippled-small": { waveStrength: 0.02, perturbationStrength: 0.09, textureRepeat: 32, waveVelocity: 0.07 }, "slight-small": { waveStrength: 0.05, perturbationStrength: 0.07, textureRepeat: 28, waveVelocity: 0.1 }, "moderate-small": { waveStrength: 0.075, perturbationStrength: 0.07, textureRepeat: 24, waveVelocity: 0.1 }, "calm-medium": { waveStrength: 3125e-6, perturbationStrength: 0.01, textureRepeat: 8, waveVelocity: 0.02 }, "rippled-medium": { waveStrength: 0.035, perturbationStrength: 0.015, textureRepeat: 12, waveVelocity: 0.07 }, "slight-medium": { waveStrength: 0.06, perturbationStrength: 0.015, textureRepeat: 8, waveVelocity: 0.12 }, "moderate-medium": { waveStrength: 0.09, perturbationStrength: 0.03, textureRepeat: 4, waveVelocity: 0.12 }, "calm-large": { waveStrength: 0.01, perturbationStrength: 0, textureRepeat: 4, waveVelocity: 0.05 }, "rippled-large": { waveStrength: 0.025, perturbationStrength: 0.01, textureRepeat: 8, waveVelocity: 0.11 }, "slight-large": { waveStrength: 0.06, perturbationStrength: 0.02, textureRepeat: 3, waveVelocity: 0.13 }, "moderate-large": { waveStrength: 0.14, perturbationStrength: 0.03, textureRepeat: 2, waveVelocity: 0.15 } };

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DWaterSymbolLayer.js
var I13 = ["polyline", "polygon", "extent"];
var B4 = class _B extends y4 {
  constructor(e36, t27, r25, o27) {
    super(e36, t27, r25, o27);
  }
  async doLoad() {
  }
  destroy() {
    super.destroy(), this._context.stage.remove(this._materials[0]), this._materials.length = 0;
  }
  createGraphics3DGraphic(e36) {
    const t27 = e36.graphic;
    if (!this._validateGeometry(t27.geometry, I13, this.symbolLayer.type)) return null;
    const r25 = this.setGraphicElevationContext(t27);
    return this.ensureDrapedStatus("on-the-ground" === r25.mode), this.ensureMaterial(), this.draped ? this._createAsOverlay(t27) : this._createAs3DShape(t27, r25, t27.uid);
  }
  ensureMaterial() {
    if (this._materials[0]) return;
    const t27 = new v6(), r25 = this.symbolLayer.color;
    null != r25 && (t27.color = h2.toUnitRGBA(r25));
    const o27 = this._getCombinedOpacity(r25, { hasIntrinsicColor: true });
    t27.color = [t27.color[0], t27.color[1], t27.color[2], o27], t27.transparent = o27 < 1 || this.needsDrivenTransparentPass, t27.waveDirection = null != this.symbolLayer.waveDirection ? U6(this.symbolLayer.waveDirection) : t6(0, 0);
    const n33 = this.symbolLayer.waveStrength + "-" + this.symbolLayer.waterbodySize, s27 = e35[n33];
    t27.waveStrength = s27.waveStrength, t27.waveTextureRepeat = s27.textureRepeat, t27.waveVelocity = s27.waveVelocity, t27.flowStrength = s27.perturbationStrength, t27.hasSlicePlane = this._context.slicePlaneEnabled, t27.draped = this.draped, this._materials[0] = new _11(t27, this._context), this._context.stage.add(this._materials[0]);
  }
  layerOpacityChanged() {
    if (null == this._materials[0]) return;
    const e36 = this._materials[0].parameters.color, t27 = this._getCombinedOpacity(this.symbolLayer.color, { hasIntrinsicColor: true }), r25 = t27 < 1 || this.needsDrivenTransparentPass;
    this._materials[0].setParameters({ color: [e36[0], e36[1], e36[2], t27], transparent: r25 });
  }
  layerElevationInfoChanged(e36, t27, r25) {
    const o27 = this._elevationContext.mode, i20 = m9(_B.elevationModeChangeTypes, r25, o27);
    if (i20 !== b7.UPDATE) return i20;
    const n33 = d7(o27);
    return this.updateGraphics3DGraphicElevationInfo(e36, t27, () => n33);
  }
  slicePlaneEnabledChanged() {
    var _a;
    return (_a = this._materials[0]) == null ? void 0 : _a.setParameters({ hasSlicePlane: this._context.slicePlaneEnabled }), true;
  }
  physicalBasedRenderingChanged() {
    return true;
  }
  _createAs3DShape(e36, t27, r25) {
    var _a;
    const o27 = b10(e36.geometry);
    if (null == o27) return null;
    const i20 = p20(o27, this._context.elevationProvider, this._context.renderCoordsHelper, t27), n33 = i20.position.length / 3, s27 = t2(2 * n33);
    M7(s27, i20.mapPositions, n33, this._context.elevationProvider.spatialReference);
    const a26 = new N9(i20, s27, this._context.layer.uid, e36.uid);
    if (a26.objectAndLayerIdColor = (_a = this._context.stage.renderView) == null ? void 0 : _a.getObjectAndLayerIdColor(a26), this._create3DShapeGeometries(a26), this._logGeometryCreationWarnings(a26.renderData, o27.rings, "rings", "WaterSymbol3DLayer"), 0 === a26.outGeometries.length) return null;
    const l31 = new A8({ geometries: a26.outGeometries, castShadow: false, layerUid: this._context.layer.uid, graphicUid: r25 }), c20 = new p16(this, l31, a26.outGeometries, null, null, u15, t27);
    return c20.alignedSampledElevation = a26.renderData.sampledElevation, c20.needsElevationUpdates = d7(t27.mode), c20;
  }
  _create3DShapeGeometries(e36) {
    const t27 = e36.renderData.polygons, o27 = e36.uvCoords;
    for (const { count: i20, index: n33, position: s27, mapPositions: a26, holeIndices: l31 } of t27) {
      if (null != this._context.clippingExtent && (m2(a26, k11), !A2(k11, this._context.clippingExtent))) continue;
      const t28 = e16(a26, l31, 3);
      if (0 === t28.length) continue;
      const m17 = a4(o27, 2 * n33, 2 * i20), u26 = m11({ material: this._materials[0], indices: t28, mapPositions: a26, attributeData: { position: s27, uv0: m17 } }, e36.objectAndLayerIdColor);
      e36.outGeometries.push(u26);
    }
  }
  _createAsOverlay(e36) {
    var _a;
    const t27 = b10(e36.geometry);
    if (null == t27) return null;
    this._materials[0].renderPriority = this._renderPriority;
    const r25 = c12(t27, this._context.overlaySR), o27 = r25.position.length / 3, i20 = t2(2 * o27);
    M7(i20, r25.position, o27, this._context.overlaySR);
    const n33 = new H8(r25, i20, this._context.layer.uid, e36.uid);
    return n33.objectAndLayerIdColor = (_a = this._context.stage.renderView) == null ? void 0 : _a.getObjectAndLayerIdColor(n33), n33.outBoundingBox = q(), this._createAsOverlayWater(n33), this._logGeometryCreationWarnings(n33.renderData, t27.rings, "rings", "WaterSymbol3DLayer"), 0 === n33.outGeometries.length ? null : new l22(this, n33.outGeometries, n33.outBoundingBox, this._context.drapeSourceRenderer);
  }
  _createAsOverlayWater(e36) {
    const t27 = e36.uvCoords, o27 = e36.renderData.polygons;
    for (const { position: i20, holeIndices: n33, index: s27, count: a26 } of o27) {
      if (m2(i20, k11), !A2(k11, this._context.clippingExtent)) continue;
      M(e36.outBoundingBox, k11);
      const o28 = e16(i20, n33, 3);
      if (0 === o28.length) continue;
      const l31 = a4(t27, 2 * s27, 2 * a26), m17 = m11({ material: this._materials[0], indices: o28, attributeData: { position: i20, uv0: l31 } }, e36.objectAndLayerIdColor);
      e36.outGeometries.push(new g7(m17, e36));
    }
  }
  test() {
    return { ...super.test(), create3DShape: (e36) => this._createAs3DShape(e36.graphic, e36.elevationContext, e36.graphicUid), ensureMaterial: () => this.ensureMaterial() };
  }
};
function U6(e36) {
  const t27 = n6(), r25 = u7(e36);
  return t27[0] = Math.sin(r25), t27[1] = Math.cos(r25), t27;
}
function M7(e36, r25, i20, n33) {
  const a26 = Q(n33);
  H(z4);
  for (let t27 = 0; t27 < i20; t27++) o5(V10, r25[3 * t27], r25[3 * t27 + 1]), f2(z4, V10);
  m3(z4, z4, a26);
  const l31 = z4[0] % B4.unitSizeOfTexture, c20 = z4[1] % B4.unitSizeOfTexture;
  W7[0] = z4[0] - l31, W7[1] = z4[1] - c20;
  for (let t27 = 0; t27 < i20; t27++) e36[2 * t27] = (r25[3 * t27] * a26 - W7[0]) / B4.unitSizeOfTexture, e36[2 * t27 + 1] = (r25[3 * t27 + 1] * a26 - W7[1]) / B4.unitSizeOfTexture;
}
B4.unitSizeOfTexture = 100, B4.elevationModeChangeTypes = { definedChanged: b7.RECREATE, staysOnTheGround: b7.NONE, onTheGroundChanged: b7.RECREATE };
var W7 = n6();
var z4 = u3();
var V10 = n6();
var k11 = u4();
var N9 = class extends g9 {
  constructor(e36, t27, r25, o27) {
    super(e36, r25, o27), this.uvCoords = t27;
  }
};
var H8 = class extends g9 {
  constructor(e36, t27, r25, o27) {
    super(e36, r25, o27), this.uvCoords = t27;
  }
};

// node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DSymbolLayerFactory.js
function c19(o27, e36, t27, i20) {
  var _a;
  const m17 = ((_a = h14[o27.type]) == null ? void 0 : _a[e36.type]) || l30[e36.type];
  return m17 ? new m17(o27, e36, t27, i20) : (n.getLogger("esri.views.3d.layers.graphics.Graphics3DSymbolLayerFactory").error("GraphicsLayerFactory#make", `unknown symbol type ${e36.type}`), null);
}
var l30 = { icon: le, object: me2, line: V6, path: re2, fill: N8, extrude: ot2, text: W6, water: B4 };
function n32(r25, o27) {
  l30[r25] = o27;
}
var h14 = { "mesh-3d": { fill: Ie } };
export {
  c19 as make,
  n32 as setSymbolClass
};
//# sourceMappingURL=Graphics3DSymbolLayerFactory-6I4XKVAC.js.map
