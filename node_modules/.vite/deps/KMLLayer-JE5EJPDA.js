import {
  S as S3,
  d as d2,
  g as g2,
  j as j2
} from "./chunk-ISFWMGUK.js";
import "./chunk-PHUXOQ5V.js";
import "./chunk-QAXPIBME.js";
import "./chunk-NUJWMWJZ.js";
import "./chunk-QAP2FVP7.js";
import "./chunk-6EREU4EG.js";
import "./chunk-5JWPKXQI.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-RP6IGXYU.js";
import "./chunk-MRPAGZVF.js";
import {
  j
} from "./chunk-K5B7AETB.js";
import "./chunk-5APVNM2E.js";
import {
  f as f2
} from "./chunk-73NNNHMH.js";
import {
  b
} from "./chunk-C6YDI6QX.js";
import {
  y
} from "./chunk-DJ5HVIE7.js";
import {
  S as S2
} from "./chunk-KPY4ZIC2.js";
import "./chunk-HGWPGAUL.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-HAYP5DZM.js";
import "./chunk-OMNXYZNG.js";
import "./chunk-GPMU6IW4.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import {
  n
} from "./chunk-FF3WJRKN.js";
import "./chunk-4GYBOMKF.js";
import "./chunk-RO66CZDO.js";
import "./chunk-KMVZXZBR.js";
import "./chunk-7HSZJLYU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-YQH3DXBZ.js";
import "./chunk-T52X5K2I.js";
import "./chunk-VE2K63DA.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import {
  p
} from "./chunk-SVWZAOD7.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import {
  t
} from "./chunk-MILRZFWI.js";
import "./chunk-RPPIM555.js";
import "./chunk-4FQDWSFN.js";
import "./chunk-JOQ2ZFQV.js";
import {
  f
} from "./chunk-3UBDE4PK.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import "./chunk-BLF64HON.js";
import "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import {
  m as m2
} from "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import {
  C,
  d,
  v,
  w as w2
} from "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import {
  V
} from "./chunk-BQYXRSVC.js";
import {
  i
} from "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import {
  w as w3
} from "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import {
  g
} from "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import {
  o
} from "./chunk-FSFEOCO5.js";
import {
  r as r2
} from "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import {
  qt
} from "./chunk-FX46DC27.js";
import {
  S
} from "./chunk-2FUEBHWI.js";
import {
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  a
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import {
  w
} from "./chunk-7LCEUMDD.js";
import {
  c
} from "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/layers/support/KMLSublayer.js
var j3;
var S4 = j3 = class extends i.EventedMixin(S.JSONSupportMixin(m2)) {
  constructor(...e) {
    super(...e), this.description = null, this.fullExtent = null, this.id = null, this.networkLink = null, this.parent = null, this.sublayers = null, this.title = null, this.sourceJSON = null, this.layer = null, this.addHandles([v(() => this.sublayers, "after-add", ({ item: e2 }) => {
      e2.parent = this, e2.layer = this.layer;
    }, C), v(() => this.sublayers, "after-remove", ({ item: e2 }) => {
      e2.layer = e2.parent = null;
    }, C), d(() => this.sublayers, (e2, t2) => {
      if (t2) for (const r3 of t2) r3.layer = r3.parent = null;
      if (e2) for (const r3 of e2) r3.parent = this, r3.layer = this.layer;
    }, C), d(() => this.layer, (e2) => {
      if (this.sublayers) for (const t2 of this.sublayers) t2.layer = e2;
    }, C)]);
  }
  initialize() {
    w2(() => this.networkLink).then(() => w2(() => true === this.visible)).then(() => this.load());
  }
  load(e) {
    var _a;
    if (!this.networkLink) return;
    if (this.networkLink.viewFormat) return;
    const r3 = null != e ? e.signal : null, s = this._fetchService(((_a = this._get("networkLink")) == null ? void 0 : _a.href) ?? "", r3).then((e2) => {
      var _a2;
      const r4 = j2(e2.sublayers);
      this.fullExtent = w3.fromJSON(r4), this.sourceJSON = e2;
      const s2 = w(V.ofType(j3), S3(j3, e2));
      this.sublayers ? this.sublayers.addMany(s2) : this.sublayers = s2, (_a2 = this.layer) == null ? void 0 : _a2.emit("sublayer-update"), this.layer && this.layer.notifyChange("visibleSublayers");
    });
    return this.addResolvingPromise(s), Promise.resolve(this);
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e) {
    this._get("visible") !== e && (this._set("visible", e), this.layer && this.layer.notifyChange("visibleSublayers"));
  }
  readVisible(e, t2) {
    return !!t2.visibility;
  }
  _fetchService(e, t2) {
    return g2(e, this.layer.outSpatialReference, this.layer.refreshInterval, t2).then((e2) => d2(e2.data));
  }
};
r([m()], S4.prototype, "description", void 0), r([m({ type: w3 })], S4.prototype, "fullExtent", void 0), r([m()], S4.prototype, "id", void 0), r([m({ readOnly: true, value: null })], S4.prototype, "networkLink", void 0), r([m({ json: { write: { allowNull: true } } })], S4.prototype, "parent", void 0), r([m({ type: V.ofType(S4), json: { write: { allowNull: true } } })], S4.prototype, "sublayers", void 0), r([m({ value: null, json: { read: { source: "name", reader: (e) => c(e) } } })], S4.prototype, "title", void 0), r([m({ value: true })], S4.prototype, "visible", null), r([o("visible", ["visibility"])], S4.prototype, "readVisible", null), r([m()], S4.prototype, "sourceJSON", void 0), r([m()], S4.prototype, "layer", void 0), S4 = j3 = r([a2("esri.layers.support.KMLSublayer")], S4);
var k = S4;

// node_modules/@arcgis/core/layers/KMLLayer.js
var w4 = ["kml", "xml"];
var F = class extends p(f2(t(b(j(S2(f)))))) {
  constructor(...e) {
    super(...e), this._visibleFolders = [], this.allSublayers = new n({ getCollections: () => [this.sublayers], getChildrenFunction: (e2) => e2.sublayers }), this.outSpatialReference = g.WGS84, this.path = null, this.legendEnabled = false, this.operationalLayerType = "KML", this.sublayers = null, this.type = "kml", this.url = null;
  }
  initialize() {
    this.addHandles([d(() => this.sublayers, (e, r3) => {
      r3 && r3.forEach((e2) => {
        e2.parent = null, e2.layer = null;
      }), e && e.forEach((e2) => {
        e2.parent = this, e2.layer = this;
      });
    }, C), this.on("sublayer-update", () => this.notifyChange("fullExtent"))]);
  }
  normalizeCtorArgs(e, r3) {
    return "string" == typeof e ? { url: e, ...r3 } : e;
  }
  readSublayersFromItemOrWebMap(e, r3) {
    this._visibleFolders = r3.visibleFolders;
  }
  readSublayers(e, r3, t2) {
    return S3(k, r3, t2, this._visibleFolders);
  }
  writeSublayers(e, r3) {
    const t2 = [], o2 = e.toArray();
    for (; o2.length; ) {
      const e2 = o2[0];
      e2.networkLink || (e2.visible && t2.push(e2.id), e2.sublayers && o2.push(...e2.sublayers.toArray())), o2.shift();
    }
    r3.visibleFolders = t2;
  }
  get title() {
    const e = this._get("title");
    return e && "defaults" !== this.originOf("title") ? e : this.url ? qt(this.url, w4) || "KML" : e;
  }
  set title(e) {
    this._set("title", e);
  }
  get visibleSublayers() {
    const e = this.sublayers, r3 = [], t2 = (e2) => {
      e2.visible && (r3.push(e2), e2.sublayers && e2.sublayers.forEach(t2));
    };
    return e && e.forEach(t2), r3;
  }
  get fullExtent() {
    return this._recomputeFullExtent();
  }
  load(e) {
    const r3 = null != e ? e.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["KML"], supportsData: false }, e).catch(a).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  destroy() {
    super.destroy(), this.allSublayers.destroy();
  }
  async _fetchService(e) {
    const r3 = await Promise.resolve().then(() => this.resourceInfo ? { ssl: false, data: this.resourceInfo } : g2(this.url ?? "", this.outSpatialReference, this.refreshInterval, e)), t2 = d2(r3.data);
    this.read(t2, { origin: "service" });
  }
  _recomputeFullExtent() {
    let e = null;
    null != this.extent && (e = this.extent.clone());
    const r3 = (t2) => {
      if (t2.sublayers) for (const o2 of t2.sublayers.items) r3(o2), o2.visible && o2.fullExtent && (null != e ? e.union(o2.fullExtent) : e = o2.fullExtent.clone());
    };
    return r3(this), e;
  }
};
r([m({ readOnly: true })], F.prototype, "allSublayers", void 0), r([m({ type: g })], F.prototype, "outSpatialReference", void 0), r([m({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], F.prototype, "path", void 0), r([m({ readOnly: true, json: { read: false, write: false } })], F.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide", "hide-children"] })], F.prototype, "listMode", void 0), r([m({ type: ["KML"] })], F.prototype, "operationalLayerType", void 0), r([m({})], F.prototype, "resourceInfo", void 0), r([m({ type: V.ofType(k), json: { write: { ignoreOrigin: true } } })], F.prototype, "sublayers", void 0), r([o(["web-map", "portal-item"], "sublayers", ["visibleFolders"])], F.prototype, "readSublayersFromItemOrWebMap", null), r([o("service", "sublayers", ["sublayers"])], F.prototype, "readSublayers", null), r([r2("sublayers")], F.prototype, "writeSublayers", null), r([m({ readOnly: true, json: { read: false } })], F.prototype, "type", void 0), r([m({ json: { origins: { "web-map": { read: { source: "title" } } }, write: { ignoreOrigin: true } } })], F.prototype, "title", null), r([m(y)], F.prototype, "url", void 0), r([m({ readOnly: true })], F.prototype, "visibleSublayers", null), r([m({ type: w3 })], F.prototype, "extent", void 0), r([m()], F.prototype, "fullExtent", null), F = r([a2("esri.layers.KMLLayer")], F);
var O = F;
export {
  O as default
};
//# sourceMappingURL=KMLLayer-JE5EJPDA.js.map
