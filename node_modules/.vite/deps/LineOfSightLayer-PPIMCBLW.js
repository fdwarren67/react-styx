import {
  b as b2,
  c as c3
} from "./chunk-U5P7BTEH.js";
import {
  v
} from "./chunk-SGYJ7J7R.js";
import "./chunk-FDGPK3YS.js";
import {
  i
} from "./chunk-LULXSZFE.js";
import {
  c as c2
} from "./chunk-JLSSMIEO.js";
import "./chunk-R6B3KWCZ.js";
import "./chunk-3Y2XWHXG.js";
import "./chunk-QQGGEN5E.js";
import "./chunk-QEAQVAMR.js";
import "./chunk-I7JIAECC.js";
import "./chunk-ZXD5CGBL.js";
import "./chunk-F64YCQYI.js";
import "./chunk-3L7KPDW7.js";
import "./chunk-HHSHKUKB.js";
import "./chunk-OBRCQKKM.js";
import "./chunk-SXBN3QCZ.js";
import "./chunk-T7CHWWE2.js";
import "./chunk-FWVSIQMR.js";
import "./chunk-ON7GWFUW.js";
import "./chunk-BSQH3I7W.js";
import {
  b
} from "./chunk-C6YDI6QX.js";
import "./chunk-DJ5HVIE7.js";
import {
  S as S2
} from "./chunk-KPY4ZIC2.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import {
  X
} from "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-BBPRJCMB.js";
import "./chunk-RPPIM555.js";
import {
  h
} from "./chunk-4FQDWSFN.js";
import "./chunk-JOQ2ZFQV.js";
import {
  f
} from "./chunk-3UBDE4PK.js";
import "./chunk-LILYILCM.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import {
  a2 as a3,
  c,
  l
} from "./chunk-KSQSVLSQ.js";
import {
  a as a2
} from "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import {
  n,
  t
} from "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import {
  A,
  d
} from "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import {
  V
} from "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import {
  j2 as j
} from "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import {
  S
} from "./chunk-2FUEBHWI.js";
import {
  g,
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  o
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisObserver.js
var f2 = class extends S.JSONSupportMixin(a2.ClonableMixin(g)) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return o(this.position, o2.position) && o(this.elevationInfo, o2.elevationInfo) && c3(this.feature, o2.feature);
  }
};
r([m({ type: j, json: { write: { isRequired: true } } })], f2.prototype, "position", void 0), r([m({ type: h }), v()], f2.prototype, "elevationInfo", void 0), r([m(b2)], f2.prototype, "feature", void 0), f2 = r([a("esri.analysis.LineOfSightAnalysisObserver")], f2);
var u = f2;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisTarget.js
var l2 = class extends S.JSONSupportMixin(a2) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return o(this.position, o2.position) && o(this.elevationInfo, o2.elevationInfo) && c3(this.feature, o2.feature);
  }
};
r([m({ type: j, json: { write: true, origins: { "web-scene": { write: { isRequired: true } } } } }), v()], l2.prototype, "position", void 0), r([m({ type: h }), v()], l2.prototype, "elevationInfo", void 0), r([m(b2)], l2.prototype, "feature", void 0), l2 = r([a("esri.analysis.LineOfSightAnalysisTarget")], l2);
var f3 = l2;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysis.js
var y = V.ofType(f3);
var d2 = class extends c2 {
  constructor(t2) {
    super(t2), this.type = "line-of-sight", this.observer = null, this.extent = null;
  }
  initialize() {
    this.addHandles(d(() => this._computeExtent(), (t2) => {
      null == (t2 == null ? void 0 : t2.pending) && this._set("extent", null != t2 ? t2.extent : null);
    }, A));
  }
  get targets() {
    return this._get("targets") || new y();
  }
  set targets(t2) {
    this._set("targets", n(t2, this.targets, y));
  }
  get spatialReference() {
    var _a;
    return null != ((_a = this.observer) == null ? void 0 : _a.position) ? this.observer.position.spatialReference : null;
  }
  get requiredPropertiesForEditing() {
    var _a;
    return [(_a = this.observer) == null ? void 0 : _a.position];
  }
  async waitComputeExtent() {
    const t2 = this._computeExtent();
    return null != t2 ? t2.pending : Promise.resolve();
  }
  _computeExtent() {
    var _a;
    const t2 = this.spatialReference;
    if (null == ((_a = this.observer) == null ? void 0 : _a.position) || null == t2) return null;
    const e = (t3) => "absolute-height" === i(t3.position, t3.elevationInfo), o2 = this.observer.position, r2 = a3(o2.x, o2.y, o2.z, o2.x, o2.y, o2.z);
    for (const i2 of this.targets) if (null != i2.position) {
      const e2 = X(i2.position, t2);
      if (null != e2.pending) return { pending: e2.pending, extent: null };
      if (null != e2.geometry) {
        const { x: t3, y: o3, z: s2 } = e2.geometry;
        l(r2, [t3, o3, s2]);
      }
    }
    const s = c(r2, t2);
    return e(this.observer) && this.targets.every(e) || (s.zmin = void 0, s.zmax = void 0), { pending: null, extent: s };
  }
  clear() {
    this.observer = null, this.targets.removeAll();
  }
};
r([m({ type: ["line-of-sight"] })], d2.prototype, "type", void 0), r([m({ type: u, json: { read: true, write: true } })], d2.prototype, "observer", void 0), r([m({ cast: t, type: y, nonNullable: true, json: { read: true, write: true } })], d2.prototype, "targets", null), r([m({ value: null, readOnly: true })], d2.prototype, "extent", void 0), r([m({ readOnly: true })], d2.prototype, "spatialReference", null), r([m({ readOnly: true })], d2.prototype, "requiredPropertiesForEditing", null), d2 = r([a("esri.analysis.LineOfSightAnalysis")], d2);
var v2 = d2;

// node_modules/@arcgis/core/layers/LineOfSightLayer.js
var u2 = V.ofType(f3);
var d3 = class extends b(S2(f)) {
  constructor(e) {
    super(e), this.type = "line-of-sight", this.operationalLayerType = "LineOfSightLayer", this.analysis = new v2(), this.opacity = 1;
  }
  initialize() {
    this.addHandles(d(() => this.analysis, (e, t2) => {
      null != t2 && t2.parent === this && (t2.parent = null), null != e && (e.parent = this);
    }, A));
  }
  async load() {
    return null != this.analysis && this.addResolvingPromise(this.analysis.waitComputeExtent()), this;
  }
  get observer() {
    var _a;
    return (_a = this.analysis) == null ? void 0 : _a.observer;
  }
  set observer(e) {
    const { analysis: t2 } = this;
    t2 && (t2.observer = e);
  }
  get targets() {
    return null != this.analysis ? this.analysis.targets : new V();
  }
  set targets(e) {
    var _a;
    n(e, (_a = this.analysis) == null ? void 0 : _a.targets);
  }
  get fullExtent() {
    return null != this.analysis ? this.analysis.extent : null;
  }
  get spatialReference() {
    return null != this.analysis ? this.analysis.spatialReference : null;
  }
  releaseAnalysis(e) {
    this.analysis === e && (this.analysis = new v2());
  }
};
r([m({ json: { read: false }, readOnly: true })], d3.prototype, "type", void 0), r([m({ type: ["LineOfSightLayer"] })], d3.prototype, "operationalLayerType", void 0), r([m({ type: u, json: { read: true, write: { isRequired: true, ignoreOrigin: true } } })], d3.prototype, "observer", null), r([m({ type: u2, json: { read: true, write: { ignoreOrigin: true, isRequired: true } } })], d3.prototype, "targets", null), r([m({ type: v2, nonNullable: true, json: { read: false, write: false } })], d3.prototype, "analysis", void 0), r([m({ readOnly: true })], d3.prototype, "fullExtent", null), r([m({ readOnly: true })], d3.prototype, "spatialReference", null), r([m({ readOnly: true, json: { read: false, write: false, origins: { service: { read: false, write: false }, "portal-item": { read: false, write: false }, "web-document": { read: false, write: false } } } })], d3.prototype, "opacity", void 0), r([m({ type: ["show", "hide"] })], d3.prototype, "listMode", void 0), d3 = r([a("esri.layers.LineOfSightLayer")], d3);
var m2 = d3;
export {
  m2 as default
};
//# sourceMappingURL=LineOfSightLayer-PPIMCBLW.js.map
