import {
  S as S2
} from "./chunk-S7ZYQ7Z4.js";
import {
  r as r2
} from "./chunk-4NUJE7UV.js";
import {
  h
} from "./chunk-MU7JKUDJ.js";
import "./chunk-SHJSYZ5S.js";
import {
  A
} from "./chunk-JKNB3ZUJ.js";
import {
  i as i2
} from "./chunk-TYPEWHVW.js";
import "./chunk-7BISKPXG.js";
import "./chunk-IVUWXWSD.js";
import "./chunk-4YDWJUBU.js";
import {
  _
} from "./chunk-E7MXPG2R.js";
import {
  r as r3
} from "./chunk-YABYS5KB.js";
import "./chunk-7WOCIDMW.js";
import {
  i
} from "./chunk-YISRE3T5.js";
import "./chunk-7M6HCFVM.js";
import "./chunk-DTPSE2SE.js";
import {
  S
} from "./chunk-6ODLL4CO.js";
import {
  y as y2
} from "./chunk-ZMZA5FVA.js";
import "./chunk-IZJLQDI2.js";
import "./chunk-GGSQ5AVK.js";
import "./chunk-AWVDCINM.js";
import {
  y
} from "./chunk-KTOV24GA.js";
import "./chunk-M44TFGCQ.js";
import "./chunk-TMXFIMYK.js";
import "./chunk-IVPVPFYU.js";
import "./chunk-QT7O73SQ.js";
import "./chunk-R4CRYRS5.js";
import "./chunk-NJX7X3PO.js";
import "./chunk-CXHZI2CJ.js";
import "./chunk-MAX4GY2G.js";
import "./chunk-BUZ7I3MJ.js";
import "./chunk-J2QYVOHP.js";
import "./chunk-NBFYN6KG.js";
import "./chunk-23WGP47N.js";
import "./chunk-PXIP6WLU.js";
import "./chunk-V4U366R3.js";
import "./chunk-V7SQVFRS.js";
import "./chunk-KFLWTVQX.js";
import "./chunk-BXTQHJJG.js";
import "./chunk-T5R43RTD.js";
import "./chunk-7NXOMMLC.js";
import "./chunk-F6YRPEY7.js";
import "./chunk-CCPDXL7V.js";
import "./chunk-2TACZL27.js";
import "./chunk-PKIZUJIH.js";
import "./chunk-LL7BB425.js";
import "./chunk-CUWQEJ5X.js";
import "./chunk-B7S3HUFO.js";
import "./chunk-6VF5U3IZ.js";
import "./chunk-E7IFPXEX.js";
import "./chunk-OK5AUMBT.js";
import "./chunk-R2ZUOHHV.js";
import "./chunk-OBVDE24U.js";
import "./chunk-OBRCQKKM.js";
import "./chunk-5RGDMZ2O.js";
import "./chunk-SNZZPKBU.js";
import "./chunk-6PQMUQJV.js";
import "./chunk-JDUGBJ57.js";
import "./chunk-3HA4XA2C.js";
import "./chunk-H2OC77GP.js";
import "./chunk-RDHJUEBL.js";
import "./chunk-DGDYI2GQ.js";
import "./chunk-D7L2BYRU.js";
import "./chunk-LMQPVKGX.js";
import "./chunk-NINPG5JV.js";
import "./chunk-32RP26YL.js";
import "./chunk-PJIFP7OJ.js";
import "./chunk-NPEU24W6.js";
import "./chunk-I75Q3UU4.js";
import {
  u2 as u
} from "./chunk-TOU5KPOG.js";
import "./chunk-AU4QUDF3.js";
import {
  c
} from "./chunk-5BSH2ZN2.js";
import "./chunk-HQ2GCCLQ.js";
import "./chunk-6ZLHM6GW.js";
import "./chunk-PXBFVQ6M.js";
import "./chunk-TYJV2BHR.js";
import "./chunk-I6H2R562.js";
import "./chunk-WMLTK6KE.js";
import "./chunk-SURICA27.js";
import "./chunk-PBHST2SF.js";
import "./chunk-PONPGREB.js";
import "./chunk-QNYMCEB7.js";
import "./chunk-T7CHWWE2.js";
import "./chunk-FWVSIQMR.js";
import "./chunk-4ACM2XXN.js";
import "./chunk-ON7GWFUW.js";
import "./chunk-VPRLLNNO.js";
import "./chunk-VT63JL2L.js";
import "./chunk-WJNJ43ZU.js";
import "./chunk-MIW7M4LL.js";
import "./chunk-6W3XFTHW.js";
import "./chunk-ZPDG5M3T.js";
import "./chunk-Q44EAKHA.js";
import "./chunk-4HTLBMKF.js";
import "./chunk-YUQ6PSJ2.js";
import "./chunk-SB6LU3VH.js";
import "./chunk-TKEIF3N7.js";
import "./chunk-ZDLUQDDX.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-MRPAGZVF.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-GPMU6IW4.js";
import "./chunk-4JVIG75S.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-L2AVI4MN.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-7VGCZZPH.js";
import "./chunk-ACBQ6NOA.js";
import "./chunk-T52X5K2I.js";
import "./chunk-5E5JYM5A.js";
import {
  c as c2
} from "./chunk-I6AFDEJM.js";
import "./chunk-C33DSFWF.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import "./chunk-BLF64HON.js";
import "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import {
  d
} from "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import {
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  b,
  e2 as e
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import {
  n2 as n
} from "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var i3 = (i4) => {
  let p = class extends i4 {
    initialize() {
      this.exportImageParameters = new y({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get floors() {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.floors) ?? null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), this.commitProperty("floors"), (this._get("exportImageVersion") || 0) + 1;
    }
    get timeExtent() {
      var _a;
      return i2(this.layer, (_a = this.view) == null ? void 0 : _a.timeExtent, this._get("timeExtent"));
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
  };
  return r([m()], p.prototype, "exportImageParameters", void 0), r([m({ readOnly: true })], p.prototype, "floors", null), r([m({ readOnly: true })], p.prototype, "exportImageVersion", null), r([m()], p.prototype, "layer", void 0), r([m()], p.prototype, "suspended", void 0), r([m({ readOnly: true })], p.prototype, "timeExtent", null), p = r([a("esri.views.layers.MapImageLayerView")], p), p;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var w = class extends i3(i(S(y2))) {
  constructor() {
    super(...arguments), this._highlightGraphics = new c2(), this._updateHash = "";
  }
  fetchPopupFeaturesAtLocation(t, i4) {
    return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t, i4);
  }
  update(t) {
    const i4 = `${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;
    this._updateHash !== i4 && (this._updateHash = i4, this.strategy.update(t).catch((t2) => {
      b(t2) || n.getLogger(this).error(t2);
    }), t.stationary && this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)), this._highlightView.processUpdate(t);
  }
  attach() {
    const { imageMaxWidth: t, imageMaxHeight: i4, version: e2 } = this.layer, r4 = e2 >= 10.3, h2 = e2 >= 10;
    this._bitmapContainer = new r3(), this.container.addChild(this._bitmapContainer), this._highlightView = new A({ view: this.view, graphics: this._highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new h(this.view.featuresTilingScheme), defaultPointSymbolEnabled: false }), this.container.addChild(this._highlightView.container), this._popupHighlightHelper = new S2({ createFetchPopupFeaturesQueryGeometry: (t2, i5) => r2(t2, i5, this.view), highlightGraphics: this._highlightGraphics, highlightGraphicUpdated: (t2, i5) => {
      this._highlightView.graphicUpdateHandler({ graphic: t2, property: i5 });
    }, layerView: this, updatingHandles: this._updatingHandles }), this.strategy = new _({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: t, imageMaxHeight: i4, imageRotationSupported: r4, imageNormalizationSupported: h2, hidpi: true }), this.addAttachHandles(d(() => this.exportImageVersion, () => this.requestUpdate())), this.requestUpdate();
  }
  detach() {
    this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy(), this._popupHighlightHelper.destroy();
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  supportsSpatialReference(t) {
    return this.layer.serviceSupportsSpatialReference(t);
  }
  async doRefresh() {
    this._updateHash = "", this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  fetchImage(t, i4, e2, r4) {
    return this.layer.fetchImage(t, i4, e2, { timeExtent: this.timeExtent, floors: this.floors, ...r4 });
  }
  fetchImageBitmap(t, i4, e2, r4) {
    return this.layer.fetchImageBitmap(t, i4, e2, { timeExtent: this.timeExtent, floors: this.floors, ...r4 });
  }
  highlight(t, e2) {
    const r4 = u(t);
    if (0 === r4.length) return e();
    const s = (e2 == null ? void 0 : e2.name) ?? c;
    return this._addHighlightGraphics(r4, s), e(() => !this.destroyed && this._removeHighlightGraphics(r4, s));
  }
  _processHighlight() {
    var _a;
    const t = this._getHighlights();
    (_a = this._highlightView) == null ? void 0 : _a.setHighlight(t);
  }
  _addHighlightGraphics(t, i4) {
    this._highlightGraphics.addMany(t), this._addHighlights(t.map((t2) => t2.uid), i4);
  }
  _removeHighlightGraphics(t, i4) {
    this._highlightGraphics.removeMany(t), this._removeHighlights(t.map((t2) => t2.uid), i4);
  }
};
r([m()], w.prototype, "strategy", void 0), r([m()], w.prototype, "updating", void 0), w = r([a("esri.views.2d.layers.MapImageLayerView2D")], w);
var j = w;
export {
  j as default
};
//# sourceMappingURL=MapImageLayerView2D-RFELY5NM.js.map
