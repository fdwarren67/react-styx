import {
  t as t2
} from "./chunk-L4C25LTQ.js";
import "./chunk-YVHC4T23.js";
import "./chunk-MAMI2IDV.js";
import "./chunk-RRO6KNFV.js";
import {
  ce,
  e as e3,
  e2 as e5,
  e3 as e6,
  i as i3,
  j as j3,
  n as n4,
  t
} from "./chunk-HZJWHOXZ.js";
import "./chunk-TOKEYLZA.js";
import "./chunk-EIS6L6FC.js";
import "./chunk-FHPPD5YQ.js";
import "./chunk-775A6HBK.js";
import "./chunk-A4FY6ZIM.js";
import "./chunk-QNKRKPPS.js";
import "./chunk-6ZDD4C2B.js";
import {
  D,
  J,
  g2 as g4
} from "./chunk-GHPQVNNU.js";
import "./chunk-VBE5VFL5.js";
import "./chunk-N7FB6BVA.js";
import "./chunk-6WGXL2U7.js";
import "./chunk-FJBOCRBW.js";
import "./chunk-FUOL4OGM.js";
import "./chunk-EV3C7SZT.js";
import "./chunk-QOICITBE.js";
import {
  n as n3
} from "./chunk-MAX4GY2G.js";
import "./chunk-23WGP47N.js";
import "./chunk-EKEKHPBG.js";
import "./chunk-36CN7JP2.js";
import "./chunk-WX3BOMD3.js";
import "./chunk-TSFKACKN.js";
import "./chunk-W5QWJI4E.js";
import "./chunk-JDUGBJ57.js";
import "./chunk-3HA4XA2C.js";
import "./chunk-H2OC77GP.js";
import "./chunk-RDHJUEBL.js";
import "./chunk-BG4U4RTY.js";
import "./chunk-NINPG5JV.js";
import {
  t as t3
} from "./chunk-3MAZRA53.js";
import "./chunk-ERG5QAIR.js";
import "./chunk-NGATSB6R.js";
import {
  e as e4
} from "./chunk-ZKYO2ICX.js";
import "./chunk-XOXXDYBM.js";
import "./chunk-TYJV2BHR.js";
import "./chunk-I6H2R562.js";
import "./chunk-VT63JL2L.js";
import "./chunk-WJNJ43ZU.js";
import "./chunk-MIW7M4LL.js";
import "./chunk-6W3XFTHW.js";
import "./chunk-4LJ2OSKC.js";
import {
  O,
  c as c2,
  e as e2
} from "./chunk-FLGJHA67.js";
import {
  i2,
  n2
} from "./chunk-FJTIPVNU.js";
import {
  T,
  g as g2
} from "./chunk-SXKP4T6J.js";
import "./chunk-YUQ6PSJ2.js";
import "./chunk-B7E2AREE.js";
import "./chunk-MALSDV7D.js";
import "./chunk-HPA5LQSZ.js";
import "./chunk-3SU7BOQG.js";
import "./chunk-JED5CITL.js";
import "./chunk-TRBU6WLM.js";
import "./chunk-XBF3Q5CM.js";
import "./chunk-BSQH3I7W.js";
import "./chunk-PHUXOQ5V.js";
import "./chunk-7LZ547RY.js";
import "./chunk-3XDQGJHT.js";
import "./chunk-BMOULVP4.js";
import "./chunk-LVHCS2TZ.js";
import "./chunk-YSZGPB5I.js";
import "./chunk-5GYWQFHA.js";
import "./chunk-MR2DYNTG.js";
import "./chunk-65Z5LAMC.js";
import "./chunk-IFZYBBFM.js";
import "./chunk-WYOFTVUU.js";
import "./chunk-S4AV6MOI.js";
import "./chunk-QOBHQZYU.js";
import "./chunk-CKW4LZG2.js";
import "./chunk-VYOLHG4T.js";
import "./chunk-TKEIF3N7.js";
import "./chunk-RMOE6XHW.js";
import "./chunk-QAXPIBME.js";
import "./chunk-ISRSQJQR.js";
import "./chunk-WOB72RZU.js";
import "./chunk-HKTC3ZVY.js";
import "./chunk-MQ3WYGQ2.js";
import "./chunk-S4QLDBOB.js";
import "./chunk-RTA3XNM7.js";
import "./chunk-NUJWMWJZ.js";
import "./chunk-5ZCYRESW.js";
import "./chunk-XZDT5RTS.js";
import "./chunk-QAP2FVP7.js";
import "./chunk-6EREU4EG.js";
import "./chunk-7DHQ2VMC.js";
import "./chunk-Z5UGTZ3C.js";
import "./chunk-ZXHHBJMH.js";
import "./chunk-5JWPKXQI.js";
import "./chunk-4GBYHIKO.js";
import "./chunk-ZDLUQDDX.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-RP6IGXYU.js";
import "./chunk-5T3XQRJL.js";
import "./chunk-MRPAGZVF.js";
import "./chunk-VIBOZNXV.js";
import "./chunk-NBXBK3QW.js";
import "./chunk-K5B7AETB.js";
import "./chunk-KLCKQJVO.js";
import "./chunk-5APVNM2E.js";
import "./chunk-73NNNHMH.js";
import "./chunk-C6YDI6QX.js";
import "./chunk-DJ5HVIE7.js";
import "./chunk-KPY4ZIC2.js";
import "./chunk-HGWPGAUL.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-HAYP5DZM.js";
import "./chunk-OMNXYZNG.js";
import "./chunk-WO43UGNC.js";
import "./chunk-GPMU6IW4.js";
import "./chunk-LTFI343D.js";
import "./chunk-FVMWI3UB.js";
import "./chunk-4JVIG75S.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-L2AVI4MN.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import {
  O as O2,
  Q,
  X
} from "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-BBPRJCMB.js";
import "./chunk-7VGCZZPH.js";
import "./chunk-GNZ342SJ.js";
import "./chunk-EO3ETQWH.js";
import "./chunk-4GYBOMKF.js";
import {
  s as s2
} from "./chunk-PMTDIWAP.js";
import {
  l
} from "./chunk-ACBQ6NOA.js";
import "./chunk-QW7P5D76.js";
import "./chunk-RO66CZDO.js";
import "./chunk-KMVZXZBR.js";
import "./chunk-7HSZJLYU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-YQH3DXBZ.js";
import "./chunk-T52X5K2I.js";
import "./chunk-VE2K63DA.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import "./chunk-SVWZAOD7.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import "./chunk-MILRZFWI.js";
import "./chunk-RPPIM555.js";
import "./chunk-4FQDWSFN.js";
import "./chunk-JOQ2ZFQV.js";
import "./chunk-3UBDE4PK.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import {
  b as b2
} from "./chunk-BLF64HON.js";
import {
  a as a2,
  c3,
  p2
} from "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import {
  e
} from "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import {
  o
} from "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import {
  C,
  P,
  d as d2,
  p,
  v,
  w
} from "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import {
  V
} from "./chunk-BQYXRSVC.js";
import {
  i
} from "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import {
  S
} from "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import {
  j,
  j2
} from "./chunk-IVS2JCO6.js";
import {
  g as g3
} from "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import {
  g,
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a
} from "./chunk-BM4B3CH5.js";
import {
  R
} from "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  A,
  b,
  d,
  f2 as f,
  k
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import {
  s
} from "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import {
  c,
  n2 as n
} from "./chunk-6II7WQ2F.js";
import {
  G
} from "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/geometry/support/geometryUtils.js
function n5(e13) {
  var _a;
  switch (e13 == null ? void 0 : e13.type) {
    case "point":
      return e13;
    case "extent":
      return e13.center;
    case "polygon":
      return e13.centroid;
    case "multipoint":
    case "polyline":
      return (_a = e13.extent) == null ? void 0 : _a.center;
    default:
      return null;
  }
}

// node_modules/@arcgis/core/support/actions/actionUtils.js
function n6(i6) {
  return i6 ? { backgroundImage: `url(${i6})` } : {};
}
function e7({ action: t8, feature: n9 }) {
  const e13 = n9 == null ? void 0 : n9.attributes, o4 = "image" in t8 ? t8.image : void 0;
  return o4 && e13 ? s2(o4, e13) : o4 ?? "";
}

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var c4 = class extends i.EventedAccessor {
  constructor(e13) {
    super(e13), this.location = null, this.screenLocationEnabled = false, this.view = null, this.addHandles([p(() => {
      const e14 = this.screenLocationEnabled ? this.view : null;
      return e14 ? [e14.size, "3d" === e14.type ? e14.camera : e14.viewpoint] : null;
    }, () => this.notifyChange("screenLocation")), d2(() => this.screenLocation, (e14, o4) => {
      null != e14 && null != o4 && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null;
  }
  get screenLocation() {
    const { location: e13, view: o4, screenLocationEnabled: t8 } = this, r3 = o4 == null ? void 0 : o4.spatialReference, s4 = r3 ? X(e13, r3).geometry : null;
    return t8 && s4 && (o4 == null ? void 0 : o4.ready) ? o4.toScreen(s4) : null;
  }
};
r([m()], c4.prototype, "location", void 0), r([m()], c4.prototype, "screenLocation", null), r([m()], c4.prototype, "screenLocationEnabled", void 0), r([m()], c4.prototype, "view", void 0), c4 = r([a("esri.widgets.support.AnchorElementViewModel")], c4);
var l2 = c4;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t4 = class extends l2 {
  constructor(o4) {
    super(o4), this.visible = false;
  }
};
r([m()], t4.prototype, "visible", void 0), t4 = r([a("esri.widgets.Spinner.SpinnerViewModel")], t4);
var p3 = t4;

// node_modules/@arcgis/core/widgets/Spinner.js
var a3 = "esri-spinner";
var c5 = { base: a3, spinnerStart: `${a3}--start`, spinnerFinish: `${a3}--finish` };
var p4 = class extends O {
  constructor(i6, e13) {
    super(i6, e13), this._animationDelay = 500, this._animationPromise = null, this.viewModel = new p3();
  }
  initialize() {
    this.addHandles(d2(() => this.visible, (i6) => this._visibleChange(i6)));
  }
  destroy() {
    this._animationPromise = null;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(i6) {
    this.viewModel.location = i6;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(i6) {
    this.viewModel.view = i6;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(i6) {
    this.viewModel.visible = i6;
  }
  show(i6) {
    const { location: e13, promise: t8 } = i6 ?? {};
    e13 && (this.viewModel.location = e13), this.visible = true;
    const s4 = () => this.hide();
    t8 && t8.catch(() => {
    }).then(s4);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i6 } = this, { screenLocation: e13 } = this.viewModel, t8 = !!e13, s4 = i6 && t8, o4 = !i6 && t8, r3 = { [c5.spinnerStart]: s4, [c5.spinnerFinish]: o4 }, n9 = this._getPositionStyles();
    return n2("div", { class: this.classes(c5.base, r3), styles: n9 });
  }
  _visibleChange(i6) {
    if (i6) return void (this.viewModel.screenLocationEnabled = true);
    const t8 = A(this._animationDelay);
    this._animationPromise = t8, t8.catch(() => {
    }).then(() => {
      this._animationPromise === t8 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i6, view: e13 } = this.viewModel;
    if (null == e13 || null == i6) return {};
    const { padding: t8 } = e13;
    return { left: i6.x - t8.left + "px", top: i6.y - t8.top + "px" };
  }
};
r([m()], p4.prototype, "location", null), r([m()], p4.prototype, "view", null), r([m({ type: p3 })], p4.prototype, "viewModel", void 0), r([m()], p4.prototype, "visible", null), p4 = r([a("esri.widgets.Spinner")], p4);
var h = p4;

// node_modules/@arcgis/core/widgets/Features/css.js
var e8 = "esri-features";
var n7 = { icon: `${e8}__icon`, actionImage: `${e8}__action-image`, base: e8, container: `${e8}__container`, contentContainer: `${e8}__content-container`, contentFeature: `${e8}__content-feature`, flowItemCollapsed: `${e8}__flow-item--collapsed`, header: `${e8}__header`, footer: `${e8}__footer`, featureMenuObserver: `${e8}__feature-menu-observer`, actionExit: `${e8}__action--exit`, loader: `${e8}__loader`, featuresHeading: `${e8}__heading`, paginationText: `${e8}__pagination-text`, paginationActionBar: `${e8}__pagination-action-bar`, paginationMenuButton: `${e8}__pagination-menu-button`, paginationPrevious: `${e8}__pagination-previous`, paginationNext: `${e8}__pagination-next` };

// node_modules/@arcgis/core/widgets/Popup/actions.js
var i4 = V.ofType({ key: "type", defaultKeyValue: "button", base: p2, typeMap: { button: c3, toggle: a2 } });
var n8 = new c3({ icon: "magnifying-glass-plus", id: "zoom-to-feature", title: "{messages.zoom}", className: i3.zoomInMagnifyingGlass });
var r2 = new c3({ icon: "trash", id: "remove-selected-feature", title: "{messages.remove}", className: i3.trash });
var l3 = new c3({ icon: "magnifying-glass-plus", id: "zoom-to-clustered-features", title: "{messages.zoom}", className: i3.zoomInMagnifyingGlass });
var m2 = new a2({ icon: "table", id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: i3.table, value: false });

// node_modules/@arcgis/core/widgets/Features/FeaturesDrillIn.js
var m3 = n8.clone();
var u = class extends O {
  constructor(e13, t8) {
    super(e13, t8), this.messages = null, this.closed = false, this.closable = true, this._handleOpenFeature = (e14) => {
      this.emit("open-feature", { feature: e14 });
    }, this._handleZoomToFeature = (e14) => {
      this.emit("zoom-to-feature", { featureWidget: e14 });
    };
  }
  loadDependencies() {
    return c2({ action: () => import("./calcite-action-XS3DFJSA.js"), "action-bar": () => import("./calcite-action-bar-DWATLLSM.js"), "action-group": () => import("./calcite-action-group-IOSLOGJZ.js"), "flow-item": () => import("./calcite-flow-item-VC56ZPAY.js") });
  }
  render() {
    const { flowItems: e13 } = this, t8 = e13 == null ? void 0 : e13.toArray();
    return n2(i2, null, t8 == null ? void 0 : t8.map((t9, i6) => this._renderFlowItem(t9, i6 === e13.length - 1)));
  }
  _handleCloseClick() {
    this.emit("close");
  }
  _handleExitClick() {
    this.emit("exit");
  }
  _handleDrillInBackClick() {
    const { flowItems: e13 } = this, t8 = e13 == null ? void 0 : e13.pop();
    t8 && ("activeCategory" in t8.viewModel ? (t8.viewModel.activeCategory = null, e13.length || (t8.viewModel.showAllEnabled = false)) : "showAllEnabled" in t8.viewModel && (t8.viewModel.showAllEnabled = false), t8 && (t8.viewModel = null, t8.destroy()));
  }
  _getExitMessage(e13) {
    switch (e13.flowType) {
      case "feature":
      case "feature-association":
        return "";
      case "feature-relationship":
        return this.messages.exitRelatedRecords;
      case "feature-utility-network-associations":
      case "feature-utility-network-association-type":
        return this.messages.exitAssociations;
    }
  }
  _renderFlowItem(e13, i6) {
    const { messages: o4, closable: s4, closed: r3 } = this, c9 = "graphic" in e13 && !e13.isTable, n9 = "feature-association" === e13.flowType, p7 = this._getExitMessage(e13), d4 = o4.selectFeature;
    return n2("calcite-flow-item", { bind: this, closable: s4, closed: r3, description: c(this._getDrillInFlowItemDescription(e13) ?? ""), heading: c(e13.title ?? ""), key: `flow-item-${e13.viewModel.uid}`, selected: i6, onCalciteFlowItemBack: (e14) => {
      e14.preventDefault(), this._handleDrillInBackClick();
    }, onCalciteFlowItemClose: this._handleCloseClick }, n2("calcite-action", { appearance: "transparent", bind: this, class: n7.actionExit, icon: "move-up", key: "exit-action", onclick: this._handleExitClick, slot: "header-actions-start", text: p7, title: p7 }), c9 ? n2("calcite-action", { appearance: "transparent", bind: this, icon: "zoom-to-object", key: "open-feature-action", onclick: () => this._handleOpenFeature(e13), slot: "header-actions-end", text: d4, title: d4 }) : null, n9 ? n2("calcite-action-bar", { expandDisabled: true, expanded: true, key: "header-action-bar", scale: "s", slot: "action-bar" }, n2("calcite-action-group", { overlayPositioning: "fixed", scale: "s" }, this._renderDefaultActions(e13))) : null, n2("div", { class: n7.container }, e13.render()));
  }
  _renderDefaultActions(e13) {
    const t8 = this._getActionTitle(m3);
    return n2("calcite-action", { active: m3.active, appearance: "solid", bind: this, "data-action-uid": m3.uid, disabled: m3.disabled, icon: m3.icon ?? "question", indicator: m3.indicator, key: `action-${m3.uid}`, loading: m3.active, onclick: () => this._handleZoomToFeature(e13), scale: "s", text: t8, textEnabled: true, title: t8 });
  }
  _getActionTitle(e13) {
    const { messages: t8 } = this, { id: i6 } = e13, o4 = e13.title ?? "";
    return "zoom-to-feature" === i6 ? s2(o4, { messages: t8 }) : o4;
  }
  _getDrillInFlowItemDescription(e13) {
    switch (e13.flowType) {
      case "feature":
      case "feature-association":
      case "feature-utility-network-associations":
        return e13.viewModel.description ?? "";
      case "feature-relationship":
        return e13.allItemsDescription;
      case "feature-utility-network-association-type":
        return e13.description ?? "";
    }
  }
};
r([m()], u.prototype, "flowItems", void 0), r([m(), e2("esri/widgets/Features/t9n/Features")], u.prototype, "messages", void 0), r([m()], u.prototype, "closed", void 0), r([m()], u.prototype, "closable", void 0), u = r([a("esri.widgets.Features.FeaturesDrillIn")], u);
var h2 = u;

// node_modules/@arcgis/core/layers/LayerConstants.js
var o2 = "OBJECTID";

// node_modules/@arcgis/core/widgets/Legend/styles/support/relationshipUtils.js
var b3 = "esri-relationship-ramp";
var u2 = `${b3}--diamond`;
var c6 = `${b3}--square`;
var p5 = { diamondContainer: `${u2}__container`, diamondLeftCol: `${u2}__left-column`, diamondRightCol: `${u2}__right-column`, diamondMidCol: `${u2}__middle-column`, diamondMidColLabel: `${u2}__middle-column--label`, diamondMidColRamp: `${u2}__middle-column--ramp`, squareTable: `${c6}__table`, squareTableRow: `${c6}__table-row`, squareTableCell: `${c6}__table-cell`, squareTableLabel: `${c6}__table-label`, squareTableLabelLeftBottom: `${c6}__table-label--left-bottom`, squareTableLabelRightBottom: `${c6}__table-label--right-bottom`, squareTableLabelLeftTop: `${c6}__table-label--left-top`, squareTableLabelRightTop: `${c6}__table-label--right-top` };

// node_modules/@arcgis/core/symbols/support/symbolUtils.js
function x(e13) {
  return e13 && "opacity" in e13 ? e13.opacity * x(e13.parent) : 1;
}
async function R2(e13, t8) {
  var _a;
  if (!e13) return;
  const a7 = e13.sourceLayer, i6 = (null != t8 && t8.useSourceLayer ? a7 : e13.layer) ?? a7, r3 = (t8 == null ? void 0 : t8.ignoreOpacity) ? 1 : x(i6);
  if (null != e13.symbol && (null == t8 || true !== t8.ignoreGraphicSymbol)) {
    const l7 = "web-style" === e13.symbol.type ? await e13.symbol.fetchSymbol({ ...t8, acceptedFormats: ["web", "cim"], cache: null != t8 ? t8.webStyleCache : null }) : e13.symbol.clone();
    return g4(l7, null, r3), l7;
  }
  const s4 = (t8 == null ? void 0 : t8.renderer) ?? j4(i6);
  let n9 = s4 && "getSymbolAsync" in s4 ? await s4.getSymbolAsync(e13, t8) : null;
  if (!n9) return;
  if (n9 = "web-style" === n9.type ? await n9.fetchSymbol({ ...t8, cache: null != t8 ? t8.webStyleCache : null }) : n9.clone(), !s4 || !("visualVariables" in s4) || !((_a = s4.visualVariables) == null ? void 0 : _a.length)) return g4(n9, null, r3), n9;
  if ("arcadeRequiredForVisualVariables" in s4 && s4.arcadeRequiredForVisualVariables && null == (t8 == null ? void 0 : t8.arcade)) {
    const e14 = { ...t8 };
    e14.arcade = await o(), t8 = e14;
  }
  const { getColor: f4, getOpacity: p7, getAllSizes: y3, getRotationAngle: h6 } = await import("./visualVariableUtils-DBBT3UHC.js"), m5 = [], b4 = [], d4 = [], g6 = [];
  for (const l7 of s4.visualVariables) switch (l7.type) {
    case "color":
      m5.push(l7);
      break;
    case "opacity":
      b4.push(l7);
      break;
    case "rotation":
      g6.push(l7);
      break;
    case "size":
      l7.target || d4.push(l7);
  }
  const w5 = !!m5.length && m5[m5.length - 1], S4 = w5 ? f4(w5, e13, t8) : null, v5 = !!b4.length && b4[b4.length - 1];
  let V2 = v5 ? p7(v5, e13, t8) : null;
  if (null != r3 && (V2 = null != V2 ? V2 * r3 : r3), (t8 == null ? void 0 : t8.ignoreOpacity) && (V2 = 1), g4(n9, S4, V2), d4.length && true !== (t8 == null ? void 0 : t8.ignoreSizeVariables)) {
    const l7 = y3(d4, e13, t8);
    await D(n9, l7);
  }
  if (true !== (t8 == null ? void 0 : t8.ignoreRotationVariables)) for (const l7 of g6) J(n9, h6(l7, e13, t8), l7.axis);
  return n9;
}
function j4(e13) {
  if (e13) return "renderer" in e13 ? e13.renderer : void 0;
}

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var c8 = "esri.widgets.Popup.PopupViewModel";
var u4 = () => n.getLogger(c8);
var l5 = (t8) => {
  const { event: o4, view: c9, viewModel: u5 } = t8, { action: l7 } = o4;
  if (!l7) return Promise.reject(new s("trigger-action:missing-arguments", "Event has no action"));
  const { disabled: d4, id: g6 } = l7;
  if (!g6) return Promise.reject(new s("trigger-action:invalid-action", "action.id is missing"));
  if (d4) return Promise.reject(new s("trigger-action:invalid-action", "Action is disabled"));
  if (g6 === n8.id) return f3(u5).catch(f);
  if (g6 === l3.id) return m4(u5);
  if (g6 === m2.id) return u5.browseClusterEnabled = !u5.browseClusterEnabled, u5.featureMenuOpen = u5.browseClusterEnabled, Promise.resolve();
  if (g6 === r2.id) {
    u5.visible = false;
    const { selectedFeature: t9 } = u5;
    if (!t9) return Promise.reject(new s(`trigger-action:${r2.id}`, "selectedFeature is required", { selectedFeature: t9 }));
    const { sourceLayer: r3 } = t9;
    return r3 ? r3.remove(t9) : c9 == null ? void 0 : c9.graphics.remove(t9), Promise.resolve();
  }
  return Promise.resolve();
};
function d3(e13) {
  const { selectedFeature: t8, location: r3, view: o4 } = e13;
  return o4 ? t8 ?? r3 ?? null : null;
}
function g5(e13) {
  var _a, _b;
  return !!e13 && e13.isAggregate && "cluster" === ((_b = (_a = e13.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
async function w4(e13, t8) {
  if ("3d" !== (t8 == null ? void 0 : t8.type) || !e13 || "esri.Graphic" !== e13.declaredClass) return true;
  const r3 = t8.getViewForGraphic(e13);
  if (r3 && "whenGraphicBounds" in r3) {
    let t9 = null;
    try {
      t9 = await r3.whenGraphicBounds(e13, { useViewElevation: true });
    } catch (o4) {
    }
    return !t9 || !t9.boundingBox || t9.boundingBox[0] === t9.boundingBox[3] && t9.boundingBox[1] === t9.boundingBox[4] && t9.boundingBox[2] === t9.boundingBox[5];
  }
  return true;
}
async function f3(t8, r3) {
  var _a, _b;
  const { location: n9, selectedFeature: a7, view: s4, zoomFactor: c9 } = t8;
  await ((_a = r3 == null ? void 0 : r3.viewModel) == null ? void 0 : _a.updateGeometry());
  const l7 = r3 == null ? void 0 : r3.graphic, g6 = (l7 == null ? void 0 : l7.geometry) ? l7 : d3(t8);
  if (!s4 || !g6) {
    const t9 = new s("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: g6, view: s4 });
    throw u4().error(t9), t9;
  }
  const f4 = s4.scale / c9, m5 = (l7 == null ? void 0 : l7.geometry) ?? ((_b = t8.selectedFeature) == null ? void 0 : _b.geometry) ?? n9, v5 = null != m5 && "point" === m5.type && await w4(l7 ?? a7, s4);
  n8.active = true, n8.disabled = true;
  try {
    await t8.zoomTo({ target: { target: g6, scale: v5 ? f4 : void 0 } });
  } catch (p7) {
    if (b(p7)) return;
    const t9 = new s("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: l7 ?? a7 });
    u4().error(t9);
  } finally {
    n8.active = false, n8.disabled = false, t8.zoomToLocation = null, v5 && (t8.location = m5);
  }
}
async function m4(t8) {
  const { selectedFeature: r3, view: o4 } = t8;
  if ("2d" !== (o4 == null ? void 0 : o4.type)) {
    const t9 = new s("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: o4 });
    throw u4().error(t9), t9;
  }
  if (!r3 || !g5(r3)) {
    const t9 = new s("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r3 });
    throw u4().error(t9), t9;
  }
  const [i6, a7] = await y2(o4, r3);
  l3.active = true, l3.disabled = true;
  const { extent: s4 } = await i6.queryExtent(a7);
  s4 && await t8.zoomTo({ target: s4 }), l3.active = false, l3.disabled = false;
}
async function v4(e13) {
  const { view: t8, selectedFeature: r3 } = e13;
  if (!t8 || !r3) return;
  const [o4, i6] = await y2(t8, r3), { extent: n9 } = await o4.queryExtent(i6);
  e13.selectedClusterBoundaryFeature.geometry = n9, t8.graphics.add(e13.selectedClusterBoundaryFeature);
}
async function p6(e13) {
  const { selectedFeature: t8, view: r3 } = e13;
  if (!r3 || !t8) return;
  const [o4, i6] = await y2(r3, t8);
  m2.active = true, m2.disabled = true;
  const { features: n9 } = await o4.queryFeatures(i6);
  m2.active = false, m2.disabled = false, m2.value = true;
  const s4 = { features: [t8].concat(n9) };
  "feature" === (e13 == null ? void 0 : e13.initialDisplayMode) && (s4.featureMenuOpen = true), e13 == null ? void 0 : e13.open(s4);
}
async function y2(e13, t8) {
  const r3 = await e13.whenLayerView(t8.sourceLayer), o4 = r3.createQuery(), i6 = t8.getObjectId();
  return o4.aggregateIds = null != i6 ? [i6] : [], [r3, o4];
}
function h5(e13) {
  m2.value = false;
  const t8 = e13.features.filter((e14) => g5(e14));
  t8.length && (e13.features = t8);
}

// node_modules/@arcgis/core/widgets/Features/FeaturesViewModel.js
var B = "location-scale-handle";
var H = () => [n8.clone()];
var G2 = () => [l3.clone(), m2.clone()];
var U = null;
function Z2(e13, t8) {
  return "building-scene" === e13 || "2d" === t8 && ("map-image" === e13 || "tile" === e13 || "imagery" === e13 || "imagery-tile" === e13);
}
var z = class extends t3(l2) {
  constructor(e13) {
    super(e13), this._pendingPromises = new t2(), this._fetchFeaturesController = null, this._highlightPromises = { "highlight-active-feature": null, "highlight-selected-feature": null }, this._selectedClusterFeature = null, this.actions = new i4(), this.activeFeature = null, this.autoCloseEnabled = false, this.browseClusterEnabled = false, this.content = null, this.defaultPopupTemplateEnabled = false, this.featurePage = null, this.featuresPerPage = 20, this.featureMenuOpen = false, this.featureMenuTitle = null, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.initialDisplayMode = "feature", this.selectedClusterBoundaryFeature = new b2({ symbol: new S({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null, this._debouncedLocationUpdate = k(async (e14) => {
      var _a, _b, _c, _d;
      const { spatialReference: t8 } = this, i6 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.geometry) == null ? void 0 : _b.type, s4 = this.location ?? e14;
      if (i6 && "mesh" !== i6 && t8 && s4 && this.selectedFeature) if ("point" !== i6) try {
        const e15 = this.selectedFeature;
        let i7 = e15.geometry;
        const r3 = this._getHighlightLayer(e15), o4 = e15.getObjectId();
        if (!r3 || !this.view) return;
        if (o4) {
          const e16 = (_c = this.view) == null ? void 0 : _c.allLayerViews.find((e17) => e17.layer.uid === r3.uid);
          if (!e16 || !("queryFeatures" in e16)) return;
          const s5 = e16.createQuery();
          s5.outSpatialReference = t8, s5.objectIds = [o4], s5.returnGeometry = true;
          const { features: a7 } = await e16.queryFeatures(s5);
          i7 = (_d = a7[0]) == null ? void 0 : _d.geometry;
        }
        if (!i7 || "mesh" === i7.type) return;
        if (i7 = O2(i7, t8), U || (U = await import("./geometryEngineAsync-5BRIST4M.js")), !await U.intersects(i7, s4)) {
          const t9 = (await U.nearestCoordinate(i7, s4)).coordinate ?? s4;
          this.selectedFeature === e15 && (this.location = t9);
        }
      } catch (o4) {
        b(o4) || n.getLogger(this).error(o4);
      }
      else this.location = n5(this.selectedFeature.geometry) ?? s4;
    });
  }
  initialize() {
    this.addHandles([this.on("view-change", () => this._autoClose()), d2(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), d2(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), d2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e13) => this._animationStateChange(e13)), d2(() => this.location, (e13) => this._locationChange(e13)), d2(() => this.selectedFeature, (e13) => this._selectedFeatureChange(e13)), d2(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), d2(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), d2(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e13) => l5({ event: e13, viewModel: this, view: this.view })), p(() => !this.waitingForResult, () => this._waitingForResultChange(), C), d2(() => [this.features, this.map, this.spatialReference, this.timeZone], () => this._updateFeatureVMs()), d2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), p(() => !this.visible, () => this.browseClusterEnabled = false), d2(() => this.browseClusterEnabled, (e13) => e13 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null, this.map = null, this.spatialReference = null, this.timeZone = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e13 = this._get("allActions") || new i4();
    e13.removeAll();
    const { actions: t8, defaultActions: i6, defaultPopupTemplateEnabled: s4, includeDefaultActions: r3, selectedFeature: o4 } = this, a7 = r3 ? i6.concat(t8) : t8, n9 = o4 && ("function" == typeof o4.getEffectivePopupTemplate && o4.getEffectivePopupTemplate(s4) || o4.popupTemplate), l7 = n9 == null ? void 0 : n9.actions, u5 = (n9 == null ? void 0 : n9.overwriteActions) ? l7 : (l7 == null ? void 0 : l7.concat(a7)) ?? a7;
    return u5 == null ? void 0 : u5.filter(Boolean).forEach((t9) => e13.add(t9)), e13;
  }
  get defaultActions() {
    const e13 = this._get("defaultActions") || new i4();
    return e13.removeAll(), e13.addMany(g5(this.selectedFeature) ? G2() : H()), e13;
  }
  get featureCount() {
    return this.features.length;
  }
  set features(e13) {
    const t8 = e13 || [];
    this._set("features", t8);
    const { pendingPromisesCount: i6, promiseCount: s4, selectedFeatureIndex: r3 } = this, o4 = s4 && t8.length;
    "list" !== this.initialDisplayMode ? o4 && i6 && -1 === r3 ? this.selectedFeatureIndex = 0 : o4 && -1 !== r3 || (this.selectedFeatureIndex = t8.length ? 0 : -1) : (!o4 || o4 && i6 === s4) && (this.selectedFeatureIndex = -1);
  }
  set location(e13) {
    var _a, _b;
    let t8 = e13;
    const i6 = (_a = this.spatialReference) == null ? void 0 : _a.isWebMercator, s4 = (_b = e13 == null ? void 0 : e13.spatialReference) == null ? void 0 : _b.isWGS84;
    s4 && i6 && (t8 = j(e13)), this._set("location", t8);
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) ?? null;
  }
  set map(e13) {
    this._override("map", e13);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e13) {
    this._pendingPromises.clear(), this.features = [], Array.isArray(e13) && e13.length ? (this._set("promises", e13), (e13 = e13.slice()).forEach((e14) => this._pendingPromises.add(e14)), e13.reduce((e14, t8) => e14.finally(() => t8.then((e15) => {
      this._pendingPromises.has(t8) && this._updateFeatures(e15);
    }).finally(() => this._pendingPromises.delete(t8)).catch(() => {
    })), Promise.resolve())) : this._set("promises", []);
  }
  get selectedFeature() {
    const { features: e13, selectedFeatureIndex: t8 } = this;
    if (-1 === t8) return null;
    return e13[t8] || null;
  }
  get selectedFeatureIndex() {
    const e13 = this._get("selectedFeatureIndex");
    return "number" == typeof e13 ? e13 : -1;
  }
  set selectedFeatureIndex(e13) {
    const { featureCount: t8 } = this;
    (isNaN(e13) || e13 < 0 || !t8) && (e13 = -1), this.activeFeature = null, this._set("selectedFeatureIndex", e13);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(e13) {
    this._override("spatialReference", e13);
  }
  get state() {
    const { view: e13, map: t8 } = this;
    return e13 ? e13.ready ? "ready" : "disabled" : t8 ? "ready" : "disabled";
  }
  get timeZone() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.timeZone) ?? e;
  }
  set timeZone(e13) {
    this._overrideIfSome("timeZone", e13);
  }
  get waitingForContents() {
    return this.featureViewModels.some((e13) => e13.waitingForContent);
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  centerAtLocation() {
    const { view: e13 } = this, t8 = d3(this);
    return t8 && e13 ? this.callGoTo({ target: { target: t8, scale: e13.scale } }) : Promise.reject(new s("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t8, view: e13 }));
  }
  zoomTo(e13) {
    return this.callGoTo(e13);
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e13, t8) {
    var _a;
    const { view: i6 } = this;
    if (!i6 || !e13) throw new s("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e13, view: i6 });
    return i6.fetchPopupFeatures(e13, { pointerType: (_a = t8 == null ? void 0 : t8.event) == null ? void 0 : _a.pointerType, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t8 == null ? void 0 : t8.signal });
  }
  open(e13) {
    const t8 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e13, visible: true }, { fetchFeatures: i6 } = t8;
    delete t8.fetchFeatures, i6 && this._setFetchFeaturesPromises(t8.location);
    const s4 = ["actionsMenuOpen", "collapsed"];
    for (const r3 of s4) delete t8[r3];
    this.set(t8);
  }
  triggerAction(e13) {
    const t8 = this.allActions.at(e13);
    t8 && !t8.disabled && this.emit("trigger-action", { action: t8 });
  }
  next() {
    return this.selectedFeatureIndex = this._getRoundRobinIndex(this.selectedFeatureIndex + 1, this.featureCount), this;
  }
  previous() {
    return this.selectedFeatureIndex = this._getRoundRobinIndex(this.selectedFeatureIndex - 1, this.featureCount), this;
  }
  disableClusterBrowsing() {
    h5(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e13, selectedFeature: t8 } = this;
    "2d" === (e13 == null ? void 0 : e13.type) ? g5(t8) ? (await v4(this), await p6(this)) : n.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t8) : n.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t8);
  }
  handleViewClick(e13) {
    this._fetchFeaturesAndOpen(e13);
  }
  _getRoundRobinIndex(e13, t8) {
    return (e13 + t8) % t8;
  }
  _animationStateChange(e13) {
    this.zoomToLocation || (n8.disabled = "waiting-for-target" === e13);
  }
  _clearBrowsedClusterGraphics() {
    var _a, _b;
    const e13 = [this.selectedClusterBoundaryFeature, this._selectedClusterFeature].filter(G);
    (_b = (_a = this.view) == null ? void 0 : _a.graphics) == null ? void 0 : _b.removeMany(e13), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (g5(this.selectedFeature)) return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = this.selectedFeature ? [this.selectedFeature] : []);
  }
  _locationChange(e13) {
    const { selectedFeature: t8, updateLocationEnabled: i6, view: s4 } = this;
    s4 && i6 && e13 && (!t8 || t8.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 0 ? Math.floor((this.selectedFeatureIndex + 1) / this.featuresPerPage) : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 0 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e13, featureCount: t8, featurePage: i6, featuresPerPage: s4, featureViewModels: r3 } = this;
    if (null == i6) return;
    const o4 = ((i6 - 1) * s4 + t8) % t8, a7 = o4 + s4;
    r3.slice(o4, a7).forEach((t9, i7) => {
      t9 && (t9.graphic ?? (t9.graphic = e13[o4 + i7]));
    });
  }
  async _selectedFeatureChange(e13) {
    var _a, _b;
    const { location: t8, updateLocationEnabled: i6, view: s4 } = this;
    if (!e13 || !s4) return;
    if (this.browseClusterEnabled) {
      if (this._selectedClusterFeature && (s4.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), g5(e13)) return;
      return e13.symbol = await R2(e13), this._selectedClusterFeature = e13, void s4.graphics.add(this._selectedClusterFeature);
    }
    const r3 = (_a = e13.sourceLayer) == null ? void 0 : _a.type;
    if ("map-image" !== r3 && "imagery" !== r3 && "imagery-tile" !== r3 || (e13.symbol = await R2(e13)), !i6 && t8 || !e13.geometry) {
      if (i6 && !e13.geometry) {
        await this.centerAtLocation();
        const e14 = (_b = s4.center) == null ? void 0 : _b.clone();
        e14 && (this.location = e14);
      }
    } else this.location = n5(e13.geometry);
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  async _setFetchFeaturesPromises(e13) {
    const { pendingFeatures: t8 } = await this._fetchFeaturesWithController({ mapPoint: e13 });
    this.promises = t8;
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e13) => e13 && !e13.destroyed && e13.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e13, features: t8, featureViewModels: i6, view: s4, spatialReference: r3, map: o4, timeZone: a7, location: n9 } = this;
    if (g5(t8[0]) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !(t8 == null ? void 0 : t8.length)) return;
    const l7 = i6.slice(), u5 = [];
    t8.forEach((t9, i7) => {
      if (!t9) return;
      let h6 = null;
      if (l7.some((e14, i8) => (e14 && e14.graphic === t9 && (h6 = e14, l7.splice(i8, 1)), !!h6)), h6) u5[i7] = h6;
      else {
        const l8 = new ce({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: r3, graphic: t9 === e13 ? t9 : null, location: n9, map: o4, view: s4, timeZone: a7 });
        u5[i7] = l8;
      }
    }), l7.forEach((e14) => e14 && !e14.destroyed && e14.destroy()), this._set("featureViewModels", u5);
  }
  async _getScreenPoint(e13, t8) {
    const { spatialReference: i6, view: s4 } = this;
    if (!s4) return null;
    await (s4 == null ? void 0 : s4.when());
    const r3 = e13 == null ? void 0 : e13.spatialReference;
    return r3 && i6 ? (await Q(r3, i6, null, t8), s4.toScreen(e13)) : null;
  }
  _cancelFetchingFeatures() {
    const e13 = this._fetchFeaturesController;
    e13 && e13.abort(), this._fetchFeaturesController = null;
  }
  async _projectScreenPointAndFetchFeatures({ mapPoint: e13, screenPoint: t8, event: i6, signal: s4 }) {
    return this.fetchFeatures(t8 ?? await this._getScreenPoint(e13 ?? this.location, { signal: s4 }), { signal: s4, event: i6 });
  }
  _fetchFeaturesWithController({ mapPoint: e13, screenPoint: t8, event: i6 }) {
    this._cancelFetchingFeatures();
    const s4 = new AbortController(), { signal: r3 } = s4;
    this._fetchFeaturesController = s4;
    const o4 = this._projectScreenPointAndFetchFeatures({ mapPoint: e13, screenPoint: t8, signal: r3, event: i6 });
    return o4.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null;
    }), o4;
  }
  async _fetchFeaturesAndOpen(e13) {
    const { mapPoint: t8, screenPoint: i6 } = e13, { view: s4 } = this;
    this.removeHandles(B), this.addHandles([d2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._debouncedLocationUpdate(t8).catch((e14) => {
      b(e14) || n.getLogger(this).error(e14);
    })), p(() => !this.visible, () => {
      this.removeHandles(B);
    }, { once: true })], B);
    const { pendingFeatures: o4 } = await this._fetchFeaturesWithController({ mapPoint: t8, screenPoint: i6, event: e13 });
    (s4 == null ? void 0 : s4.popup) && "open" in s4.popup && s4.popup.open({ location: t8 ?? void 0, promises: o4 });
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  async _getLayerView(e13, t8) {
    return await e13.when(), e13.whenLayerView(t8);
  }
  _getHighlightLayer(e13) {
    const { layer: t8, sourceLayer: i6 } = e13;
    return i6 && "layer" in i6 && i6.layer ? i6.layer : "map-notes" === (i6 == null ? void 0 : i6.type) || "subtype-group" === (i6 == null ? void 0 : i6.type) ? i6 : t8;
  }
  _getHighlightLayerView(e13, t8) {
    return "subtype-sublayer" === t8.type && t8.parent && this._mapIncludesLayer(t8.parent) ? this._getLayerView(e13, t8.parent) : t8 && this._mapIncludesLayer(t8) ? this._getLayerView(e13, t8) : null;
  }
  _getHighlightTarget(e13, t8, i6) {
    if (Z2(t8.type, i6)) return e13;
    const s4 = e13.getObjectId();
    if (null != s4) return s4;
    const r3 = "imagery" === t8.type ? void 0 : "objectIdField" in t8 ? t8.objectIdField || o2 : null, o4 = e13.attributes;
    return o4 && r3 && o4[r3] || e13;
  }
  _mapIncludesLayer(e13) {
    var _a, _b;
    return !!((_b = (_a = this.map) == null ? void 0 : _a.allLayers) == null ? void 0 : _b.includes(e13));
  }
  async _highlightFeature(e13, t8) {
    this.removeHandles(e13);
    const i6 = this[t8];
    if (!i6) return;
    const { highlightEnabled: s4, view: r3, visible: o4 } = this;
    if (!r3 || !s4 || !o4) return;
    const a7 = this._getHighlightLayer(i6);
    if (!a7) return;
    const n9 = this._getHighlightLayerView(r3, a7);
    if (!n9) return;
    this._highlightPromises[e13] = n9;
    const l7 = await n9;
    if (!(l7 && n3(l7) && this._highlightPromises[e13] === n9 && this[t8] && this.highlightEnabled)) return;
    const u5 = l7.highlight(this._getHighlightTarget(i6, a7, r3.type));
    this.addHandles(u5, e13);
  }
  async _highlightActiveFeature() {
    return this._highlightFeature("highlight-active-feature", "activeFeature");
  }
  async _highlightSelectedFeature() {
    return this._highlightFeature("highlight-selected-feature", "selectedFeature");
  }
  _updateFeatures(e13) {
    const { features: t8 } = this, i6 = e13.filter((e14) => !t8.includes(e14));
    (i6 == null ? void 0 : i6.length) && (this.features = t8.concat(i6));
  }
};
r([m()], z.prototype, "_fetchFeaturesController", void 0), r([m({ type: i4 })], z.prototype, "actions", void 0), r([m({ readOnly: true })], z.prototype, "active", null), r([m()], z.prototype, "activeFeature", void 0), r([m({ readOnly: true })], z.prototype, "allActions", null), r([m()], z.prototype, "autoCloseEnabled", void 0), r([m()], z.prototype, "browseClusterEnabled", void 0), r([m()], z.prototype, "content", void 0), r([m({ type: i4, readOnly: true })], z.prototype, "defaultActions", null), r([m({ type: Boolean })], z.prototype, "defaultPopupTemplateEnabled", void 0), r([m({ readOnly: true })], z.prototype, "featureCount", null), r([m()], z.prototype, "featurePage", void 0), r([m({ value: [] })], z.prototype, "features", null), r([m()], z.prototype, "featuresPerPage", void 0), r([m()], z.prototype, "featureMenuOpen", void 0), r([m()], z.prototype, "featureMenuTitle", void 0), r([m()], z.prototype, "featureViewModelAbilities", void 0), r([m({ readOnly: true })], z.prototype, "featureViewModels", void 0), r([m()], z.prototype, "highlightEnabled", void 0), r([m()], z.prototype, "includeDefaultActions", void 0), r([m()], z.prototype, "initialDisplayMode", void 0), r([m({ type: j2 })], z.prototype, "location", null), r([m()], z.prototype, "map", null), r([m({ readOnly: true })], z.prototype, "pendingPromisesCount", null), r([m({ readOnly: true })], z.prototype, "promiseCount", null), r([m()], z.prototype, "promises", null), r([m({ readOnly: true })], z.prototype, "selectedClusterBoundaryFeature", void 0), r([m({ value: null, readOnly: true })], z.prototype, "selectedFeature", null), r([m({ value: -1 })], z.prototype, "selectedFeatureIndex", null), r([m({ readOnly: true })], z.prototype, "selectedFeatureViewModel", null), r([m({ type: g3 })], z.prototype, "spatialReference", null), r([m({ readOnly: true })], z.prototype, "state", null), r([m()], z.prototype, "timeZone", null), r([m()], z.prototype, "title", void 0), r([m()], z.prototype, "updateLocationEnabled", void 0), r([m()], z.prototype, "view", void 0), r([m()], z.prototype, "visible", void 0), r([m({ readOnly: true })], z.prototype, "waitingForContents", null), r([m({ readOnly: true })], z.prototype, "waitingForResult", null), r([m()], z.prototype, "zoomFactor", void 0), r([m()], z.prototype, "zoomToLocation", void 0), r([m()], z.prototype, "centerAtLocation", null), z = r([a("esri.widgets.Features.FeaturesViewModel")], z);
var D2 = z;

// node_modules/@arcgis/core/widgets/Features/FeaturesVisibleElements.js
var a5 = class extends g {
  constructor() {
    super(...arguments), this.actionBar = true, this.closeButton = true, this.collapseButton = false, this.featureMenuHeading = true, this.featureNavigation = true, this.featureListLayerTitle = true, this.flow = true, this.heading = true, this.spinner = true;
  }
};
r([m({ type: Boolean, nonNullable: true })], a5.prototype, "actionBar", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "closeButton", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "collapseButton", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "featureMenuHeading", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "featureNavigation", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "featureListLayerTitle", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "flow", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "heading", void 0), r([m({ type: Boolean, nonNullable: true })], a5.prototype, "spinner", void 0), a5 = r([a("esri.widgets.Features.FeaturesVisibleElements")], a5);
var l6 = a5;

// node_modules/@arcgis/core/widgets/Features.js
var j5 = "selected-index";
var L2 = 0;
var W = "features-spinner";
function D3(e13) {
  return (e13 == null ? void 0 : e13.declaredClass.startsWith("esri.layers.")) ?? false;
}
var S3 = class extends n4(O) {
  constructor(e13, i6) {
    super(e13, i6), this._featureMenuIntersectionObserverCallback = ([e14]) => {
      (e14 == null ? void 0 : e14.isIntersecting) && null != this.viewModel.featurePage && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._featureMenuIntersectionObserverNode = null, this._spinner = null, this._feature = null, this._focusAbortController = null, this._drillInFlowItems = new V(), this._drillInWidget = new h2({ flowItems: this._drillInFlowItems }), this._rootNode = null, this._rootFlowItemNode = null, this._featureMenuViewportNode = null, this._actionBarMenuNode = null, this.collapsed = false, this.featureNavigationTop = false, this.headerActions = new i4(), this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.responsiveActionsEnabled = false, this.viewModel = new D2(), this.visibleElements = new l6(), this._renderAction = (e14, t8) => {
      const i7 = this._getActionTitle(e14), { type: o4, active: s4, uid: n9, disabled: r3, indicator: l7 } = e14;
      return e14.visible ? n2("calcite-action", { active: "toggle" === o4 && e14.value, appearance: "solid", bind: this, "data-action-id": e14.id, "data-action-uid": n9, disabled: r3, icon: this._getActionIcon(e14), indicator: l7, key: `action-${t8}`, loading: s4, onclick: this._triggerAction, scale: "s", text: i7, textEnabled: !this._hideActionText, title: this._hideActionText ? i7 : void 0 }, this._getFallbackIcon(e14)) : null;
    }, this._openFeatureMenu = () => {
      this.featureMenuOpen = true, this._focusFlowItemNode();
    }, this._closeFeatureMenu = () => {
      this.featureMenuOpen = false, this._focusFlowItemNode();
    }, this._previousFeature = () => {
      this.viewModel.previous();
    }, this._nextFeature = () => {
      this.viewModel.next();
    }, this._handleFeatureBack = () => {
      "list" === this.initialDisplayMode ? (this.selectedFeatureIndex = -1, this._focusFlowItemNode()) : this._openFeatureMenu();
    }, this._handleFeatureMenuBack = () => {
      "list" === this.initialDisplayMode ? (this.selectedFeatureIndex = -1, this._focusFlowItemNode()) : this.featureMenuOpen && this._closeFeatureMenu();
    }, this._storeRootNode = (e14) => {
      this._rootNode = e14;
    }, this._displaySpinnerThrottled = e3(() => this._displaySpinner(), L2), this._addSelectedFeatureIndexHandle(), this.addHandles([this._displaySpinnerThrottled, d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.active;
    }, () => this._toggleScreenLocationEnabled()), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.active;
    }, (e14) => this._drillInWidget.closed = !e14), d2(() => {
      var _a;
      return (_a = this.visibleElements) == null ? void 0 : _a.closeButton;
    }, (e14) => this._drillInWidget.closable = e14), d2(() => {
      var _a;
      return (_a = this.visibleElements) == null ? void 0 : _a.spinner;
    }, (e14) => this._spinnerEnabledChange(e14)), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e14, t8) => this._viewChange(e14, t8)), d2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e14, t8) => this._viewReadyChange(e14 ?? false, t8 ?? false)), d2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._closeOpenActionMenu()), d2(() => this.selectedFeatureWidget, () => this._destroyDrillInFlowItemWidgets()), d2(() => {
      var _a;
      const e14 = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel;
      return [e14 == null ? void 0 : e14.title, e14 == null ? void 0 : e14.state];
    }, () => this._setTitleFromFeatureWidget()), d2(() => {
      var _a;
      const e14 = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel;
      return [e14 == null ? void 0 : e14.content, e14 == null ? void 0 : e14.state];
    }, () => this._setContentFromFeatureWidget()), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop()), d2(() => this._drillInFlowItems.length, () => this._focusFlowItemNode()), this._drillInWidget.on("close", () => this.close()), this._drillInWidget.on("exit", () => this._destroyDrillInFlowItemWidgets()), this._drillInWidget.on("open-feature", ({ feature: e14 }) => this._openRelatedFeature(e14)), this._drillInWidget.on("zoom-to-feature", ({ featureWidget: e14 }) => f3(this.viewModel, e14))]);
  }
  loadDependencies() {
    return c2({ action: () => import("./calcite-action-XS3DFJSA.js"), "action-bar": () => import("./calcite-action-bar-DWATLLSM.js"), "action-group": () => import("./calcite-action-group-IOSLOGJZ.js"), button: () => import("./calcite-button-O4D737DM.js"), icon: () => import("./calcite-icon-IDR3G5OX.js"), flow: () => import("./calcite-flow-QF2MNS26.js"), "flow-item": () => import("./calcite-flow-item-VC56ZPAY.js"), list: () => import("./calcite-list-ZW5MU5XE.js"), "list-item": () => import("./calcite-list-item-G27TAKVG.js"), "list-item-group": () => import("./calcite-list-item-group-LC2YG2BC.js"), loader: () => import("./calcite-loader-JLWU6EVT.js") });
  }
  destroy() {
    var _a, _b, _c;
    this._destroyDrillInFlowItemWidgets(), this._destroySelectedFeatureWidget(), this._destroySpinner(), this._unobserveFeatureMenuObserver(), (_a = this._featureMenuIntersectionObserver) == null ? void 0 : _a.disconnect(), (_b = this._drillInWidget) == null ? void 0 : _b.destroy(), (_c = this._focusAbortController) == null ? void 0 : _c.abort();
  }
  get _hideActionText() {
    var _a;
    if (!this.responsiveActionsEnabled) return false;
    const e13 = (_a = this.view) == null ? void 0 : _a.widthBreakpoint;
    return "xsmall" === e13 || "small" === e13 || "medium" === e13;
  }
  get _featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && !!this.viewModel.selectedFeature && this.visibleElements.featureNavigation;
  }
  get _isCollapsed() {
    return this._collapseEnabled && this.collapsed;
  }
  get _collapseEnabled() {
    return this.visibleElements.collapseButton && ("list" === this.initialDisplayMode || !!this.title && !!this.content);
  }
  get active() {
    return this.viewModel.active;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e13) {
    this.viewModel.content = e13;
  }
  get icon() {
    return null;
  }
  get featureMenuOpen() {
    return this.viewModel.featureMenuOpen;
  }
  set featureMenuOpen(e13) {
    this.viewModel.featureMenuOpen = e13;
  }
  get featureMenuTitle() {
    return this.viewModel.featureMenuTitle;
  }
  set featureMenuTitle(e13) {
    this.viewModel.featureMenuTitle = e13;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e13) {
    this.viewModel.features = e13;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e13) {
    this.viewModel.goToOverride = e13;
  }
  get initialDisplayMode() {
    return this.viewModel.initialDisplayMode;
  }
  set initialDisplayMode(e13) {
    this.viewModel.initialDisplayMode = e13;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e13) {
    this.viewModel.location = e13;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e13) {
    this._overrideIfSome("label", e13);
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e13) {
    this.viewModel.map = e13;
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e13) {
    this.viewModel.promises = e13;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedDrillInFeature() {
    const e13 = Array.from(this._drillInFlowItems).at(-1);
    if (!e13) return null;
    const { flowType: t8 } = e13;
    return "feature-association" === t8 || "feature-relationship" === t8 ? e13.graphic ?? null : null;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e13) {
    this.viewModel.selectedFeatureIndex = e13;
  }
  get selectedFeatureWidget() {
    const { _feature: e13, headingLevel: t8, _drillInFlowItems: i6, timeZone: o4, spatialReference: s4, map: n9 } = this, { selectedFeatureViewModel: r3 } = this.viewModel, l7 = { title: false };
    return r3 ? (e13 ? (e13.viewModel = r3, e13.visibleElements = l7) : this._feature = new j3({ flowItems: i6, headingLevel: t8 + 1, timeZone: o4, spatialReference: s4, map: n9, viewModel: r3, visibleElements: l7 }), this._feature) : null;
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e13) {
    this.viewModel.spatialReference = e13;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  get timeZone() {
    return this.viewModel.timeZone;
  }
  set timeZone(e13) {
    this.viewModel.timeZone = e13;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e13) {
    this.viewModel.updateLocationEnabled = e13;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e13) {
    this.viewModel.view = e13;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e13) {
    this.viewModel.visible = e13;
  }
  blur() {
    var _a;
    const { active: e13 } = this.viewModel;
    e13 ? (_a = this._rootFlowItemNode) == null ? void 0 : _a.blur() : n.getLogger(this).warn("Features can only be blurred when currently active.");
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.viewModel.visible = false;
  }
  fetchFeatures(e13, t8) {
    return this.viewModel.fetchFeatures(e13, t8);
  }
  focus() {
    const { active: e13 } = this.viewModel;
    e13 ? this._focusFlowItemNode() : n.getLogger(this).warn("Features can only be focused when currently active.");
  }
  next() {
    return this.viewModel.next();
  }
  open(e13) {
    this.removeHandles(j5);
    const t8 = { collapsed: (e13 == null ? void 0 : e13.collapsed) ?? false };
    this.set(t8), this.viewModel.open(e13), this.addHandles(p(() => !this.viewModel.waitingForResult, () => this._addSelectedFeatureIndexHandle(), { once: true }));
  }
  previous() {
    return this.viewModel.previous();
  }
  triggerAction(e13) {
    return this.viewModel.triggerAction(e13);
  }
  render() {
    return n2("div", { afterCreate: this._storeRootNode, bind: this, class: this.classes(n7.base, e4.widget, e4.panel), onkeydown: this._onMainKeydown }, this._renderHeader(), this._renderContentContainer());
  }
  _renderFeatureNavigation() {
    return [this._renderPagination(), "list" === this.initialDisplayMode ? this._renderFeaturePaginationText() : this._renderFeatureMenuButton()];
  }
  _renderHeader() {
    return this.featureNavigationTop && this._featureNavigationVisible ? n2("div", { class: n7.header, key: "header-actions" }, this._renderFeatureNavigation()) : null;
  }
  _renderFooter() {
    return !this.featureNavigationTop && this._featureNavigationVisible ? n2("div", { class: n7.footer, key: "footer-actions", slot: "footer" }, this._renderFeatureNavigation()) : null;
  }
  _renderFeaturePaginationText() {
    const { messages: e13, viewModel: t8 } = this, { featureCount: i6, selectedFeatureIndex: o4 } = t8;
    return n2("div", { class: n7.paginationText, key: "feature-pagination-text" }, s2(e13.pageText, { index: l(o4 + 1), total: l(i6) }));
  }
  _renderFeatureMenuButton() {
    const { messages: e13, viewModel: t8 } = this, { featureCount: i6, selectedFeatureIndex: o4, pendingPromisesCount: s4 } = t8;
    return n2("calcite-action", { appearance: "solid", bind: this, class: n7.paginationMenuButton, icon: "list", key: "feature-menu-button", label: e13.selectFeature, loading: s4 > 0, onclick: this._openFeatureMenu, scale: "s", text: s2(e13.pageText, { index: l(o4 + 1), total: l(i6) }), textEnabled: true, title: e13.selectFeature });
  }
  _renderPagination() {
    const { previous: e13, next: t8 } = this.messagesCommon.pagination;
    return n2("calcite-action-bar", { class: n7.paginationActionBar, expandDisabled: true, key: "pagination-action-bar", layout: "horizontal", overflowActionsDisabled: true, scale: "s" }, n2("calcite-action-group", { scale: "s" }, n2("calcite-action", { appearance: "solid", class: n7.paginationPrevious, icon: "chevron-left", iconFlipRtl: true, label: e13, onclick: this._previousFeature, scale: "s", text: e13, title: e13 }), n2("calcite-action", { appearance: "solid", icon: "chevron-right", iconFlipRtl: true, label: t8, onclick: this._nextFeature, scale: "s", text: t8, title: t8 })));
  }
  _renderFeatureMenuItem(e13) {
    const { initialDisplayMode: t8 } = this, { selectedFeatureViewModel: i6, featureViewModels: o4 } = this.viewModel, s4 = e13 === i6, n9 = o4.indexOf(e13);
    return n2("calcite-list-item", { bind: this, "data-feature-index": n9, key: `feature-menu-item-${e13.uid}`, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onmouseleave: this._removeActiveFeature, onmouseover: this._setActiveFeature, selected: s4, onCalciteListItemSelect: this._selectFeature }, n2("span", { innerHTML: e13.title || this.messagesCommon.untitled, slot: "content" }), "list" === t8 ? n2("calcite-icon", { flipRtl: true, icon: "chevron-right", scale: "s", slot: "content-end" }) : null);
  }
  _groupResultsByLayer() {
    const { featureViewModels: e13 } = this.viewModel, t8 = /* @__PURE__ */ new Map();
    return e13.forEach((e14) => {
      const i6 = e14 == null ? void 0 : e14.graphic;
      if (!i6) return;
      const { layer: o4, sourceLayer: s4 } = i6, n9 = (D3(o4) ? o4 : null) || (D3(s4) ? s4 : null), r3 = t8.get(n9) ?? [];
      t8.set(n9, [...r3, e14]);
    }), t8;
  }
  _renderFeatureMenu() {
    const { messages: e13, viewModel: t8 } = this, i6 = this._groupResultsByLayer(), o4 = "list" === this.initialDisplayMode ? "none" : "single";
    return t8.featureViewModels.length ? n2("calcite-list", { displayMode: "flat", label: e13 == null ? void 0 : e13.featuresList, selectionAppearance: "icon", selectionMode: o4 }, Array.from(i6.keys(), (e14) => {
      var _a;
      const t9 = (_a = i6.get(e14)) == null ? void 0 : _a.map((e15) => this._renderFeatureMenuItem(e15)), o5 = e14 ? e14.title ?? this.messagesCommon.untitled : null;
      return this.visibleElements.featureListLayerTitle && null !== o5 ? n2("calcite-list-item-group", { heading: o5, key: (e14 == null ? void 0 : e14.uid) || "map-graphics" }, t9) : t9;
    })) : null;
  }
  _renderHeaderAction(e13, t8) {
    const i6 = e13.title || "";
    return e13.visible ? n2("calcite-action", { active: "toggle" === e13.type && e13.value, appearance: "solid", bind: this, "data-action-id": e13.id, "data-action-uid": e13.uid, disabled: e13.disabled, icon: e13.icon ?? void 0, indicator: e13.indicator, key: `header-action-${t8}`, loading: e13.active, onclick: this._triggerHeaderAction, slot: "header-actions-end", text: i6, title: i6 }) : null;
  }
  _renderHeaderActions() {
    return this.headerActions.map((e13, t8) => this._renderHeaderAction(e13, t8)).toArray();
  }
  _renderContentFeature() {
    const { headingLevel: e13, visibleElements: t8, _isCollapsed: i6, _collapseEnabled: o4, featureNavigationTop: s4, _drillInFlowItems: n9, initialDisplayMode: r3, selectedFeature: l7, featureMenuOpen: a7 } = this, { title: d4, active: c9 } = this.viewModel, u5 = t8.heading && d4 ? d4 : "";
    if ("list" === r3 && !l7) return null;
    const h6 = 0 === n9.length && ("list" === r3 ? !!l7 : !a7);
    return n2("calcite-flow-item", { afterCreate: this._storeRootFlowItemNode, bind: this, class: this.classes({ [n7.contentFeature]: true, [n7.flowItemCollapsed]: i6 }), closable: t8.closeButton, closed: !c9, collapsed: i6, collapseDirection: s4 ? "down" : "up", collapsible: o4, headingLevel: e13, key: "root-flow-item", selected: h6, onCalciteFlowItemBack: this._handleFeatureBack, onCalciteFlowItemClose: this.close, onCalciteFlowItemToggle: this._handleCollapseToggle }, u5 ? n2(e5, { class: this.classes(n7.featuresHeading, e4.heading), innerHTML: u5, key: "header-content", level: this.headingLevel, slot: "header-content" }) : null, this._renderHeaderActions(), this._renderActionBar(), n2("div", { class: this.classes(n7.container, n7.contentContainer) }, this._renderContent()), this._renderFooter());
  }
  _renderFeatureMenuContainer() {
    const { viewModel: e13, visibleElements: t8, featureMenuTitle: i6, messages: o4, messagesCommon: s4, _drillInFlowItems: n9, initialDisplayMode: r3, featureMenuOpen: l7, selectedFeature: a7, _collapseEnabled: d4, _isCollapsed: c9, featureNavigationTop: u5, headingLevel: h6 } = this, { active: p7, featureViewModels: m5, pendingPromisesCount: v5 } = e13, { featureMenuHeading: g6 } = t8, w5 = i6 ?? o4.selectFeature;
    if ("feature" === r3 && !l7) return null;
    const f4 = 0 === n9.length && ("list" === r3 ? !a7 : l7);
    return n2("calcite-flow-item", { afterCreate: this._storeFeatureMenuFlowItemNode, bind: this, class: this.classes({ [n7.flowItemCollapsed]: c9 }), closable: "list" === r3 && t8.closeButton, closed: !p7, collapsed: "list" === r3 && c9, collapseDirection: u5 ? "down" : "up", collapsible: "list" === r3 && d4, description: g6 ? s2(o4.total, { total: m5.length }) : void 0, heading: g6 ? w5 : void 0, headingLevel: h6, key: "feature-menu", loading: e13.waitingForContents, selected: f4, onCalciteFlowItemBack: (e14) => {
      e14.preventDefault(), this._handleFeatureMenuBack();
    }, onCalciteFlowItemClose: this.close, onCalciteFlowItemToggle: this._handleCollapseToggle }, "list" === r3 ? this._renderHeaderActions() : null, v5 > 0 ? n2("calcite-loader", { class: n7.loader, inline: true, key: "feature-menu-loader", label: s4.loading, slot: "header-actions-end" }) : null, n2("div", { class: n7.container }, this._renderFeatureMenu()), n2("div", { afterCreate: this._featureMenuIntersectionObserverCreated, bind: this, class: n7.featureMenuObserver }), "feature" === r3 ? n2("calcite-button", { appearance: "transparent", onclick: this._handleFeatureMenuBack, slot: "footer-actions", width: "full" }, s4.back) : null);
  }
  _renderContentContainer() {
    const e13 = "list" === this.initialDisplayMode ? [this._renderFeatureMenuContainer(), this._renderContentFeature(), this._drillInWidget.render()] : [this._renderContentFeature(), this._renderFeatureMenuContainer(), this._drillInWidget.render()];
    return this.visibleElements.flow ? n2("calcite-flow", { key: "content-container" }, e13) : e13;
  }
  _getFallbackIcon(e13) {
    const { className: t8, icon: i6 } = e13;
    if (i6) return null;
    const o4 = e7({ action: e13, feature: this.selectedFeature }), s4 = { [n7.icon]: !!t8, [n7.actionImage]: !!o4 };
    return t8 && (s4[t8] = true), o4 || t8 ? n2("span", { "aria-hidden": "true", class: this.classes(n7.icon, s4), key: "icon", styles: n6(o4) }) : null;
  }
  _renderActionBar() {
    var _a;
    return !this._isCollapsed && this.visibleElements.actionBar && ((_a = this.viewModel.allActions) == null ? void 0 : _a.length) ? n2("calcite-action-bar", { expandDisabled: true, expanded: !this._hideActionText, key: "header-action-bar", scale: "s", slot: "action-bar" }, n2("calcite-action-group", { afterCreate: (e13) => this._actionBarMenuNode = e13, overlayPositioning: "fixed", scale: "s" }, this._renderActions())) : null;
  }
  _renderActions() {
    return this.viewModel.allActions.toArray().map(this._renderAction);
  }
  _renderContent() {
    var _a;
    const e13 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e13 ? "string" == typeof e13 ? n2("div", { class: t.contentNode, innerHTML: e13, key: e13 }) : this.renderNodeContent(e13) : null;
  }
  _handleCollapseToggle() {
    this.collapsed = !this.collapsed;
  }
  async _openRelatedFeature(e13) {
    await e13.viewModel.updateGeometry();
    const t8 = e13.graphic, i6 = t8 == null ? void 0 : t8.geometry;
    if (null == i6 || null == t8) return;
    this._destroyDrillInFlowItemWidgets(), await this.viewModel.zoomTo({ target: i6 });
    const o4 = n5(i6);
    this.open({ features: [t8], location: null != o4 ? o4 : void 0 }), this._focusFlowItemNode();
  }
  async _focusFlowItemNode() {
    var _a, _b;
    (_a = this._focusAbortController) == null ? void 0 : _a.abort(), this._focusAbortController = new AbortController();
    const e13 = this._focusAbortController.signal;
    await d(R(e13));
    const t8 = (_b = this._rootNode) == null ? void 0 : _b.querySelector("calcite-flow-item[selected]");
    T(t8);
  }
  _storeRootFlowItemNode(e13) {
    this._rootFlowItemNode = e13;
  }
  _storeFeatureMenuFlowItemNode(e13) {
    this._featureMenuViewportNode = e13;
  }
  _setActiveFeature(e13) {
    var _a;
    const { viewModel: t8 } = this, i6 = e13.currentTarget["data-feature-index"];
    t8.activeFeature = ((_a = t8.features) == null ? void 0 : _a[i6]) || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _selectFeature(e13) {
    const t8 = e13.currentTarget["data-feature-index"];
    isNaN(t8) || (this.viewModel.selectedFeatureIndex = t8), "feature" === this.initialDisplayMode ? this._handleFeatureMenuBack() : this._focusFlowItemNode();
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e13) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e13), this._featureMenuIntersectionObserverNode = e13;
  }
  _getActionIcon(e13) {
    return e13.icon ? e13.icon : e13.image || e13.className ? void 0 : "question";
  }
  _getActionTitle(e13) {
    const { messages: t8, selectedFeature: i6, messagesCommon: o4 } = this, { id: s4 } = e13, n9 = i6 == null ? void 0 : i6.attributes, r3 = e13.title ?? "", l7 = "zoom-to-feature" === s4 ? s2(r3, { messages: t8 }) : "remove-selected-feature" === s4 ? s2(r3, { messages: o4 }) : "zoom-to-clustered-features" === s4 || "browse-clustered-features" === s4 ? s2(r3, { messages: t8 }) : e13.title;
    return l7 && n9 ? s2(l7, n9) : l7 ?? "";
  }
  _onMainKeydown(e13) {
    const { key: t8 } = e13;
    "ArrowLeft" === t8 && (e13.stopPropagation(), this._handleFeatureMenuBack(), this.previous()), "ArrowRight" === t8 && (e13.stopPropagation(), this._handleFeatureMenuBack(), this.next());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && this._featureMenuViewportNode.scrollContentTo({ top: 0 });
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e13 } = this;
    e13 && (this.viewModel.content = e13);
  }
  _setTitleFromFeatureWidget() {
    const { selectedFeatureWidget: e13, messagesCommon: t8 } = this, i6 = e13 == null ? void 0 : e13.viewModel;
    e13 && (this.viewModel.title = "error" === (i6 == null ? void 0 : i6.state) ? t8 == null ? void 0 : t8.errorMessage : (i6 == null ? void 0 : i6.title) || "");
  }
  _addSelectedFeatureIndexHandle() {
    const e13 = d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e14, t8) => this._selectedFeatureIndexUpdated(e14, t8));
    this.addHandles(e13, j5);
  }
  _selectedFeatureIndexUpdated(e13, t8) {
    const { featureCount: i6 } = this.viewModel;
    i6 && e13 !== t8 && -1 !== e13 && (this._destroyDrillInFlowItemWidgets(), this._rootFlowItemNode && this._rootFlowItemNode.scrollContentTo({ top: 0 }));
  }
  _triggerHeaderAction(e13) {
    const t8 = e13.currentTarget;
    if (t8.disabled) return;
    const i6 = t8.dataset.actionUid, o4 = this.headerActions.find(({ uid: e14 }) => e14 === i6);
    o4 && !o4.disabled && ("toggle" === (o4 == null ? void 0 : o4.type) && (o4.value = !o4.value), this.emit("trigger-header-action", { action: o4 }));
  }
  _triggerAction(e13) {
    const t8 = e13.currentTarget;
    if (t8.disabled) return;
    const i6 = t8.dataset.actionUid, { allActions: o4 } = this.viewModel, s4 = o4.findIndex((e14) => e14.uid === i6), n9 = o4.at(s4);
    n9 && "toggle" === n9.type && (n9.value = !n9.value), this.viewModel.triggerAction(s4);
  }
  _createSpinner(e13) {
    e13 && (this._spinner = new h({ view: e13 }), e13.ui.add(this._spinner, { key: W, position: "manual", internal: true }));
  }
  _wireUpView(e13) {
    var _a;
    this._destroySpinner(), e13 && ((_a = this.visibleElements) == null ? void 0 : _a.spinner) && this._createSpinner(e13);
  }
  _hideSpinner() {
    const { _spinner: e13 } = this;
    e13 && (e13.location = null, e13.hide());
  }
  _viewReadyChange(e13, t8) {
    var _a;
    e13 ? this._wireUpView((_a = this.viewModel) == null ? void 0 : _a.view) : t8 && this.viewModel.clear();
  }
  _viewChange(e13, t8) {
    e13 && t8 && this.viewModel.clear();
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e13 } = this;
    e13 && (e13.viewModel = null, !e13.destroyed && e13.destroy()), this._feature = null;
  }
  _closeOpenActionMenu() {
    const { _actionBarMenuNode: e13 } = this;
    e13 && (e13.menuOpen = false);
  }
  _destroyDrillInFlowItemWidgets() {
    this._drillInFlowItems.drain((e13) => {
      "showAllEnabled" in e13.viewModel && (e13.viewModel.showAllEnabled = false), "activeCategory" in e13.viewModel && (e13.viewModel.activeCategory = null), e13.viewModel = null, e13.destroy();
    });
  }
  _toggleScreenLocationEnabled() {
    const { viewModel: e13 } = this;
    e13 && (e13.screenLocationEnabled = e13.active);
  }
  _displaySpinner() {
    const { _spinner: e13 } = this;
    if (!e13) return;
    const { location: t8, waitingForResult: i6 } = this.viewModel;
    i6 && t8 ? e13.show({ location: t8 }) : e13.hide();
  }
  _destroySpinner() {
    var _a, _b;
    const { _spinner: e13 } = this;
    e13 && ((_b = (_a = e13.view) == null ? void 0 : _a.ui) == null ? void 0 : _b.remove(e13, W), e13.destroy(), this._spinner = null);
  }
  _spinnerEnabledChange(e13) {
    var _a;
    this._destroySpinner(), e13 && this._createSpinner((_a = this.viewModel) == null ? void 0 : _a.view);
  }
};
r([m()], S3.prototype, "_drillInFlowItems", void 0), r([m()], S3.prototype, "_hideActionText", null), r([m()], S3.prototype, "_featureNavigationVisible", null), r([m()], S3.prototype, "_isCollapsed", null), r([m()], S3.prototype, "_collapseEnabled", null), r([m({ readOnly: true })], S3.prototype, "active", null), r([m()], S3.prototype, "collapsed", void 0), r([m()], S3.prototype, "content", null), r([m()], S3.prototype, "icon", null), r([m()], S3.prototype, "featureMenuOpen", null), r([m()], S3.prototype, "featureMenuTitle", null), r([m()], S3.prototype, "featureNavigationTop", void 0), r([m()], S3.prototype, "features", null), r([m()], S3.prototype, "goToOverride", null), r([m({ type: i4 })], S3.prototype, "headerActions", void 0), r([m()], S3.prototype, "headingLevel", void 0), r([m()], S3.prototype, "initialDisplayMode", null), r([m()], S3.prototype, "location", null), r([m()], S3.prototype, "label", null), r([m()], S3.prototype, "map", null), r([m(), e2("esri/widgets/Features/t9n/Features")], S3.prototype, "messages", void 0), r([m(), e2("esri/t9n/common")], S3.prototype, "messagesCommon", void 0), r([m()], S3.prototype, "promises", null), r([m()], S3.prototype, "responsiveActionsEnabled", void 0), r([m({ readOnly: true })], S3.prototype, "selectedFeature", null), r([m({ readOnly: true })], S3.prototype, "selectedDrillInFeature", null), r([m()], S3.prototype, "selectedFeatureIndex", null), r([m({ readOnly: true })], S3.prototype, "selectedFeatureWidget", null), r([m()], S3.prototype, "spatialReference", null), r([m()], S3.prototype, "title", null), r([m()], S3.prototype, "timeZone", null), r([m()], S3.prototype, "updateLocationEnabled", null), r([m()], S3.prototype, "view", null), r([m({ type: D2 }), e6(["triggerAction", "trigger-action"])], S3.prototype, "viewModel", void 0), r([m({ type: l6, nonNullable: true })], S3.prototype, "visibleElements", void 0), r([m()], S3.prototype, "visible", null), S3 = r([a("esri.widgets.Features")], S3);
var B2 = S3;

// node_modules/@arcgis/core/widgets/Popup/css.js
var t6 = "esri-popup";
var o3 = `${t6}--is-docked`;
var e11 = { base: t6, baseHidden: `${t6}--hidden`, main: `${t6}__main-container`, shadow: `${t6}--shadow`, isDocked: o3, isDockedTopLeft: `${o3}-top-left`, isDockedTopCenter: `${o3}-top-center`, isDockedTopRight: `${o3}-top-right`, isDockedBottomLeft: `${o3}-bottom-left`, isDockedBottomCenter: `${o3}-bottom-center`, isDockedBottomRight: `${o3}-bottom-right`, alignTopCenter: `${t6}--aligned-top-center`, alignBottomCenter: `${t6}--aligned-bottom-center`, alignTopLeft: `${t6}--aligned-top-left`, alignBottomLeft: `${t6}--aligned-bottom-left`, alignTopRight: `${t6}--aligned-top-right`, alignBottomRight: `${t6}--aligned-bottom-right`, pointer: `${t6}__pointer`, pointerDirection: `${t6}__pointer-direction` };

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var e12 = class extends D2 {
  constructor(o4) {
    super(o4);
  }
};
e12 = r([a("esri.widgets.Popup.PopupViewModel")], e12);
var t7 = e12;

// node_modules/@arcgis/core/widgets/Popup/PopupVisibleElements.js
var s3 = class extends g {
  constructor() {
    super(...arguments), this.actionBar = true, this.closeButton = true, this.collapseButton = true, this.featureMenuHeading = true, this.featureNavigation = true, this.featureListLayerTitle = true, this.heading = true, this.spinner = true;
  }
};
r([m({ type: Boolean, nonNullable: true })], s3.prototype, "actionBar", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "closeButton", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "collapseButton", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "featureMenuHeading", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "featureNavigation", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "featureListLayerTitle", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "heading", void 0), r([m({ type: Boolean, nonNullable: true })], s3.prototype, "spinner", void 0), s3 = r([a("esri.widgets.Popup.PopupVisibleElements")], s3);
var a6 = s3;

// node_modules/@arcgis/core/widgets/Popup.js
var E2 = 200;
var C2 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var D4 = class extends O {
  constructor(e13, t8) {
    super(e13, t8), this._dockAction = new c3({ id: "popup-dock-action" }), this._featuresWidget = new B2({ responsiveActionsEnabled: true }), this._containerNode = null, this._mainContainerNode = null, this._pointerOffsetInPx = 16, this._focusAbortController = null, this.alignment = "auto", this.dockEnabled = false, this.headingLevel = 2, this.messages = null, this.viewModel = new t7(), this.visibleElements = new a6();
  }
  initialize() {
    this.addHandles([d2(() => {
      var _a, _b;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, this.dockEnabled];
    }, () => this._handleDockIcon(), P), d2(() => {
      var _a, _b;
      return [this.dockEnabled, (_a = this.messages) == null ? void 0 : _a.undock, (_b = this.messages) == null ? void 0 : _b.dock];
    }, () => this._handleDockEnabled(), P), d2(() => this.dockOptions, (e13) => {
      const { _dockAction: t8 } = this, i6 = this._featuresWidget.headerActions;
      i6.remove(t8), e13.buttonEnabled && i6.add(t8);
    }, P), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), d2(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), d2(() => {
      var _a, _b, _c, _d, _e, _f, _g;
      return [(_a = this.viewModel) == null ? void 0 : _a.screenLocation, (_c = (_b = this.viewModel) == null ? void 0 : _b.view) == null ? void 0 : _c.padding, (_e = (_d = this.viewModel) == null ? void 0 : _d.view) == null ? void 0 : _e.size, (_f = this.viewModel) == null ? void 0 : _f.active, (_g = this.viewModel) == null ? void 0 : _g.location, this.alignment];
    }, () => this.reposition()), d2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e13, t8) => this._updateDockEnabledForViewSize(e13, t8)), d2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e13, t8) => this._viewChange(e13, t8)), d2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e13, t8) => this._viewReadyChange(e13 ?? false, t8 ?? false)), d2(() => this.viewModel, () => this._featuresWidget.viewModel = this.viewModel, P), d2(() => this._featureNavigationTop, (e13) => this._featuresWidget.featureNavigationTop = e13, P), d2(() => this.headingLevel, (e13) => this._featuresWidget.headingLevel = e13, P), d2(() => this.visibleElements.actionBar, (e13) => this._featuresWidget.visibleElements.actionBar = !!e13, P), d2(() => this.visibleElements.closeButton, (e13) => this._featuresWidget.visibleElements.closeButton = !!e13, P), d2(() => this.visibleElements.collapseButton, (e13) => this._featuresWidget.visibleElements.collapseButton = !!e13, P), d2(() => this.visibleElements.heading, (e13) => this._featuresWidget.visibleElements.heading = !!e13, P), d2(() => this.visibleElements.spinner, (e13) => this._featuresWidget.visibleElements.spinner = !!e13, P), d2(() => this.visibleElements.featureNavigation, (e13) => this._featuresWidget.visibleElements.featureNavigation = !!e13, P), d2(() => this.visibleElements.featureMenuHeading, (e13) => this._featuresWidget.visibleElements.featureMenuHeading = !!e13, P), d2(() => this.visibleElements.featureListLayerTitle, (e13) => this._featuresWidget.visibleElements.featureListLayerTitle = !!e13, P), v(() => this._featuresWidget, "trigger-header-action", (e13) => {
      e13.action === this._dockAction && (this.dockEnabled = !this.dockEnabled);
    })]);
  }
  destroy() {
    var _a;
    this._dockAction.destroy(), this._featuresWidget && (this._featuresWidget.viewModel = new D2(), this._featuresWidget.destroy()), (_a = this._focusAbortController) == null ? void 0 : _a.abort();
  }
  get _featureNavigationTop() {
    const { currentAlignment: e13, currentDockPosition: t8 } = this;
    return "bottom-left" === e13 || "bottom-center" === e13 || "bottom-right" === e13 || "top-left" === t8 || "top-center" === t8 || "top-right" === t8;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e13) {
    this.viewModel.actions = e13;
  }
  get active() {
    return this.viewModel.active;
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e13) {
    this.viewModel.autoCloseEnabled = e13;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e13) {
    this.viewModel.defaultPopupTemplateEnabled = e13;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e13) {
    this.viewModel.content = e13;
  }
  get collapsed() {
    return this._featuresWidget.collapsed;
  }
  set collapsed(e13) {
    this._featuresWidget.collapsed = e13;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || C2;
  }
  set dockOptions(e13) {
    var _a, _b;
    const t8 = { ...C2 }, i6 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.breakpoints, o4 = {};
    i6 && (o4.width = i6.xsmall, o4.height = i6.xsmall);
    const s4 = { ...t8, ...e13 }, n9 = { ...t8.breakpoint, ...o4 }, { breakpoint: r3 } = s4;
    "object" == typeof r3 ? s4.breakpoint = { ...n9, ...r3 } : r3 && (s4.breakpoint = n9), this._set("dockOptions", s4), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get featureMenuOpen() {
    return this.viewModel.featureMenuOpen;
  }
  set featureMenuOpen(e13) {
    this.viewModel.featureMenuOpen = e13;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e13) {
    this.viewModel.features = e13;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e13) {
    this.viewModel.goToOverride = e13;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e13) {
    this.viewModel.highlightEnabled = e13;
  }
  get icon() {
    return "popup";
  }
  set icon(e13) {
    this._overrideIfSome("icon", e13);
  }
  get initialDisplayMode() {
    return this.viewModel.initialDisplayMode;
  }
  set initialDisplayMode(e13) {
    this.viewModel.initialDisplayMode = e13;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e13) {
    this.viewModel.location = e13;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e13) {
    this._overrideIfSome("label", e13);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e13) {
    this.viewModel.promises = e13;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedDrillInFeature() {
    return this._featuresWidget.selectedDrillInFeature ?? null;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e13) {
    this.viewModel.selectedFeatureIndex = e13;
  }
  get selectedFeatureWidget() {
    return this._featuresWidget.selectedFeatureWidget;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e13) {
    this.viewModel.updateLocationEnabled = e13;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e13) {
    this.viewModel.view = e13;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e13) {
    this.viewModel.visible = e13;
  }
  blur() {
    const { active: e13 } = this.viewModel;
    e13 || n.getLogger(this).warn("Popup can only be blurred when currently active."), this._featuresWidget.blur();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e13, t8) {
    return this.viewModel.fetchFeatures(e13, t8);
  }
  focus() {
    const { active: e13 } = this.viewModel;
    e13 || n.getLogger(this).warn("Popup can only be focused when currently active."), this._handleFocus();
  }
  next() {
    return this.viewModel.next();
  }
  open(e13) {
    const t8 = !!e13 && !!e13.featureMenuOpen, i6 = { collapsed: !!e13 && !!e13.collapsed, featureMenuOpen: t8 };
    this.set(i6), this.viewModel.open(e13), (e13 == null ? void 0 : e13.shouldFocus) && this._handleFocus(true);
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e13) {
    return this.viewModel.triggerAction(e13);
  }
  render() {
    var _a, _b, _c, _d;
    const { dockEnabled: e13, currentAlignment: t8, currentDockPosition: i6 } = this, { active: o4, screenLocation: s4 } = this.viewModel, n9 = o4 && e13, r3 = o4 && !e13, l7 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, a7 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, c9 = { [e11.alignTopCenter]: "top-center" === t8, [e11.alignBottomCenter]: "bottom-center" === t8, [e11.alignTopLeft]: "top-left" === t8, [e11.alignBottomLeft]: "bottom-left" === t8, [e11.alignTopRight]: "top-right" === t8, [e11.alignBottomRight]: "bottom-right" === t8, [e11.isDocked]: n9, [e11.shadow]: r3, [e11.isDockedTopLeft]: "top-left" === i6, [e11.isDockedTopCenter]: "top-center" === i6, [e11.isDockedTopRight]: "top-right" === i6, [e11.isDockedBottomLeft]: "bottom-left" === i6, [e11.isDockedBottomCenter]: "bottom-center" === i6, [e11.isDockedBottomRight]: "bottom-right" === i6 };
    return n2("div", { afterCreate: this._positionContainer, afterUpdate: this._positionContainer, "aria-hidden": (!o4).toString(), "aria-label": c(this.title ?? ""), "aria-modal": "false", bind: this, class: this.classes(e11.base, c9, { [e11.baseHidden]: !s4 && !e13 }), "data-layer-id": a7, "data-layer-title": l7, role: "dialog" }, o4 ? [this._renderMainContainer(), this._renderPointer()] : null);
  }
  _renderPointer() {
    return this.dockEnabled ? null : n2("div", { class: e11.pointer, key: "popup-pointer", role: "presentation" }, n2("div", { class: this.classes(e11.pointerDirection, e11.shadow) }));
  }
  _renderMainContainer() {
    const { dockEnabled: e13 } = this, t8 = { [e11.shadow]: e13 };
    return n2("div", { afterCreate: this._setMainContainerNode, afterUpdate: this._setMainContainerNode, bind: this, class: this.classes(e11.main, e4.widget, t8) }, this._featuresWidget.render());
  }
  _getAnimationDurationMS() {
    const { _containerNode: e13 } = this;
    return e13 ? 1e3 * parseFloat(window.getComputedStyle(e13).animationDuration) : E2;
  }
  async _handleFocus(e13 = false) {
    var _a;
    (_a = this._focusAbortController) == null ? void 0 : _a.abort(), this._focusAbortController = new AbortController();
    const t8 = this._focusAbortController.signal;
    e13 && await w(() => {
      var _a2;
      return true === ((_a2 = this.viewModel) == null ? void 0 : _a2.active);
    }, { signal: t8 }), await d(R(t8)), await d(A(this._getAnimationDurationMS(), t8)), this._featuresWidget.focus();
  }
  _isOutsideView(e13) {
    const { popupHeight: t8, popupWidth: i6, screenLocation: o4, side: s4, view: n9 } = e13;
    if (isNaN(i6) || isNaN(t8) || !n9 || !o4) return false;
    const r3 = n9.padding;
    return "right" === s4 && o4.x + i6 / 2 > n9.width - r3.right || ("left" === s4 && o4.x - i6 / 2 < r3.left || ("top" === s4 && o4.y - t8 < r3.top || "bottom" === s4 && o4.y + t8 > n9.height - r3.bottom));
  }
  _calculateAutoAlignment(e13) {
    if ("auto" !== e13) return e13;
    const { _pointerOffsetInPx: t8, _containerNode: i6, _mainContainerNode: o4, viewModel: s4 } = this, { screenLocation: n9, view: r3 } = s4;
    if (null == n9 || !r3 || !i6) return "top-center";
    function l7(e14) {
      return parseInt(e14.replaceAll(/[^-\d.]/g, ""), 10);
    }
    const a7 = o4 ? window.getComputedStyle(o4, null) : null, d4 = a7 ? l7(a7.getPropertyValue("max-height")) : 0, c9 = a7 ? l7(a7.getPropertyValue("height")) : 0, { height: h6, width: u5 } = i6.getBoundingClientRect(), p7 = u5 + t8, g6 = Math.max(h6, d4, c9) + t8, v5 = this._isOutsideView({ popupHeight: g6, popupWidth: p7, screenLocation: n9, side: "right", view: r3 }), m5 = this._isOutsideView({ popupHeight: g6, popupWidth: p7, screenLocation: n9, side: "left", view: r3 }), f4 = this._isOutsideView({ popupHeight: g6, popupWidth: p7, screenLocation: n9, side: "top", view: r3 }), w5 = this._isOutsideView({ popupHeight: g6, popupWidth: p7, screenLocation: n9, side: "bottom", view: r3 });
    return m5 ? f4 ? "bottom-right" : "top-right" : v5 ? f4 ? "bottom-left" : "top-left" : f4 ? w5 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e13) {
    return "function" == typeof e13 ? e13.call(this) : e13;
  }
  _getCurrentAlignment() {
    const { alignment: e13, dockEnabled: t8 } = this;
    return t8 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e13)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e13) {
    const t8 = ["left", "right"];
    return g2(this.container) && t8.reverse(), e13 == null ? void 0 : e13.replace(/leading/gi, t8[0]).replaceAll(/trailing/gi, t8[1]);
  }
  _callDockPosition(e13) {
    return "function" == typeof e13 ? e13.call(this) : e13;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _calculateAutoDockPosition(e13) {
    var _a;
    if ("auto" !== e13) return e13;
    const t8 = (_a = this.viewModel) == null ? void 0 : _a.view, i6 = g2(this.container) ? "top-left" : "top-right";
    if (!t8) return i6;
    const o4 = t8.padding || { left: 0, right: 0, top: 0, bottom: 0 }, s4 = t8.width - o4.left - o4.right, { breakpoints: n9 } = t8;
    return n9 && s4 <= n9.xsmall ? "bottom-center" : i6;
  }
  _getDockIcon() {
    const e13 = this._getDockPosition();
    if (this.dockEnabled) return "minimize";
    switch (e13) {
      case "top-left":
      case "bottom-left":
        return "dock-left";
      case "top-center":
        return "maximize";
      case "bottom-center":
        return "dock-bottom";
      default:
        return "dock-right";
    }
  }
  _handleDockIcon() {
    this._dockAction.icon = this._getDockIcon();
  }
  _handleDockEnabled() {
    var _a, _b;
    this._dockAction.title = this.dockEnabled ? (_a = this.messages) == null ? void 0 : _a.undock : (_b = this.messages) == null ? void 0 : _b.dock;
  }
  _setMainContainerNode(e13) {
    this._mainContainerNode = e13;
  }
  _positionContainer(e13 = this._containerNode) {
    if (e13 && (this._containerNode = e13), !this._containerNode) return;
    const { screenLocation: t8 } = this.viewModel, { width: i6 } = this._containerNode.getBoundingClientRect(), o4 = this._calculatePositionStyle(t8, i6);
    o4 && Object.assign(this._containerNode.style, o4);
  }
  _calculateFullWidth(e13) {
    const { currentAlignment: t8, _pointerOffsetInPx: i6 } = this;
    return "top-left" === t8 || "bottom-left" === t8 || "top-right" === t8 || "bottom-right" === t8 ? e13 + i6 : e13;
  }
  _calculateAlignmentPosition(e13, t8, i6, o4) {
    const { currentAlignment: s4, _pointerOffsetInPx: n9 } = this;
    if (!i6) return;
    const { padding: r3 } = i6, l7 = o4 / 2, a7 = i6.height - t8, d4 = i6.width - e13;
    return "bottom-center" === s4 ? { top: t8 + n9 - r3.top, left: e13 - l7 - r3.left } : "top-left" === s4 ? { bottom: a7 + n9 - r3.bottom, right: d4 + n9 - r3.right } : "bottom-left" === s4 ? { top: t8 + n9 - r3.top, right: d4 + n9 - r3.right } : "top-right" === s4 ? { bottom: a7 + n9 - r3.bottom, left: e13 + n9 - r3.left } : "bottom-right" === s4 ? { top: t8 + n9 - r3.top, left: e13 + n9 - r3.left } : "top-center" === s4 ? { bottom: a7 + n9 - r3.bottom, left: e13 - l7 - r3.left } : void 0;
  }
  _calculatePositionStyle(e13, t8) {
    const { dockEnabled: i6, view: o4 } = this;
    if (!o4) return;
    if (i6) return { left: "", top: "", right: "", bottom: "" };
    if (null == e13 || !t8) return;
    const s4 = this._calculateFullWidth(t8), n9 = this._calculateAlignmentPosition(e13.x, e13.y, o4, s4);
    return n9 ? { top: void 0 !== n9.top ? `${n9.top}px` : "auto", left: void 0 !== n9.left ? `${n9.left}px` : "auto", bottom: void 0 !== n9.bottom ? `${n9.bottom}px` : "auto", right: void 0 !== n9.right ? `${n9.right}px` : "auto" } : void 0;
  }
  _viewChange(e13, t8) {
    e13 && t8 && (this.close(), this.clear());
  }
  _viewReadyChange(e13, t8) {
    e13 ? this._wireUpView() : t8 && (this.close(), this.clear());
  }
  _wireUpView() {
    this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e13, t8, i6) {
    const [o4, s4] = e13, [n9, r3] = t8, { width: l7 = 0, height: a7 = 0 } = i6 ?? {};
    return o4 <= l7 && n9 > l7 || o4 > l7 && n9 <= l7 || s4 <= a7 && r3 > a7 || s4 > a7 && r3 <= a7;
  }
  _updateDockEnabledForViewSize(e13, t8) {
    var _a, _b;
    if (!e13 || !t8) return;
    const i6 = ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding) || { left: 0, right: 0, top: 0, bottom: 0 }, o4 = i6.left + i6.right, s4 = i6.top + i6.bottom, n9 = [], r3 = [];
    n9[0] = e13[0] - o4, n9[1] = e13[1] - s4, r3[0] = t8[0] - o4, r3[1] = t8[1] - s4;
    const { dockOptions: l7 } = this, a7 = l7.breakpoint;
    this._dockingThresholdCrossed(n9, r3, a7) && this._setDockEnabledForViewSize(l7), this._setCurrentDockPosition();
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e13, viewModel: t8 } = this;
    if (!t8) return;
    const i6 = t8.active && !e13;
    t8.screenLocationEnabled = i6;
  }
  _shouldDockAtCurrentViewSize(e13) {
    var _a, _b;
    const t8 = e13.breakpoint, i6 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i6) return false;
    const { width: o4, height: s4 } = i6;
    if (isNaN(o4) || isNaN(s4)) return false;
    if (!t8) return false;
    const n9 = t8.hasOwnProperty("width") && o4 <= (t8.width ?? 0), r3 = t8.hasOwnProperty("height") && s4 <= (t8.height ?? 0);
    return n9 || r3;
  }
  _setDockEnabledForViewSize(e13) {
    e13.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e13));
  }
};
r([m({ readOnly: true })], D4.prototype, "_featureNavigationTop", null), r([m()], D4.prototype, "actions", null), r([m({ readOnly: true })], D4.prototype, "active", null), r([m()], D4.prototype, "alignment", void 0), r([m()], D4.prototype, "autoCloseEnabled", null), r([m()], D4.prototype, "defaultPopupTemplateEnabled", null), r([m()], D4.prototype, "content", null), r([m()], D4.prototype, "collapsed", null), r([m({ readOnly: true })], D4.prototype, "currentAlignment", null), r([m({ readOnly: true })], D4.prototype, "currentDockPosition", null), r([m()], D4.prototype, "dockOptions", null), r([m()], D4.prototype, "dockEnabled", void 0), r([m({ readOnly: true })], D4.prototype, "featureCount", null), r([m()], D4.prototype, "featureMenuOpen", null), r([m()], D4.prototype, "features", null), r([m()], D4.prototype, "goToOverride", null), r([m()], D4.prototype, "headingLevel", void 0), r([m()], D4.prototype, "highlightEnabled", null), r([m()], D4.prototype, "icon", null), r([m()], D4.prototype, "initialDisplayMode", null), r([m()], D4.prototype, "location", null), r([m()], D4.prototype, "label", null), r([m(), e2("esri/widgets/Popup/t9n/Popup")], D4.prototype, "messages", void 0), r([m()], D4.prototype, "promises", null), r([m({ readOnly: true })], D4.prototype, "selectedFeature", null), r([m({ readOnly: true })], D4.prototype, "selectedDrillInFeature", null), r([m()], D4.prototype, "selectedFeatureIndex", null), r([m({ readOnly: true })], D4.prototype, "selectedFeatureWidget", null), r([m()], D4.prototype, "title", null), r([m()], D4.prototype, "updateLocationEnabled", null), r([m()], D4.prototype, "view", null), r([m({ type: t7 }), e6(["triggerAction", "trigger-action"])], D4.prototype, "viewModel", void 0), r([m()], D4.prototype, "visible", null), r([m({ type: a6, nonNullable: true })], D4.prototype, "visibleElements", void 0), D4 = r([a("esri.widgets.Popup")], D4);
var P2 = D4;
export {
  P2 as default
};
//# sourceMappingURL=Popup-7M4NWQTS.js.map
