{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/rasterTransforms/IdentityTransform.js", "../../@arcgis/core/layers/support/rasterTransforms/utils.js", "../../@arcgis/core/layers/support/RasterWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../chunks/tslib.es6.js\";import\"../../../core/Logger.js\";import\"../../../core/has.js\";import\"../../../core/RandomLCG.js\";import\"../../../core/Error.js\";import{enumeration as o}from\"../../../core/accessorSupport/decorators/enumeration.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import t from\"./BaseRasterTransform.js\";var e;let a=e=class extends t{constructor(){super(...arguments),this.type=\"identity\"}clone(){return new e}};r([o({IdentityXform:\"identity\"})],a.prototype,\"type\",void 0),a=e=r([s(\"esri.layers.support.rasterTransforms.IdentityTransform\")],a);const p=a;export{p as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"./GCSShiftTransform.js\";import o from\"./IdentityTransform.js\";import t from\"./PolynomialTransform.js\";const n={GCSShiftXform:r,IdentityXform:o,PolynomialXform:t};function f(r){const o=r?.type;if(!o)return null;const t=n[r?.type];if(t){const o=new t;return o.read(r),o}return null}export{f as readTransform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"../../geometry/Extent.js\";import e from\"../../geometry/Point.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,clipTile as n,mosaic as a,approximateTransform as l,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{create as c}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as f,load as p,getProjectionOffsetGrid as u}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as S,estimateStatisticsHistograms as d}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as x,convertToLocalDirections as y}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as O}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as N}from\"../../views/2d/engine/flow/dataUtils.js\";class J{convertVectorFieldData(r){const e=s.fromJSON(r.pixelBlock),t=x(e,r.type);return Promise.resolve(null!=t?t.toJSON():null)}computeStatisticsHistograms(r){const e=s.fromJSON(r.pixelBlock),t=S(e);return Promise.resolve(t)}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?r.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=c(r.rasterFunctionJSON)}async process(t){const o=this.rasterFunction.process({extent:r.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map((r=>null!=r?s.fromJSON(r):null)),primaryPixelSizes:t.primaryPixelSizes?.map((r=>null!=r?e.fromJSON(r):null)),primaryRasterIds:t.primaryRasterIds});return null!=o?o.toJSON():null}stretch(r){const e=this.symbolizer.simpleStretch(s.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(r){const e=d(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,!1===r.useBilinear);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}clipTile(r){const e=s.fromJSON(r.pixelBlock),t=n({...r,pixelBlock:e});return Promise.resolve(t?.toJSON())}async mosaicAndTransform(r){const e=r.srcPixelBlocks.map((r=>r?new s(r):null)),t=a(e,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,i=t;return r.coefs&&(i=l(t,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=m(r.destDimension,r.gcsGrid),i=y(i,r.isUV?\"vector-uv\":\"vector-magdir\",o)),{pixelBlock:i?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await N(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const s=r.fromJSON(e.projectedExtent),o=r.fromJSON(e.srcBufferExtent);let i=null;e.datumTransformationSteps&&(i=new t({steps:e.datumTransformationSteps})),(e.includeGCSGrid||f(s.spatialReference,o.spatialReference,i))&&await p();const n=e.rasterTransform?O(e.rasterTransform):null;return u({...e,projectedExtent:s,srcBufferExtent:o,datumTransformation:i,rasterTransform:n})}}export{J as default};\n"],
  "mappings": "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",
  "names": ["a", "r", "f", "r", "o", "r", "e", "j", "s", "w", "n", "f"]
}
