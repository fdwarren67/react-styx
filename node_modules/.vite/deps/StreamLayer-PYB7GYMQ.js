import {
  _
} from "./chunk-PKIZUJIH.js";
import {
  e as e2
} from "./chunk-JED5CITL.js";
import {
  d as d2
} from "./chunk-TRBU6WLM.js";
import "./chunk-XBF3Q5CM.js";
import "./chunk-BSQH3I7W.js";
import {
  o as o2
} from "./chunk-PHUXOQ5V.js";
import {
  c
} from "./chunk-MR2DYNTG.js";
import "./chunk-65Z5LAMC.js";
import "./chunk-IFZYBBFM.js";
import {
  a as a5
} from "./chunk-WYOFTVUU.js";
import {
  s as s3
} from "./chunk-S4AV6MOI.js";
import "./chunk-TKEIF3N7.js";
import {
  C,
  n as n2
} from "./chunk-RMOE6XHW.js";
import {
  m as m2,
  u
} from "./chunk-QAXPIBME.js";
import {
  l as l2
} from "./chunk-WOB72RZU.js";
import {
  l as l3
} from "./chunk-HKTC3ZVY.js";
import "./chunk-MQ3WYGQ2.js";
import {
  p as p3
} from "./chunk-S4QLDBOB.js";
import {
  e
} from "./chunk-RTA3XNM7.js";
import "./chunk-NUJWMWJZ.js";
import {
  te
} from "./chunk-XZDT5RTS.js";
import "./chunk-QAP2FVP7.js";
import "./chunk-7DHQ2VMC.js";
import "./chunk-5JWPKXQI.js";
import "./chunk-4GBYHIKO.js";
import "./chunk-ZDLUQDDX.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-RP6IGXYU.js";
import "./chunk-MRPAGZVF.js";
import "./chunk-VIBOZNXV.js";
import {
  A
} from "./chunk-NBXBK3QW.js";
import {
  j as j2
} from "./chunk-K5B7AETB.js";
import {
  t as t2
} from "./chunk-KLCKQJVO.js";
import "./chunk-5APVNM2E.js";
import {
  f as f2
} from "./chunk-73NNNHMH.js";
import {
  b
} from "./chunk-C6YDI6QX.js";
import {
  d,
  j,
  l,
  p as p2,
  s as s2,
  v,
  y as y2
} from "./chunk-DJ5HVIE7.js";
import {
  S as S2
} from "./chunk-KPY4ZIC2.js";
import "./chunk-HGWPGAUL.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-HAYP5DZM.js";
import "./chunk-OMNXYZNG.js";
import "./chunk-GPMU6IW4.js";
import {
  b as b2
} from "./chunk-4JVIG75S.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-L2AVI4MN.js";
import {
  y
} from "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-BBPRJCMB.js";
import "./chunk-4GYBOMKF.js";
import "./chunk-RO66CZDO.js";
import "./chunk-KMVZXZBR.js";
import "./chunk-7HSZJLYU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-YQH3DXBZ.js";
import "./chunk-T52X5K2I.js";
import "./chunk-VE2K63DA.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import {
  p
} from "./chunk-SVWZAOD7.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import {
  t as t3
} from "./chunk-MILRZFWI.js";
import "./chunk-RPPIM555.js";
import {
  h
} from "./chunk-4FQDWSFN.js";
import "./chunk-JOQ2ZFQV.js";
import {
  f
} from "./chunk-3UBDE4PK.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import "./chunk-BLF64HON.js";
import {
  q
} from "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import {
  y as y3
} from "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import {
  a as a4
} from "./chunk-SPVEONZ2.js";
import {
  I,
  g as g2
} from "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import {
  w
} from "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import {
  g
} from "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import {
  o
} from "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import {
  P2 as P
} from "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import {
  S
} from "./chunk-2FUEBHWI.js";
import {
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a3
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  a as a2,
  k,
  t2 as t
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import {
  s
} from "./chunk-OSHCNHH7.js";
import {
  x
} from "./chunk-7LCEUMDD.js";
import {
  a,
  n2 as n
} from "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t4;
var i = t4 = class extends S {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t4({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
r([m({ type: Number, json: { write: true } })], i.prototype, "age", void 0), r([m({ type: Number, json: { write: true } })], i.prototype, "ageReceived", void 0), r([m({ type: Number, json: { write: true } })], i.prototype, "displayCount", void 0), r([m({ type: Number, json: { write: true } })], i.prototype, "maxObservations", void 0), i = t4 = r([a3("esri.layers.support.PurgeOptions")], i);
var p4 = i;

// node_modules/@arcgis/core/layers/StreamLayer.js
var te2 = s3();
function re(e3, t5) {
  return new s("layer:unsupported", `Layer (${e3.title}, ${e3.id}) of type '${e3.declaredClass}' ${t5}`, { layer: e3 });
}
var ie = class extends a5(d2(c(p(l3(e2(t3(f2(l2(b(j2(S2(e(a4.ClonableMixin(f)))))))))))))) {
  constructor(...e3) {
    super(...e3), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.outFields = ["*"], this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p4(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = g.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null, this._debouncedSaveOperations = k(async (e4, t5, r2) => {
      const { save: i2, saveAs: o3 } = await import("./streamLayerUtils-GQ5HNREF.js");
      switch (e4) {
        case A.SAVE:
          return i2(this, t5);
        case A.SAVE_AS:
          return o3(this, r2, t5);
      }
    });
  }
  normalizeCtorArgs(e3, t5) {
    return "string" == typeof e3 ? { url: e3, ...t5 } : e3;
  }
  load(e3) {
    if (!("WebSocket" in globalThis)) return this.addResolvingPromise(Promise.reject(new s("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t5 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e3).catch(a2).then(() => this._fetchService(t5))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e3) {
    const t5 = this._normalizeFeatureReduction(e3);
    this._set("featureReduction", t5);
  }
  set renderer(e3) {
    g2(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  readRenderer(e3, t5, r2) {
    var _a;
    t5 = t5.layerDefinition || t5;
    const i2 = (_a = t5.drawingInfo) == null ? void 0 : _a.renderer;
    if (i2) {
      const e4 = o2(i2, t5, r2) || void 0;
      return e4 || n.getLogger(this).error("Failed to create renderer", { rendererDefinition: t5.drawingInfo.renderer, layer: this, context: r2 }), e4;
    }
    return te(t5, r2);
  }
  async connect(e3) {
    const [{ createConnection: t5 }] = await Promise.all([import("./createConnection-2TAVJ6VU.js"), this.load()]), r2 = this.geometryType ? y3.toJSON(this.geometryType) : null, { customParameters: i2 = null, definitionExpression: o3 = null, geometryDefinition: n3 = null, maxReconnectionAttempts: a6 = 0, maxReconnectionInterval: p5 = 20, spatialReference: l4 = this.spatialReference } = e3 || this.createConnectionParameters(), m3 = t5(this.parsedUrl, this.spatialReference, l4, r2, o3, n3, a6, p5, i2 ?? void 0), d3 = t([this.on("send-message-to-socket", (e4) => m3.sendMessageToSocket(e4)), this.on("send-message-to-client", (e4) => m3.sendMessageToClient(e4))]);
    return m3.once("destroy", d3.remove), m3;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e3) {
    return p3(this, e3);
  }
  createQuery() {
    const e3 = new b2();
    return e3.returnGeometry = true, e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1", e3;
  }
  getFieldDomain(e3, t5) {
    if (!this.fields) return null;
    let r2 = null;
    return this.fields.some((t6) => (t6.name === e3 && (r2 = t6.domain), !!r2)), r2;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  serviceSupportsSpatialReference(e3) {
    return true;
  }
  sendMessageToSocket(e3) {
    this.emit("send-message-to-socket", e3);
  }
  sendMessageToClient(e3) {
    this.emit("send-message-to-client", e3);
  }
  async save(e3) {
    return this._debouncedSaveOperations(A.SAVE, e3);
  }
  async saveAs(e3, t5) {
    return this._debouncedSaveOperations(A.SAVE_AS, t5, e3);
  }
  write(e3, t5) {
    const r2 = t5 == null ? void 0 : t5.messages;
    return this.webSocketUrl ? (r2 == null ? void 0 : r2.push(re(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e3, t5) : (r2 == null ? void 0 : r2.push(re(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e3) {
    var _a, _b, _c;
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t5 } = await P(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e3 });
        this.sourceJSON = t5;
      }
    } else {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField)) throw new s("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e4 = (_b = this.fields.find((e5) => "oid" === e5.type)) == null ? void 0 : _b.name;
        if (!e4) throw new s("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e4;
      }
      if (!this.fields) throw new s("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some((e4) => e4.name === this.objectIdField) || this.fields.push(new y({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType) throw new s("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_c = this.portalItem) == null ? void 0 : _c.portal, url: this.parsedUrl }), g2(this.renderer, this.fieldsIndex), I(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = _), t2(this, { origin: "service" });
  }
};
r([m({ type: String })], ie.prototype, "copyright", void 0), r([m({ readOnly: true })], ie.prototype, "defaultPopupTemplate", null), r([m({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], ie.prototype, "definitionExpression", void 0), r([m({ type: String })], ie.prototype, "displayField", void 0), r([m({ type: h })], ie.prototype, "elevationInfo", void 0), r([m({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], ie.prototype, "featureReduction", null), r([m(te2.fields)], ie.prototype, "fields", void 0), r([m(te2.fieldsIndex)], ie.prototype, "fieldsIndex", void 0), r([m({ type: w, json: { name: "layerDefinition.definitionGeometry", write: true } })], ie.prototype, "geometryDefinition", void 0), r([m({ type: y3.apiValues, json: { read: { reader: y3.read } } })], ie.prototype, "geometryType", void 0), r([m(p2)], ie.prototype, "labelsVisible", void 0), r([m({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: n2 }, write: true } })], ie.prototype, "labelingInfo", void 0), r([m(d)], ie.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide"], json: { origins: { "portal-item": { read: false, write: false } } } })], ie.prototype, "listMode", void 0), r([m({ type: x })], ie.prototype, "maxReconnectionAttempts", void 0), r([m({ type: x })], ie.prototype, "maxReconnectionInterval", void 0), r([m(v)], ie.prototype, "maxScale", void 0), r([m(j)], ie.prototype, "minScale", void 0), r([m({ type: String })], ie.prototype, "objectIdField", void 0), r([m({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], ie.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], ie.prototype, "outFields", void 0), r([m(l)], ie.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: true } })], ie.prototype, "popupTemplate", void 0), r([m({ type: p4 })], ie.prototype, "purgeOptions", void 0), r([m({ json: { read: false, write: false } })], ie.prototype, "refreshInterval", void 0), r([m({ types: m2, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: u, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], ie.prototype, "renderer", null), r([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], ie.prototype, "readRenderer", null), r([m((() => {
  const e3 = a(s2);
  return e3.json.origins["portal-item"] = { read: false, write: false }, e3;
})())], ie.prototype, "screenSizePerspectiveEnabled", void 0), r([m()], ie.prototype, "sourceJSON", void 0), r([m({ type: g, json: { origins: { service: { read: { source: "spatialReference" } } } } })], ie.prototype, "spatialReference", void 0), r([m({ json: { read: false } })], ie.prototype, "type", void 0), r([m(y2)], ie.prototype, "url", void 0), r([m({ type: Number })], ie.prototype, "updateInterval", void 0), r([m({ json: { read: false, write: false } })], ie.prototype, "useViewTime", void 0), r([m({ type: String })], ie.prototype, "webSocketUrl", void 0), ie = r([a3("esri.layers.StreamLayer")], ie);
var oe = ie;
export {
  oe as default
};
//# sourceMappingURL=StreamLayer-PYB7GYMQ.js.map
