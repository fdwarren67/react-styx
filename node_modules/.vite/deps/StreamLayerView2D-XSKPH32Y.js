import {
  de,
  n as n2
} from "./chunk-TNWNWOA6.js";
import "./chunk-TYPEWHVW.js";
import "./chunk-ZKRVW5CM.js";
import "./chunk-7BISKPXG.js";
import "./chunk-IVUWXWSD.js";
import "./chunk-4YDWJUBU.js";
import "./chunk-YISRE3T5.js";
import "./chunk-7M6HCFVM.js";
import "./chunk-DTPSE2SE.js";
import "./chunk-6ODLL4CO.js";
import "./chunk-ZMZA5FVA.js";
import "./chunk-IZJLQDI2.js";
import "./chunk-GGSQ5AVK.js";
import "./chunk-AWVDCINM.js";
import "./chunk-76ZXQ2EB.js";
import "./chunk-M44TFGCQ.js";
import "./chunk-IVPVPFYU.js";
import "./chunk-IFOJEJLA.js";
import "./chunk-I2SHMCYI.js";
import "./chunk-NJX7X3PO.js";
import "./chunk-CXHZI2CJ.js";
import "./chunk-MAX4GY2G.js";
import "./chunk-BUZ7I3MJ.js";
import "./chunk-J2QYVOHP.js";
import "./chunk-NBFYN6KG.js";
import "./chunk-4SAKF7Y6.js";
import "./chunk-355MBCYM.js";
import "./chunk-KFLWTVQX.js";
import "./chunk-BXTQHJJG.js";
import "./chunk-T5R43RTD.js";
import "./chunk-7NXOMMLC.js";
import "./chunk-F6YRPEY7.js";
import "./chunk-CCPDXL7V.js";
import "./chunk-2TACZL27.js";
import "./chunk-PKIZUJIH.js";
import "./chunk-CUWQEJ5X.js";
import "./chunk-B7S3HUFO.js";
import "./chunk-6VF5U3IZ.js";
import "./chunk-E7IFPXEX.js";
import "./chunk-OK5AUMBT.js";
import "./chunk-R2ZUOHHV.js";
import "./chunk-LCSNZ6OB.js";
import "./chunk-OBVDE24U.js";
import "./chunk-YYDDGFL6.js";
import "./chunk-SNZZPKBU.js";
import "./chunk-6PQMUQJV.js";
import "./chunk-JDUGBJ57.js";
import "./chunk-3HA4XA2C.js";
import "./chunk-H2OC77GP.js";
import "./chunk-RDHJUEBL.js";
import "./chunk-DGDYI2GQ.js";
import "./chunk-LMQPVKGX.js";
import "./chunk-32RP26YL.js";
import "./chunk-PJIFP7OJ.js";
import "./chunk-NPEU24W6.js";
import "./chunk-I75Q3UU4.js";
import "./chunk-TOU5KPOG.js";
import "./chunk-AU4QUDF3.js";
import "./chunk-5BSH2ZN2.js";
import "./chunk-HQ2GCCLQ.js";
import "./chunk-74GH4Z6V.js";
import "./chunk-PXBFVQ6M.js";
import "./chunk-TYJV2BHR.js";
import "./chunk-I6H2R562.js";
import "./chunk-WMLTK6KE.js";
import "./chunk-SURICA27.js";
import "./chunk-PBHST2SF.js";
import "./chunk-PONPGREB.js";
import "./chunk-QNYMCEB7.js";
import "./chunk-T7CHWWE2.js";
import "./chunk-FWVSIQMR.js";
import "./chunk-4ACM2XXN.js";
import "./chunk-ON7GWFUW.js";
import "./chunk-VPRLLNNO.js";
import "./chunk-VT63JL2L.js";
import "./chunk-WJNJ43ZU.js";
import "./chunk-MIW7M4LL.js";
import "./chunk-6W3XFTHW.js";
import "./chunk-YUQ6PSJ2.js";
import "./chunk-SB6LU3VH.js";
import "./chunk-65Z5LAMC.js";
import {
  d as d3
} from "./chunk-IFZYBBFM.js";
import "./chunk-VYOLHG4T.js";
import "./chunk-RMOE6XHW.js";
import "./chunk-XZDT5RTS.js";
import "./chunk-QAP2FVP7.js";
import {
  d as d2
} from "./chunk-6EREU4EG.js";
import "./chunk-7DHQ2VMC.js";
import "./chunk-5JWPKXQI.js";
import "./chunk-4GBYHIKO.js";
import "./chunk-ZDLUQDDX.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-RP6IGXYU.js";
import "./chunk-VIBOZNXV.js";
import "./chunk-HGWPGAUL.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-GPMU6IW4.js";
import "./chunk-LTFI343D.js";
import "./chunk-FVMWI3UB.js";
import "./chunk-4JVIG75S.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-L2AVI4MN.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-BBPRJCMB.js";
import "./chunk-7VGCZZPH.js";
import "./chunk-PMTDIWAP.js";
import "./chunk-ACBQ6NOA.js";
import "./chunk-QW7P5D76.js";
import "./chunk-RO66CZDO.js";
import "./chunk-KMVZXZBR.js";
import "./chunk-7HSZJLYU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-YQH3DXBZ.js";
import "./chunk-T52X5K2I.js";
import "./chunk-VE2K63DA.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import "./chunk-BLF64HON.js";
import "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import {
  n
} from "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import {
  d
} from "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import {
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  e2 as e,
  t2 as t
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import {
  s
} from "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/views/layers/StreamLayerView.js
var r2 = (r3) => {
  let i = class extends r3 {
    resume() {
      this._isUserPaused = false, this.suspended || this._doResume();
    }
    pause() {
      this._isUserPaused = true, this.suspended || this._doPause();
    }
    disconnect() {
      this._doDisconnect();
    }
    connect() {
      this._doConnect();
    }
    clear() {
      this._doClear();
    }
    constructor(...s2) {
      super(...s2), this._isUserPaused = false, this.filter = null;
    }
    get connectionStatus() {
      return (this._isUserPaused || this.suspended) && "connected" === this._streamConnectionStatus ? "paused" : this._streamConnectionStatus;
    }
    _onSuspendedChange(s2) {
      s2 ? this._doPause() : this._isUserPaused || this._doResume();
    }
  };
  return r([m()], i.prototype, "_isUserPaused", void 0), r([m({ readOnly: true })], i.prototype, "connectionStatus", null), r([m({ type: d3 })], i.prototype, "filter", void 0), i = r([a("esri.views.layers.StreamLayerView")], i), i;
};

// node_modules/@arcgis/core/views/2d/layers/StreamLayerView2D.js
var p = class extends r2(de) {
  constructor() {
    super(...arguments), this.pipelineConnectionStatus = "disconnected", this.pipelineErrorString = null;
  }
  initialize() {
    this.addHandles([d(() => this.layer.customParameters, async (e2) => {
      (await this.getWorker()).streamMessenger.updateCustomParameters(e2);
    }), this.layer.on("send-message-to-socket", async (e2) => {
      (await this.getWorker()).streamMessenger.sendMessageToSocket(e2);
    }), this.layer.on("send-message-to-client", async (e2) => {
      (await this.getWorker()).streamMessenger.sendMessageToClient(e2), this._isUserPaused && "type" in e2 && "clear" === e2.type && this.incrementSourceRefreshVersion();
    }), d(() => this.layer.purgeOptions, () => this._update()), d(() => this.suspended, this._onSuspendedChange.bind(this))], "constructor"), this._doResume();
  }
  destroy() {
    this._doPause();
  }
  get connectionError() {
    return this.pipelineErrorString ? new s("stream-controller", this.pipelineErrorString) : null;
  }
  on(e2, r3) {
    if (Array.isArray(e2)) return t(e2.map((e3) => this.on(e3, r3)));
    const n3 = ["data-received", "message-received"].includes(e2);
    n3 && this.getWorker().then((r4) => r4.streamMessenger.enableEvent(e2, true));
    const o = super.on(e2, r3), i = this;
    return e(() => {
      o.remove(), n3 && (i._workerProxy.closed || i.hasEventListener(e2) || i.getWorker().then((r4) => r4.streamMessenger.enableEvent(e2, false)));
    });
  }
  async queryLatestObservations(e2, t2) {
    var _a, _b, _c;
    if (!(((_a = this.layer.timeInfo) == null ? void 0 : _a.endField) || ((_b = this.layer.timeInfo) == null ? void 0 : _b.startField) || ((_c = this.layer.timeInfo) == null ? void 0 : _c.trackIdField))) throw new s("streamlayer-no-timeField", "queryLatestObservation can only be used with services that define a TrackIdField");
    const s2 = await this.getWorker();
    return n2(s2.features.executeQueryForLatestObservations(this._cleanUpQuery(e2), t2).then((e3) => {
      const r3 = d2.fromJSON(e3);
      return r3.features.forEach((e4) => {
        e4.layer = this.layer, e4.sourceLayer = this.layer;
      }), r3;
    }), new d2({ features: [] }));
  }
  detach() {
    super.detach(), this.pipelineConnectionStatus = "disconnected";
  }
  async queryObjectIds(e2, r3) {
    return (await super.queryObjectIds(e2, r3)).filter(n);
  }
  get _streamConnectionStatus() {
    return this.pipelineConnectionStatus;
  }
  _doPause() {
    null != this._refreshInterval && (clearInterval(this._refreshInterval), this._refreshInterval = null);
  }
  _doResume() {
    this._refreshInterval = setInterval(() => this.incrementSourceRefreshVersion(), this.layer.updateInterval);
  }
  _doDisconnect() {
    this.getWorker().then((e2) => e2.streamMessenger.disconnect()), this._doPause();
  }
  _doConnect() {
    this.getWorker().then((e2) => e2.streamMessenger.connect()), this.resume();
  }
  _doClear() {
    this.getWorker().then((e2) => e2.streamMessenger.clear()), null == this._refreshInterval && this.incrementSourceRefreshVersion();
  }
  _createClientOptions() {
    const e2 = super._createClientOptions(), r3 = this;
    return { ...e2, get container() {
      return r3.featureContainer;
    }, setProperty: (e3) => {
      this.set(e3.propertyName, e3.value);
    } };
  }
};
r([m()], p.prototype, "pipelineConnectionStatus", void 0), r([m()], p.prototype, "pipelineErrorString", void 0), r([m({ readOnly: true })], p.prototype, "connectionError", null), r([m({ readOnly: true })], p.prototype, "_streamConnectionStatus", null), p = r([a("esri.views.2d.layers.StreamLayerView2D")], p);
var d4 = p;
export {
  d4 as default
};
//# sourceMappingURL=StreamLayerView2D-XSKPH32Y.js.map
