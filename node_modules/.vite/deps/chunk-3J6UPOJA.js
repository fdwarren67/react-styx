import {
  x as x2
} from "./chunk-IMJFD35N.js";
import {
  C as C4,
  _ as _4,
  a as a8,
  e as e13,
  t as t10,
  t2 as t11,
  u as u7
} from "./chunk-SFMT6MPK.js";
import {
  m as m5
} from "./chunk-CAUYWBFJ.js";
import {
  c as c7
} from "./chunk-C7KH2XUE.js";
import {
  h as h4
} from "./chunk-SHUPRF2X.js";
import {
  c as c8
} from "./chunk-MMTG5LL5.js";
import {
  g as g3,
  n as n12
} from "./chunk-6SVQSUM2.js";
import {
  c as c6,
  s as s6,
  u as u6
} from "./chunk-6VFW3IWB.js";
import {
  a as a9,
  m as m3
} from "./chunk-S44I6ZFP.js";
import {
  E as E6,
  d as d4,
  m as m4
} from "./chunk-HLHAX5U2.js";
import {
  t as t9
} from "./chunk-ODSRB4EZ.js";
import {
  a as a7,
  p as p4
} from "./chunk-ZDC5HC6P.js";
import {
  it,
  r as r6,
  u as u5
} from "./chunk-ONKUNBAA.js";
import {
  E as E4
} from "./chunk-NJX7X3PO.js";
import {
  A as A2,
  A2 as A3,
  N as N2,
  a as a4,
  e as e11,
  f as f4,
  f2 as f5,
  f3 as f6,
  f4 as f7,
  i as i4,
  l as l5,
  o as o7,
  p as p3
} from "./chunk-ARBGNZ5J.js";
import {
  a as a6,
  i as i6,
  n as n11
} from "./chunk-OBY6T2CW.js";
import {
  a as a5,
  i as i7
} from "./chunk-SCA7QFZT.js";
import {
  E as E5,
  R,
  _ as _3,
  h as h3,
  i as i5,
  l as l4,
  t as t6,
  t2 as t8
} from "./chunk-WRGRINPJ.js";
import {
  d as d2,
  d2 as d3,
  e as e12
} from "./chunk-VGAGCEX3.js";
import {
  B as B2,
  c as c4,
  f as f3,
  g as g2
} from "./chunk-P5AGQYYC.js";
import {
  a as a3,
  e as e9
} from "./chunk-223G2GN7.js";
import {
  c as c5
} from "./chunk-U2P5JTEN.js";
import {
  O,
  e as e10,
  n2 as n10,
  p2 as p,
  t as t5,
  t2 as t7
} from "./chunk-KBTHUZME.js";
import {
  o as o6
} from "./chunk-Y6THB4GE.js";
import {
  o as o8
} from "./chunk-W2OFQBYT.js";
import {
  c as c3
} from "./chunk-N3R7UAKL.js";
import {
  e as e8
} from "./chunk-UM5QMFZV.js";
import {
  S,
  e as e7,
  l as l3,
  n as n9,
  u as u4
} from "./chunk-457CK7GN.js";
import {
  C as C3,
  E as E3,
  U
} from "./chunk-I7JIAECC.js";
import {
  t as t4
} from "./chunk-EXHR7CRN.js";
import {
  m as m2
} from "./chunk-F64YCQYI.js";
import {
  H as H2,
  n as n8
} from "./chunk-BG4BZEWI.js";
import {
  c as c2,
  f,
  s as s5,
  u as u3
} from "./chunk-HE2KJFY5.js";
import {
  w
} from "./chunk-374VFTLO.js";
import {
  t as t3
} from "./chunk-OBVDE24U.js";
import {
  e as e4
} from "./chunk-HYT6FDCG.js";
import {
  e as e6,
  o as o5
} from "./chunk-HHSHKUKB.js";
import {
  e as e5
} from "./chunk-OBRCQKKM.js";
import {
  w as w3
} from "./chunk-5BSH2ZN2.js";
import {
  p as p2,
  w as w2
} from "./chunk-HQ2GCCLQ.js";
import {
  l as l2
} from "./chunk-6WERKJTM.js";
import {
  C as C2,
  E as E2,
  F,
  G as G2,
  L,
  M,
  _ as _2,
  f as f2
} from "./chunk-QNYMCEB7.js";
import {
  n as n7
} from "./chunk-T7CHWWE2.js";
import {
  G,
  _,
  b as b2,
  e as e3,
  j,
  l,
  o as o3,
  r as r5,
  u as u2,
  v as v2,
  x
} from "./chunk-4ACM2XXN.js";
import {
  E,
  H,
  o as o4,
  s as s4,
  y
} from "./chunk-ON7GWFUW.js";
import {
  C,
  g
} from "./chunk-64ZXKK6G.js";
import {
  N,
  n as n6,
  s as s3
} from "./chunk-V3IZNRFE.js";
import {
  s as s2,
  z
} from "./chunk-D7XVYH42.js";
import {
  h,
  o as o2
} from "./chunk-EGSJQZXU.js";
import {
  Q,
  X,
  c,
  h as h2,
  i as i3,
  n as n5,
  q
} from "./chunk-GFEMKR2U.js";
import {
  a as a2,
  t as t2
} from "./chunk-KSQSVLSQ.js";
import {
  i as i2,
  n as n4
} from "./chunk-D3P3E2RE.js";
import {
  A,
  P,
  d,
  v
} from "./chunk-UKY33OJN.js";
import {
  i
} from "./chunk-BJEQ2APY.js";
import {
  B,
  e as e2,
  u
} from "./chunk-OXPM753Y.js";
import {
  s2 as s
} from "./chunk-TEJXT4W6.js";
import {
  b,
  o,
  r
} from "./chunk-VSLEAHOZ.js";
import {
  e3 as e,
  m,
  n3
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a
} from "./chunk-BM4B3CH5.js";
import {
  r as r3,
  t
} from "./chunk-SMH2GUF6.js";
import {
  r as r4
} from "./chunk-AZP4AFW7.js";
import {
  r as r2
} from "./chunk-SCZRL2WP.js";
import {
  n as n2
} from "./chunk-7LCEUMDD.js";
import {
  n2 as n
} from "./chunk-6II7WQ2F.js";
import {
  has
} from "./chunk-L7QO6TDW.js";

// node_modules/@arcgis/core/views/3d/terrain/Overlay.js
var n13 = class {
  constructor() {
    this._extent = u(), this.resolution = 0, this.renderLocalOrigin = t11(0, 0, 0, "O"), this.pixelRatio = 1, this.mapUnitsPerPixel = 1, this.canvasGeometries = new r7();
  }
  get extent() {
    return this._extent;
  }
  setupGeometryViewsCyclical(e17) {
    this.setupGeometryView();
    const s15 = 1e-3 * e17.range;
    if (this._extent[0] - s15 <= e17.min) {
      const s16 = this.canvasGeometries.extents[this.canvasGeometries.numViews++];
      B(this._extent, e17.range, 0, s16);
    }
    if (this._extent[2] + s15 >= e17.max) {
      const s16 = this.canvasGeometries.extents[this.canvasGeometries.numViews++];
      B(this._extent, -e17.range, 0, s16);
    }
  }
  setupGeometryView() {
    this.canvasGeometries.numViews = 1, e2(this.canvasGeometries.extents[0], this._extent);
  }
  hasSomeSizedView() {
    for (let e17 = 0; e17 < this.canvasGeometries.numViews; e17++) {
      const t19 = this.canvasGeometries.extents[e17];
      if (t19[0] !== t19[2] && t19[1] !== t19[3]) return true;
    }
    return false;
  }
};
var r7 = class {
  constructor() {
    this.extents = [u(), u(), u()], this.numViews = 0;
  }
};

// node_modules/@arcgis/core/views/3d/terrain/OverlayContent.js
var o9;
!function(o16) {
  o16[o16.Color = 0] = "Color", o16[o16.ColorNoRasterImage = 1] = "ColorNoRasterImage", o16[o16.Highlight = 2] = "Highlight", o16[o16.WaterNormal = 3] = "WaterNormal", o16[o16.Occluded = 4] = "Occluded", o16[o16.ObjectAndLayerIdColor = 5] = "ObjectAndLayerIdColor";
}(o9 || (o9 = {}));

// node_modules/@arcgis/core/views/3d/terrain/OverlayFramebufferObject.js
var t12 = class {
  constructor(e17, t19, h7) {
    this._fbos = e17, this._format = t19, this._name = h7;
  }
  get valid() {
    var _a;
    return null != ((_a = this._handle) == null ? void 0 : _a.getTexture());
  }
  dispose() {
    this._handle = t(this._handle);
  }
  get texture() {
    var _a;
    return (_a = this._handle) == null ? void 0 : _a.getTexture();
  }
  bind(e17, t19, h7) {
    var _a, _b, _c, _d;
    this._handle && ((_a = this._handle.fbo) == null ? void 0 : _a.width) === t19 && ((_b = this._handle.fbo) == null ? void 0 : _b.height) === h7 || ((_c = this._handle) == null ? void 0 : _c.release(), this._handle = this._fbos.acquire(t19, h7, this._name, this._format)), e17.bindFramebuffer((_d = this._handle) == null ? void 0 : _d.fbo);
  }
  generateMipMap() {
    var _a, _b, _c, _d, _e;
    ((_c = (_b = (_a = this._handle) == null ? void 0 : _a.getTexture()) == null ? void 0 : _b.descriptor) == null ? void 0 : _c.hasMipmap) && ((_e = (_d = this._handle) == null ? void 0 : _d.getTexture()) == null ? void 0 : _e.generateMipmap());
  }
};

// node_modules/@arcgis/core/views/3d/terrain/OverlayRenderTargets.js
var s7 = class {
  constructor(e17, t19, l10, s15, i11 = R.RGBA_MIPMAP) {
    this.output = l10, this.content = s15, this.fbo = new t12(e17, i11, t19);
  }
  get valid() {
    return this.fbo.valid;
  }
};
var i8 = class {
  constructor(r10) {
    this.targets = [new s7(r10, "overlay color", n9.Color, o9.Color), new s7(r10, "overlay IM color", n9.Color, o9.ColorNoRasterImage), new s7(r10, "overlay highlight", n9.Highlight, o9.Highlight, R.RG), new s7(r10, "overlay water", n9.Normal, o9.WaterNormal), new s7(r10, "overlay occluded", n9.Color, o9.Occluded)], e8() && this.targets.push(new s7(r10, "overlay olid", n9.ObjectAndLayerIdColor, o9.ObjectAndLayerIdColor, R.RGBA));
  }
  getTexture(e17) {
    var _a;
    return (_a = this.targets[e17]) == null ? void 0 : _a.fbo.texture;
  }
  dispose() {
    for (const e17 of this.targets) e17.fbo.dispose();
  }
  computeValidity() {
    return this.targets.reduce((e17, r10, o16) => r10.valid ? e17 |= 1 << o16 : e17, 0);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/renderPasses/RenderPassIdentifier.js
var a10;
!function(a15) {
  a15[a15.Material = 0] = "Material", a15[a15.ShadowMap = 1] = "ShadowMap", a15[a15.Highlight = 2] = "Highlight", a15[a15.ViewshedShadowMap = 3] = "ViewshedShadowMap";
}(a10 || (a10 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js
var C5;
!function(e17) {
  e17[e17.Disabled = 0] = "Disabled", e17[e17.Enabled = 1] = "Enabled", e17[e17.EnabledWithWater = 2] = "EnabledWithWater", e17[e17.COUNT = 3] = "COUNT";
}(C5 || (C5 = {}));
var I = n6();

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/HighlightApplyTechnique.js
var t14 = class extends l4 {
  constructor(r10, o16) {
    super(r10, o16, new t6(c7, () => import("./HighlightApply.glsl-SABKX7KA.js")));
  }
  initializePipeline() {
    return B2({ blending: c4, colorWrite: g2 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/HighlightDownsampleTechnique.js
var l6 = class extends l4 {
  constructor(r10, s15) {
    super(r10, s15, new t6(s6, () => import("./HighlightDownsample.glsl-VALUQJYZ.js")));
  }
  initializePipeline() {
    return B2({ colorWrite: g2 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/HighlightPassParameters.js
var e14 = class extends c3 {
  constructor() {
    super(...arguments), this.occludedFactor = w3, this.verticalCellCount = 0, this.horizontalCellCount = 0, this.highlightLevel = 0, this.pixelRatio = 1;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/HighlightToSingleTechnique.js
var l7 = class extends l4 {
  constructor(r10, o16) {
    super(r10, o16, new t6(h4, () => import("./HighlightToSingle.glsl-P7Q7QTGS.js")));
  }
  initializePipeline() {
    return B2({ colorWrite: g2 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/SingleHighlightApplyTechnique.js
var t15 = class extends l4 {
  constructor(r10, l10) {
    super(r10, l10, new t6(c8, () => import("./SingleHighlightApply.glsl-ZNSYIMS7.js")));
  }
  initializePipeline() {
    return B2({ blending: c4, colorWrite: g2 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/SingleHighlightBlurTechnique.js
var s11 = class extends l4 {
  constructor(r10, l10) {
    super(r10, l10, new t6(g3, () => import("./SingleHighlightBlur.glsl-AGXWEXQF.js")));
  }
  initializePipeline() {
    return B2({ colorWrite: g2 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/DefaultVertexBufferLayouts.js
var O2 = [];
var o12 = [new t3(e4.POSITION, 3, C2.FLOAT, 0, 12)];
var m7 = [new t3(e4.POSITION, 2, C2.FLOAT, 0, 8)];
var n16 = [new t3(e4.POSITION, 2, C2.FLOAT, 0, 16), new t3(e4.UV0, 2, C2.FLOAT, 8, 16)];

// node_modules/@arcgis/core/views/3d/webgl-engine/effects/highlight/Highlight.js
var I2 = class extends h3 {
  constructor() {
    super(...arguments), this.produces = t8.HIGHLIGHTS, this.consumes = { required: [t8.HIGHLIGHTS, "highlights"] }, this._useMultipleHighlights = false, this._downsampleDrawParameters = new u6(), this._passParameters = new e14(), this._singleHighlightBlurDrawParameters = new n12(), this._grid = new M3();
  }
  initialize() {
    this.addHandles([d(() => this._updateOptionsTexture(), () => {
    }, P)]);
  }
  destroy() {
    this._grid.coverage = t(this._grid.coverage), this._grid.vao = r3(this._grid.vao), this._passParameters.highlightOptionsTexture = t(this._passParameters.highlightOptionsTexture);
  }
  _updateOptionsTexture() {
    if (null == this._passParameters.highlightOptionsTexture) {
      const e17 = new p2(16, 2);
      e17.internalFormat = G2.RGBA, e17.samplingMode = L.NEAREST, this._passParameters.highlightOptionsTexture = new w2(this.renderingContext, e17, null);
    }
    this._passParameters.highlightOptionsTexture.setData(U2(this.view.state.highlights)), this.requestRender(a3.UPDATE);
  }
  precompile() {
    this.techniques.precompile(l6), this._useMultipleHighlights ? this.techniques.precompile(t14) : (this.techniques.precompile(l7), this.techniques.precompile(s11), this.techniques.precompile(t15));
  }
  render(e17) {
    const t19 = e17.find(({ name: e18 }) => e18 === t8.HIGHLIGHTS), { techniques: i11, bindParameters: r10, _passParameters: s15, renderingContext: o16 } = this;
    if (!r10.decorations) return t19;
    const h7 = i11.get(l6);
    if (!h7.compiled) return this.requestRender(a3.UPDATE), t19;
    const l10 = e17.find(({ name: e18 }) => "highlights" === e18).getTexture(), n19 = () => {
      var _a;
      this._gridUpdateResources(l10);
      const e18 = this._gridComputeCoverage(h7, l10, r10), { horizontalCellCount: t20, verticalCellCount: i12 } = e18;
      return s15.horizontalCellCount = t20, s15.verticalCellCount = i12, s15.coverageTexture = (_a = e18.coverage) == null ? void 0 : _a.getTexture(), e18;
    }, g6 = (e18) => {
      const t20 = e18.verticalCellCount * e18.horizontalCellCount;
      o16.bindVAO(e18.vao), o16.drawElementsInstanced(E2.TRIANGLES, 6, C2.UNSIGNED_BYTE, 0, t20);
    }, { camera: c11 } = r10, u8 = () => {
      o16.bindFramebuffer(t19.fbo), o16.setViewport4fv(c11.fullViewport);
    };
    return this._useMultipleHighlights ? this._renderMultiple(l10, n19, g6, u8) : this._renderSingle(l10, n19, g6, u8), s15.highlightTexture = null, s15.coverageTexture = null, t19;
  }
  _renderMultiple(e17, t19, i11, r10) {
    const { techniques: s15, bindParameters: o16, _passParameters: h7, renderingContext: l10 } = this, n19 = s15.get(t14);
    if (!n19.compiled) return void this.requestRender(a3.UPDATE);
    const a15 = t19();
    h7.highlightTexture = e17, h7.pixelRatio = o16.camera.pixelRatio, l10.bindTechnique(n19, o16, h7), r10(), i11(a15);
  }
  _renderSingle(e17, t19, i11, r10) {
    var _a;
    const { fboCache: s15, techniques: o16, bindParameters: h7, _passParameters: n19, renderingContext: a15 } = this, c11 = o16.get(l7), u8 = o16.get(s11), m8 = o16.get(t15);
    if (!m8.compiled || !u8.compiled || !c11.compiled) return void this.requestRender(a3.UPDATE);
    const p6 = t19(), { width: w5, height: x3 } = e17.descriptor;
    n19.highlightTexture = e17;
    const { camera: _5 } = h7, { fullWidth: C6, fullHeight: v3, pixelRatio: j3 } = _5, H3 = Math.ceil(C6 / j3), q3 = Math.ceil(v3 / j3), { _singleHighlightBlurDrawParameters: P4 } = this, D2 = this.view._stage.renderView.renderer, { highlights: O3 } = h7;
    for (let d7 = 0; d7 < O3.length; ++d7) {
      const { name: e18 } = O3[d7];
      if (!D2.hasHighlightOptions(e18)) continue;
      n19.highlightLevel = d7, a15.setClearColor(0, 0, 0, 0);
      const t20 = s15.acquire(w5, x3, "single highlight", R.RG);
      a15.bindFramebuffer(t20.fbo), a15.setViewport(0, 0, w5, x3), a15.clear(_2.COLOR), a15.bindTechnique(c11, h7, n19), i11(p6), P4.blurInput = t20.getTexture(), o3(P4.blurSize, 1 / H3, 0);
      const o17 = s15.acquire(H3, q3, "single highlight blur h", R.RG);
      a15.unbindTexture((_a = o17.fbo) == null ? void 0 : _a.colorTexture), a15.bindFramebuffer(o17.fbo), a15.setViewport(0, 0, H3, q3), a15.clear(_2.COLOR), a15.bindTechnique(u8, h7, n19, P4), i11(p6), t20.release(), o3(P4.blurSize, 0, 1 / q3), n19.singleHighlightBlurTexture = o17.getTexture(), r10(), a15.bindTechnique(m8, h7, n19, P4), i11(p6), o17.release();
    }
  }
  _gridUpdateResources(e17) {
    const t19 = this._grid, { width: i11, height: r10 } = e17.descriptor;
    if (t19.horizontalCellCount = Math.ceil(i11 / c6), t19.verticalCellCount = Math.ceil(r10 / c6), t19.vao) return;
    const s15 = this.renderingContext, o16 = E4.createIndex(s15, F.STATIC_DRAW, F2);
    t19.vao = new r6(s15, O, /* @__PURE__ */ new Map([["geometry", O2]]), /* @__PURE__ */ new Map([["geometry", E4.createVertex(s15, F.STATIC_DRAW)]]), o16);
  }
  _gridComputeCoverage(e17, t19, i11) {
    var _a;
    const r10 = this.renderingContext, s15 = this._grid, o16 = t19.descriptor, h7 = Math.ceil(o16.width / c6), l10 = Math.ceil(o16.height / c6);
    this._downsampleDrawParameters.input = t19, (_a = s15.coverage) == null ? void 0 : _a.release();
    const n19 = this.fboCache.acquire(h7, l10, "highlight coverage", R.RG);
    return s15.coverage = n19, r10.bindFramebuffer(n19.fbo), r10.bindTechnique(e17, i11, this._passParameters, this._downsampleDrawParameters), r10.setViewport(0, 0, h7, l10), r10.screen.draw(), s15;
  }
  get test() {
  }
};
r2([m()], I2.prototype, "produces", void 0), r2([m()], I2.prototype, "consumes", void 0), I2 = r2([a("esri.views.3d.webgl-engine.effects.highlight.Highlight")], I2);
var M3 = class {
  constructor() {
    this.coverage = null, this.vao = null, this.verticalCellCount = 0, this.horizontalCellCount = 0, this.viewportWidth = 0, this.viewportHeight = 0;
  }
};
function U2(e17) {
  const t19 = new Uint8Array(128);
  let i11 = 0;
  for (const r10 of e17) {
    const e18 = 4 * i11, s15 = 4 * i11 + 64;
    ++i11;
    const { color: o16 } = r10, h7 = r10.haloColor ?? o16;
    t19[e18 + 0] = o16.r, t19[e18 + 1] = o16.g, t19[e18 + 2] = o16.b, t19[e18 + 3] = r10.fillOpacity * o16.a * 255, t19[s15 + 0] = h7.r, t19[s15 + 1] = h7.g, t19[s15 + 2] = h7.b, t19[s15 + 3] = r10.haloOpacity * h7.a * 255;
  }
  return t19;
}
var G3 = 0;
function L2(e17) {
  let t19 = 0;
  for (const r10 of e17) {
    const { name: e18 } = r10;
    t19 += e18.length;
    const { color: i12, fillOpacity: s15, haloColor: o16, haloOpacity: h7 } = r10;
    t19 += i12.r + i12.g + i12.b + i12.a + s15, t19 += o16 ? o16.r + o16.g + o16.b + o16.a + h7 : 0;
  }
  const i11 = e17.at(0);
  if (i11) {
    const { shadowOpacity: e18, shadowDifference: r10, shadowColor: s15 } = i11;
    t19 += e18 + r10 + s15.r + s15.g + s15.b + s15.a;
  }
  return G3++ + (t19 >= 0 ? 0 : 1);
}
var F2 = new Uint8Array([0, 1, 2, 2, 1, 3]);
function V(e17, t19, i11, r10, s15, o16 = 0) {
  const h7 = r10.highlights, a15 = h7.length > 1 ? t19.acquire(i11.width, i11.height, "highlight mix", R.RG) : null;
  if (a15) {
    const t20 = e17.getBoundFramebufferObject();
    e17.bindFramebuffer(a15.fbo), e17.clearFramebuffer(s3), e17.bindFramebuffer(t20);
  }
  const c11 = a15 == null ? void 0 : a15.getTexture();
  r10.highlightMixTexture = c11, o3(r10.highlightMixOrigin, o16, 0), h7.forEach((t20, h8) => {
    h8 > 0 && (e17.bindTexture(c11, w2.TEXTURE_UNIT_FOR_UPDATES), e17.gl.copyTexSubImage2D(M.TEXTURE_2D, 0, 0, 0, o16, 0, i11.width, i11.height), e17.bindTexture(null, w2.TEXTURE_UNIT_FOR_UPDATES)), e17.clear(_2.DEPTH), r10.highlightLevel = h8, s15();
  }), r10.highlightLevel = null, r10.highlightMixTexture = null, a15 == null ? void 0 : a15.release();
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/GLMaterialRepository.js
var s12 = class {
  constructor(e17, t19, i11, s15) {
    this._textures = e17, this._techniques = t19, this.materialChanged = i11, this.requestRender = s15, this._id2glMaterialRef = new t9();
  }
  dispose() {
    this._textures.destroy();
  }
  acquire(e17, t19, r10) {
    this._ownMaterial(e17);
    const i11 = e17.produces.get(t19);
    if (!(i11 == null ? void 0 : i11(r10))) return null;
    let s15 = this._id2glMaterialRef.get(r10, e17.id);
    if (null == s15) {
      const t20 = e17.createGLMaterial({ material: e17, techniques: this._techniques, textures: this._textures, output: r10 });
      s15 = new a11(t20), this._id2glMaterialRef.set(r10, e17.id, s15);
    }
    return s15.ref(), s15.glMaterial;
  }
  release(e17, r10) {
    const i11 = this._id2glMaterialRef.get(r10, e17.id);
    null != i11 && (i11.unref(), i11.referenced || (r3(i11.glMaterial), this._id2glMaterialRef.delete(r10, e17.id)));
  }
  _ownMaterial(t19) {
    t19.repository && t19.repository !== this && n.getLogger("esri.views.3d.webgl-engine.lib.GLMaterialRepository").error("Material is already owned by a different material repository"), t19.repository = this;
  }
};
var a11 = class {
  constructor(e17) {
    this.glMaterial = e17, this._refCnt = 0;
  }
  ref() {
    ++this._refCnt;
  }
  unref() {
    --this._refCnt, s5(this._refCnt >= 0);
  }
  get referenced() {
    return this._refCnt > 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Update.js
var e15;
!function(e17) {
  e17[e17.Immediate = 0] = "Immediate", e17[e17.FadeWithWeather = 1] = "FadeWithWeather";
}(e15 || (e15 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BindParameters.js
var o13 = class {
  constructor(i11) {
    this.shadowMap = i11, this.slot = A2.OPAQUE_MATERIAL, this.slicePlane = null, this.hasOccludees = false, this.enableFillLights = true, this.oitPass = o6.NONE, this.alignPixelEnabled = false, this.decorations = true, this.overlayStretch = 1, this.viewshedEnabled = false, this._camera = new it(), this._inverseViewport = n7(), this._oldLighting = new _3(), this._newLighting = new _3(), this._fadedLighting = new _3(), this._lighting = this._newLighting, this.ssr = new c9(), this.terrainDepthTest = false, this.cullAboveTerrain = false, this.highlights = new Array(), this.highlightOrderMap = /* @__PURE__ */ new Map(), this.highlightMixOrigin = n7(), this.highlightMixTexture = null, this.hudRenderStyle = c5.Occluded, this.hudOccludedFragmentOpacity = 1, this.clouds = new x2(), this.shadowHighlightsVisible = false;
  }
  get camera() {
    return this._camera;
  }
  set camera(i11) {
    this._camera = i11, this._inverseViewport[0] = 1 / i11.fullViewport[2], this._inverseViewport[1] = 1 / i11.fullViewport[3];
  }
  get inverseViewport() {
    return this._inverseViewport;
  }
  get lighting() {
    return this._lighting;
  }
  fadeLighting() {
    switch (this.clouds.fadeFactor) {
      case 0:
        this._lighting = this._oldLighting;
        break;
      default:
        this._fadedLighting.lerpLighting(this._oldLighting, this._newLighting, this.clouds.fadeFactor), this._lighting = this._fadedLighting;
        break;
      case 1:
        this._lighting = this._newLighting, this._oldLighting.copyFrom(this._newLighting);
    }
  }
  updateLighting(i11, t19, h7, e17) {
    this._oldLighting.copyFrom(this.lighting), this._newLighting.noonFactor = t19, this._newLighting.globalFactor = h7, this._newLighting.set(i11), e17 === e15.FadeWithWeather && this.clouds.requestFade(), this.fadeLighting();
  }
  get highlight() {
    return null == this.highlightLevel ? null : this.highlights[this.highlightLevel];
  }
};
var c9 = class {
  constructor() {
    this.fadeFactor = 1, this.reprojectionMatrix = e6();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderContext.js
var a12 = class {
  constructor(r10, i11) {
    this.rctx = r10, this.lastFrameCamera = new it(), this.output = n9.Color, this.renderOccludedMask = o14, this.bind = new o13(i11), this.bind.alignPixelEnabled = true;
  }
};
var o14 = p.Occlude | p.OccludeAndTransparent | p.OccludeAndTransparentStencil;

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/CascadeCamera.js
var i10 = class extends it {
  constructor() {
    super(...arguments), this._projectionMatrix = e6();
  }
  get projectionMatrix() {
    return this._projectionMatrix;
  }
};
r2([m()], i10.prototype, "_projectionMatrix", void 0), r2([m({ readOnly: true })], i10.prototype, "projectionMatrix", null), i10 = r2([a("esri.views.3d.webgl-engine.lib.CascadeCamera")], i10);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ShadowMap.js
var P2;
!function(t19) {
  t19[t19.Highlight = 0] = "Highlight", t19[t19.ExcludeHighlight = 1] = "ExcludeHighlight";
}(P2 || (P2 = {}));
var q2 = class {
  constructor() {
    this.camera = new i10(), this.lightMat = e6();
  }
};
var G4 = class {
  constructor() {
    this.maxNumCascadesHighQuality = 4, this.maxNumCascadesLowQuality = 4, this.textureSizeModHighQuality = 1.3, this.textureSizeModLowQuality = 0.9, this.splitSchemeLambda = 0;
  }
};
var X2 = class {
  constructor(t19, s15) {
    this._fbos = t19, this._viewingMode = s15, this._enabled = false, this._snapshots = new Array(), this._textureHeight = 0, this._numCascades = 1, this.settings = new G4(), this._projectionView = e6(), this._projectionViewInverse = e6(), this._modelViewLight = e6(), this._cascadeDistances = [0, 0, 0, 0, 0], this._usedCascadeDistances = n6(), this._cascades = [new q2(), new q2(), new q2(), new q2()], this._lastOrigin = null, this._maxTextureWidth = Math.min(has("esri-mobile") ? 4096 : 16384, t19.rctx.parameters.maxTextureSize);
  }
  dispose() {
    this.enabled = false, this.disposeOffscreenBuffers();
  }
  get depthTexture() {
    var _a;
    return (_a = this._handle) == null ? void 0 : _a.getTexture();
  }
  get _textureWidth() {
    return this._textureHeight * this._numCascades;
  }
  get numCascades() {
    return this._numCascades;
  }
  get cascadeDistances() {
    return s2(this._usedCascadeDistances, this._cascadeDistances[0], this._numCascades > 1 ? this._cascadeDistances[1] : 1 / 0, this._numCascades > 2 ? this._cascadeDistances[2] : 1 / 0, this._numCascades > 3 ? this._cascadeDistances[3] : 1 / 0);
  }
  disposeOffscreenBuffers() {
    this._handle = t(this._handle), this._discardSnapshots();
  }
  set maxCascades(s15) {
    this.settings.maxNumCascadesHighQuality = r(Math.floor(s15), 1, 4);
  }
  get maxCascades() {
    return this.settings.maxNumCascadesHighQuality;
  }
  set enabled(t19) {
    this._enabled = t19, t19 || this.disposeOffscreenBuffers();
  }
  get enabled() {
    return this._enabled;
  }
  get ready() {
    return this._enabled && null != this.depthTexture;
  }
  get cascades() {
    for (let t19 = 0; t19 < this._numCascades; ++t19) it2[t19] = this._cascades[t19];
    return it2.length = this._numCascades, it2;
  }
  start(t19, s15, e17, i11, a15) {
    s5(this.enabled);
    const { near: r10, far: h7 } = Tt(e17);
    this._computeCascadeDistances(r10, h7, i11), this._textureHeight = this._computeTextureHeight(t19, a15, i11), this._setupMatrices(t19, s15);
    const { viewMatrix: o16, projectionMatrix: n19 } = t19;
    for (let c11 = 0; c11 < this._numCascades; ++c11) this._constructCascade(c11, n19, o16, s15);
    this._lastOrigin = null, this.clear();
  }
  finish() {
    var _a;
    s5(this.enabled), (_a = this._handle) == null ? void 0 : _a.detachDepth();
  }
  getShadowMapMatrices(t19) {
    if (!this._lastOrigin || !H(t19, this._lastOrigin)) {
      this._lastOrigin = this._lastOrigin || n4(), s4(this._lastOrigin, t19);
      for (let s15 = 0; s15 < this._numCascades; ++s15) {
        i3(at, this._cascades[s15].lightMat, t19);
        for (let t20 = 0; t20 < 16; ++t20) rt[16 * s15 + t20] = at[t20];
      }
    }
    return rt;
  }
  moveSnapshot(t19) {
    var _a, _b;
    s5(this.enabled), (_a = this._handle) == null ? void 0 : _a.detachDepth(), (_b = this._snapshots[t19]) == null ? void 0 : _b.release(), this._snapshots[t19] = this._handle, this._handle = null, this.clear();
  }
  copySnapshot(t19) {
    var _a, _b, _c, _d;
    const s15 = (_b = (_a = this._handle) == null ? void 0 : _a.getTexture()) == null ? void 0 : _b.descriptor;
    if (!this.enabled || !s15) return;
    (_c = this._snapshots[t19]) == null ? void 0 : _c.release();
    const { width: e17, height: i11 } = s15, a15 = t19 === P2.Highlight ? "shadow highlight snapshot" : "shadow no highlight snapshot";
    this._snapshots[t19] = this._fbos.acquire(e17, i11, a15, R.RGBA4);
    const r10 = this._fbos.rctx;
    this._bindFbo();
    const h7 = r10.bindTexture((_d = this._snapshots[t19]) == null ? void 0 : _d.getTexture(), w2.TEXTURE_UNIT_FOR_UPDATES);
    r10.gl.copyTexSubImage2D(M.TEXTURE_2D, 0, 0, 0, 0, 0, e17, i11), r10.bindTexture(h7, w2.TEXTURE_UNIT_FOR_UPDATES);
  }
  getSnapshot(t19) {
    var _a;
    return this.enabled ? (_a = this._snapshots[t19]) == null ? void 0 : _a.getTexture() : null;
  }
  clear() {
    const t19 = this._fbos.rctx;
    this._ensureFbo(), this._bindFbo(), t19.setClearColor(1, 1, 1, 1), t19.clear(_2.COLOR | _2.DEPTH);
  }
  _computeTextureHeight(t19, s15, e17) {
    const i11 = Math.min(window.devicePixelRatio, s15) / t19.pixelRatio, a15 = e17 ? this.settings.textureSizeModHighQuality : this.settings.textureSizeModLowQuality, r10 = n11(Math.floor(Math.max(t19.fullWidth, t19.fullHeight) * i11 * a15)), h7 = Math.min(this._maxTextureWidth, this._numCascades * r10);
    return i6(h7 / this._numCascades);
  }
  _ensureFbo() {
    var _a, _b, _c, _d, _e;
    ((_b = (_a = this._handle) == null ? void 0 : _a.fbo) == null ? void 0 : _b.width) === this._textureWidth && ((_c = this._handle) == null ? void 0 : _c.fbo.height) === this._textureHeight || ((_d = this._handle) == null ? void 0 : _d.release(), this._handle = this._fbos.acquire(this._textureWidth, this._textureHeight, "shadow map", R.RGBA4)), (_e = this._handle) == null ? void 0 : _e.acquireDepth(E5.DEPTH16_BUFFER);
  }
  _discardSnapshot(t19) {
    this._snapshots[t19] = t(this._snapshots[t19]);
  }
  _discardSnapshots() {
    for (let t19 = 0; t19 < this._snapshots.length; ++t19) this._discardSnapshot(t19);
    this._snapshots.length = 0;
  }
  _bindFbo() {
    var _a;
    this._fbos.rctx.bindFramebuffer((_a = this._handle) == null ? void 0 : _a.fbo);
  }
  _constructCascade(t19, s15, e17, i11) {
    const a15 = this._cascades[t19], o16 = -this._cascadeDistances[t19], n19 = -this._cascadeDistances[t19 + 1], c11 = (s15[10] * o16 + s15[14]) / Math.abs(s15[11] * o16 + s15[15]), l10 = (s15[10] * n19 + s15[14]) / Math.abs(s15[11] * n19 + s15[15]);
    s5(c11 < l10);
    for (let r10 = 0; r10 < 8; ++r10) {
      s2(J, r10 % 4 == 0 || r10 % 4 == 3 ? -1 : 1, r10 % 4 == 0 || r10 % 4 == 1 ? -1 : 1, r10 < 4 ? c11 : l10, 1);
      const t20 = K[r10];
      z(t20, J, this._projectionViewInverse), t20[0] /= t20[3], t20[1] /= t20[3], t20[2] /= t20[3];
    }
    y(et, K[0]), a15.camera.viewMatrix = i3(k, this._modelViewLight, et);
    for (let r10 = 0; r10 < 8; ++r10) E(K[r10], K[r10], a15.camera.viewMatrix);
    let d7 = K[0][2], m8 = K[0][2];
    for (let r10 = 1; r10 < 8; ++r10) d7 = Math.min(d7, K[r10][2]), m8 = Math.max(m8, K[r10][2]);
    d7 -= 200, m8 += 200, a15.camera.near = -m8, a15.camera.far = -d7, jt(e17, i11, d7, m8, a15.camera), c(a15.lightMat, a15.camera.projectionMatrix, a15.camera.viewMatrix);
    const u8 = this._textureHeight;
    a15.camera.viewport = [t19 * u8, 0, u8, u8];
  }
  _setupMatrices(t19, s15) {
    c(this._projectionView, t19.projectionMatrix, t19.viewMatrix), h2(this._projectionViewInverse, this._projectionView);
    const e17 = this._viewingMode === l2.Global ? t19.eye : o4(et, 0, 0, 1);
    X(this._modelViewLight, [0, 0, 0], [-s15[0], -s15[1], -s15[2]], e17);
  }
  _computeCascadeDistances(t19, e17, i11) {
    const a15 = i11 ? this.settings.maxNumCascadesHighQuality : this.settings.maxNumCascadesLowQuality;
    this._numCascades = Math.min(1 + Math.floor(u3(e17 / t19, 4)), a15);
    const r10 = (e17 - t19) / this._numCascades, h7 = (e17 / t19) ** (1 / this._numCascades);
    let o16 = t19, n19 = t19;
    for (let c11 = 0; c11 < this._numCascades + 1; ++c11) this._cascadeDistances[c11] = o(o16, n19, this.settings.splitSchemeLambda), o16 *= h7, n19 += r10;
  }
  get test() {
  }
};
var k = e6();
var J = n6();
var K = [];
for (let yt = 0; yt < 8; ++yt) K.push(n6());
var Y = n7();
var Z = n7();
var $ = n7();
var tt = n7();
var st = n7();
var et = n4();
var it2 = [];
var at = e6();
var rt = o5.concat(o5, o5, o5, o5);
var ht = n7();
var ot = n7();
var nt = [n7(), n7(), n7(), n7()];
var ct = n7();
var lt = n7();
var dt = n7();
var mt = n7();
var ut = n7();
var _t = n7();
var ft = n7();
function gt(t19, s15, e17, i11, a15, r10, h7, o16) {
  o3(ht, 0, 0);
  for (let d7 = 0; d7 < 4; ++d7) u2(ht, ht, t19[d7]);
  l(ht, ht, 0.25), o3(ot, 0, 0);
  for (let d7 = 4; d7 < 8; ++d7) u2(ot, ot, t19[d7]);
  l(ot, ot, 0.25), _(nt[0], t19[4], t19[5], 0.5), _(nt[1], t19[5], t19[6], 0.5), _(nt[2], t19[6], t19[7], 0.5), _(nt[3], t19[7], t19[4], 0.5);
  let n19 = 0, c11 = b2(nt[0], ht);
  for (let d7 = 1; d7 < 4; ++d7) {
    const t20 = b2(nt[d7], ht);
    t20 < c11 && (c11 = t20, n19 = d7);
  }
  e3(ct, nt[n19], t19[n19 + 4]);
  const l10 = ct[0];
  let M4, C6;
  ct[0] = -ct[1], ct[1] = l10, e3(lt, ot, ht), j(lt, ct) < 0 && x(ct, ct), _(ct, ct, lt, e17), v2(ct, ct), M4 = C6 = j(e3(dt, t19[0], ht), ct);
  for (let d7 = 1; d7 < 8; ++d7) {
    const s16 = j(e3(dt, t19[d7], ht), ct);
    s16 < M4 ? M4 = s16 : s16 > C6 && (C6 = s16);
  }
  r5(i11, ht), l(dt, ct, M4 - s15), u2(i11, i11, dt);
  let j3 = -1, T3 = 1, y4 = 0, D2 = 0;
  for (let d7 = 0; d7 < 8; ++d7) {
    e3(mt, t19[d7], i11), v2(mt, mt);
    const s16 = ct[0] * mt[1] - ct[1] * mt[0];
    s16 > 0 ? s16 > j3 && (j3 = s16, y4 = d7) : s16 < T3 && (T3 = s16, D2 = d7);
  }
  c2(j3 > 0, "leftArea"), c2(T3 < 0, "rightArea"), l(ut, ct, M4), u2(ut, ut, ht), l(_t, ct, C6), u2(_t, _t, ht), ft[0] = -ct[1], ft[1] = ct[0];
  const H3 = f(i11, t19[D2], _t, u2(dt, _t, ft), 1, a15), v3 = f(i11, t19[y4], _t, dt, 1, r10), S3 = f(i11, t19[y4], ut, u2(dt, ut, ft), 1, h7), R2 = f(i11, t19[D2], ut, dt, 1, o16);
  c2(H3, "rayRay"), c2(v3, "rayRay"), c2(S3, "rayRay"), c2(R2, "rayRay");
}
function pt(t19, s15) {
  return 3 * s15 + t19;
}
var xt = n7();
function bt(t19, s15) {
  return o3(xt, t19[s15], t19[s15 + 3]), xt;
}
var wt = n7();
var Mt = e5();
function Ct(t19, s15, e17, i11, a15) {
  e3(wt, e17, i11), l(wt, wt, 0.5), Mt[0] = wt[0], Mt[1] = wt[1], Mt[2] = 0, Mt[3] = wt[1], Mt[4] = -wt[0], Mt[5] = 0, Mt[6] = wt[0] * wt[0] + wt[1] * wt[1], Mt[7] = wt[0] * wt[1] - wt[1] * wt[0], Mt[8] = 1, Mt[pt(0, 2)] = -j(bt(Mt, 0), t19), Mt[pt(1, 2)] = -j(bt(Mt, 1), t19);
  let r10 = j(bt(Mt, 0), e17) + Mt[pt(0, 2)], h7 = j(bt(Mt, 1), e17) + Mt[pt(1, 2)], o16 = j(bt(Mt, 0), i11) + Mt[pt(0, 2)], n19 = j(bt(Mt, 1), i11) + Mt[pt(1, 2)];
  r10 = -(r10 + o16) / (h7 + n19), Mt[pt(0, 0)] += Mt[pt(1, 0)] * r10, Mt[pt(0, 1)] += Mt[pt(1, 1)] * r10, Mt[pt(0, 2)] += Mt[pt(1, 2)] * r10, r10 = 1 / (j(bt(Mt, 0), e17) + Mt[pt(0, 2)]), h7 = 1 / (j(bt(Mt, 1), e17) + Mt[pt(1, 2)]), Mt[pt(0, 0)] *= r10, Mt[pt(0, 1)] *= r10, Mt[pt(0, 2)] *= r10, Mt[pt(1, 0)] *= h7, Mt[pt(1, 1)] *= h7, Mt[pt(1, 2)] *= h7, Mt[pt(2, 0)] = Mt[pt(1, 0)], Mt[pt(2, 1)] = Mt[pt(1, 1)], Mt[pt(2, 2)] = Mt[pt(1, 2)], Mt[pt(1, 2)] += 1, r10 = j(bt(Mt, 1), s15) + Mt[pt(1, 2)], h7 = j(bt(Mt, 2), s15) + Mt[pt(2, 2)], o16 = j(bt(Mt, 1), e17) + Mt[pt(1, 2)], n19 = j(bt(Mt, 2), e17) + Mt[pt(2, 2)], r10 = -0.5 * (r10 / h7 + o16 / n19), Mt[pt(1, 0)] += Mt[pt(2, 0)] * r10, Mt[pt(1, 1)] += Mt[pt(2, 1)] * r10, Mt[pt(1, 2)] += Mt[pt(2, 2)] * r10, r10 = j(bt(Mt, 1), s15) + Mt[pt(1, 2)], h7 = j(bt(Mt, 2), s15) + Mt[pt(2, 2)], o16 = -h7 / r10, Mt[pt(1, 0)] *= o16, Mt[pt(1, 1)] *= o16, Mt[pt(1, 2)] *= o16, a15[0] = Mt[0], a15[1] = Mt[1], a15[2] = 0, a15[3] = Mt[2], a15[4] = Mt[3], a15[5] = Mt[4], a15[6] = 0, a15[7] = Mt[5], a15[8] = 0, a15[9] = 0, a15[10] = 1, a15[11] = 0, a15[12] = Mt[6], a15[13] = Mt[7], a15[14] = 0, a15[15] = Mt[8];
}
function jt(t19, s15, i11, a15, r10) {
  const h7 = 1 / K[0][3], o16 = 1 / K[4][3];
  s5(h7 < o16);
  let n19 = h7 + Math.sqrt(h7 * o16);
  const c11 = Math.sin(b(t19[2] * s15[0] + t19[6] * s15[1] + t19[10] * s15[2]));
  n19 /= c11, gt(K, n19, c11, Y, Z, $, tt, st), Ct(Y, Z, tt, st, r10.projectionMatrix), r10.projectionMatrix[10] = 2 / (i11 - a15), r10.projectionMatrix[14] = -(i11 + a15) / (i11 - a15);
}
function Tt(t19) {
  let { near: s15, far: e17 } = t19;
  return s15 < 2 && (s15 = 2), e17 < 2 && (e17 = 2), s15 >= e17 && (s15 = 2, e17 = 4), { near: s15, far: e17 };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureTechnique.js
var t16 = class extends l4 {
  constructor(o16, i11) {
    super(o16, i11, new t6(m3, () => import("./TextureOnly.glsl-JGGA5XF6.js")));
  }
  initializePipeline(e17) {
    return e17.hasAlpha ? B2({ blending: c4, colorWrite: g2 }) : B2({ colorWrite: g2 });
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureTechniqueConfiguration.js
var r8 = class extends a5 {
  constructor() {
    super(...arguments), this.hasAlpha = false;
  }
};
r2([i7()], r8.prototype, "hasAlpha", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/OverlayCompositingTechnique.js
var s13 = class extends l4 {
  constructor(r10, s15) {
    super(r10, s15, new t6(m4, () => import("./OverlayCompositing.glsl-5DF4JDRN.js")));
  }
};

// node_modules/@arcgis/core/views/3d/terrain/OverlayRenderer.js
var $2 = class extends u5 {
  constructor(e17) {
    super(e17), this._overlays = null, this._renderTargets = null, this._overlayParameters = new d4(), this.hasHighlights = false, this._hasWater = false, this._renderers = /* @__PURE__ */ new Map(), this._sortedDrapeSourceRenderersDirty = false, this._sortedRenderers = new r4(), this._passParameters = new a9(), this._materials = null, this._screenToWorldRatio = 1, this._localOriginFactory = null, this.unloadedMemory = 0, this.ignoresMemoryFactor = false, this._camera = new it(), this.events = new i(), this.longitudeCyclical = null, this.produces = /* @__PURE__ */ new Map([[A2.DRAPED_MATERIAL, (e18) => e18 !== n9.Highlight || this.hasHighlights], [A2.DRAPED_WATER, () => this._hasWater]]), this._hasTargetWithoutRasterImage = false, this._hasDrapedFeatureSource = false, this._hasDrapedRasterSource = false;
  }
  initialize() {
    const e17 = this._view, r10 = e17._stage, t19 = r10.renderer.fboCache, { waterTextures: s15, textures: i11 } = r10.renderView;
    this._renderContext = new a12(this._rctx, new X2(t19, e17.state.viewingMode)), this.addHandles([d(() => s15.updating, () => this.events.emit("content-changed"), A), d(() => this.spatialReference, (e18) => this._localOriginFactory = new _4(e18), A), v(() => e17.allLayerViews, "after-changes", () => this._sortedDrapeSourceRenderersDirty = true), d(() => L2(e17.state.highlights), () => this._sortedDrapeSourceRenderersDirty = true, P), d(() => e17.state.highlights, (r11) => {
      this._bindParameters.highlights = r11, this._bindParameters.highlightOrderMap = e17.state.highlightOrderMap, this._updateHighlights();
    }, P), e17.resourceController.scheduler.registerTask(g.STAGE, this)]), this._materials = new s12(i11, this._techniques, () => {
      this.notifyChange("rendersOccludedDraped"), this.events.emit("content-changed"), this.notifyChange("updating"), this.notifyChange("isEmpty");
    }, () => this.events.emit("content-changed"));
    const { _bindParameters: l10, _camera: d7 } = this;
    d7.near = 1, d7.far = 1e4, d7.relativeElevation = null, l10.slot = A2.DRAPED_MATERIAL, l10.mainDepth = null, l10.camera = d7, l10.oitPass = o6.NONE, l10.updateLighting([new i5(i2())], 0, 0, e15.Immediate);
  }
  destroy() {
    this._renderers.forEach((e17) => e17.destroy()), this._renderers.clear(), this._passParameters.texture = r3(this._passParameters.texture), this.disposeOverlays();
  }
  get _bindParameters() {
    return this._renderContext.bind;
  }
  get _rctx() {
    return this._stage.renderView.renderingContext;
  }
  get _view() {
    return this.parent.view;
  }
  get _stage() {
    return this.parent.view._stage;
  }
  get spatialReference() {
    return this.parent.spatialReference;
  }
  get _techniques() {
    return this._stage.renderView.techniques;
  }
  get rctx() {
    return this._rctx;
  }
  get materials() {
    return this._materials;
  }
  get screenToWorldRatio() {
    return this._screenToWorldRatio;
  }
  get localOriginFactory() {
    return this._localOriginFactory;
  }
  get pluginContext() {
    return this._pluginContext;
  }
  initializeRenderContext(e17) {
    this._pluginContext = e17, this._techniques.precompile(s13);
  }
  uninitializeRenderContext() {
  }
  acquireTechniques() {
    return [];
  }
  render() {
  }
  get updating() {
    return this._sortedDrapeSourceRenderersDirty || n2(this._renderers, (e17) => e17.updating);
  }
  get hasOverlays() {
    return null != this._overlays && null != this._renderTargets;
  }
  getMaterialRenderer(e17) {
    for (const r10 of this._renderers.values()) {
      const t19 = r10.getMaterialRenderer(e17);
      if (t19) return t19;
    }
    return null;
  }
  get layers() {
    return this._sortedDrapeSourceRenderersDirty && this._updateSortedDrapeSourceRenderers(), this._sortedRenderers.map((e17) => e17.drapeSource.layer).filter((e17) => !!e17);
  }
  _updateHighlights() {
    const e17 = this._view.state;
    this._renderers.forEach((r10) => r10.updateHighlights(e17.highlightOrderMap));
  }
  createDrapeSourceRenderer(e17, r10, t19) {
    const s15 = this._renderers.get(e17);
    null != s15 && s15.destroy();
    const i11 = new r10({ ...t19, rendererContext: this, drapeSource: e17 });
    return this._renderers.set(e17, i11), this._sortedDrapeSourceRenderersDirty = true, "fullOpacity" in e17 && this.addHandles(d(() => e17.fullOpacity, () => this.events.emit("content-changed")), e17), i11;
  }
  removeDrapeSourceRenderer(e17) {
    if (null == e17) return;
    const r10 = this._renderers.get(e17);
    null != r10 && (this._sortedDrapeSourceRenderersDirty = true, this._renderers.delete(e17), this.removeHandles(e17), r10.destroy());
  }
  computeValidity() {
    var _a;
    return ((_a = this._renderTargets) == null ? void 0 : _a.computeValidity()) ?? 0;
  }
  releaseRenderTargets() {
    var _a;
    (_a = this._renderTargets) == null ? void 0 : _a.dispose();
  }
  get overlays() {
    return this._overlays ?? [];
  }
  ensureDrapeTargets(e17) {
    this._hasTargetWithoutRasterImage = !!this._overlays && n3(e17, (e18) => e18.drapeTargetType === t10.WithoutRasterImage);
  }
  ensureDrapeSources(e17) {
    this._overlays ? (this._hasDrapedFeatureSource = n3(e17, (e18) => e18.drapeSourceType === e13.Features), this._hasDrapedRasterSource = n3(e17, (e18) => e18.drapeSourceType === e13.RasterImage)) : this._hasDrapedFeatureSource = this._hasDrapedRasterSource = false;
  }
  get _needsColorWithoutRasterImage() {
    return this._hasDrapedRasterSource && this._hasDrapedFeatureSource && this._hasTargetWithoutRasterImage;
  }
  ensureOverlays(e17, r10, t19 = this._bindParameters.overlayStretch) {
    null == this._overlays && (this._renderTargets = new i8(this._stage.renderer.fboCache), this._overlays = [new n13(), new n13()]), this.ensureDrapeTargets(e17), this.ensureDrapeSources(r10), this._bindParameters.overlayStretch = t19;
  }
  disposeOverlays() {
    this._overlays = null, this._renderTargets = r3(this._renderTargets), this.events.emit("textures-disposed");
  }
  getTexture(e17) {
    var _a, _b;
    if (null != e17) return e17 === o9.ColorNoRasterImage && !this._needsColorWithoutRasterImage && this._hasDrapedFeatureSource ? (_a = this._renderTargets) == null ? void 0 : _a.getTexture(o9.Color) : (_b = this._renderTargets) == null ? void 0 : _b.getTexture(e17);
  }
  get running() {
    return this.updating;
  }
  runTask(e17) {
    this._processDrapeSources(e17, () => true);
  }
  _processDrapeSources(e17, r10) {
    let s15 = false;
    for (const [t19, i11] of this._renderers) {
      if (e17.done) break;
      (t19.destroyed || r10(t19)) && (i11.commitChanges(this._view.state.highlightOrderMap) && (s15 = true, e17.madeProgress()));
    }
    this._sortedDrapeSourceRenderersDirty && (this._sortedDrapeSourceRenderersDirty = false, s15 = true, this._updateSortedDrapeSourceRenderers()), s15 && (null != this._overlays && 0 === this._renderers.size && this.disposeOverlays(), this.notifyChange("updating"), this.notifyChange("isEmpty"), this.events.emit("content-changed"), this.hasHighlights = n2(this._renderers, (e18) => e18.hasHighlights), this.notifyChange("rendersOccludedDraped"));
  }
  hasHighlightOptions(e17) {
    return n2(this._renderers, (r10) => r10.hasHighlightOptions(e17));
  }
  processSyncDrapeSources() {
    this._processDrapeSources(C, (e17) => e17.updatePolicy === C4.SYNC);
  }
  get isEmpty() {
    return !t5.OVERLAY_DRAW_DEBUG_TEXTURE && !n2(this._renderers, (e17) => !e17.isEmpty);
  }
  get hasWater() {
    const e17 = n2(this._renderers, (e18) => e18.hasWater);
    return e17 !== this._hasWater && (this._hasWater = e17, this.events.emit("has-water")), this._hasWater;
  }
  get rendersOccludedDraped() {
    const e17 = this._renderContext.renderOccludedMask;
    this._renderContext.renderOccludedMask = se, ++this._techniques.precompiling;
    const r10 = this._sortedRenderers.some(({ renderer: e18 }) => e18.precompile(this._renderContext));
    return --this._techniques.precompiling, this._renderContext.renderOccludedMask = e17, r10;
  }
  renders(e17) {
    if (t5.OVERLAY_DRAW_DEBUG_TEXTURE && e17 !== o9.Occluded && e17 !== o9.Highlight) return true;
    ++this._techniques.precompiling;
    const r10 = this._sortedRenderers.some(({ renderer: e18 }) => e18.precompile(this._renderContext));
    return --this._techniques.precompiling, r10;
  }
  get mode() {
    var _a;
    return this.isEmpty ? C5.Disabled : this.hasWater && this.renders(o9.WaterNormal) ? C5.EnabledWithWater : ((_a = this._renderTargets) == null ? void 0 : _a.getTexture(o9.Color)) ? C5.Enabled : C5.Disabled;
  }
  updateAnimation(e17) {
    let r10 = false;
    return this._renderers.forEach((t19) => r10 = t19.updateAnimation(e17) || r10), r10 && this.parent.requestRender(a3.BACKGROUND), r10;
  }
  updateDrapeSourceOrder() {
    this._sortedDrapeSourceRenderersDirty = true;
  }
  precompileShaders(e17) {
    if (this._renderTargets) {
      this._bindParameters.alignPixelEnabled = e17.alignPixelEnabled, ++this._techniques.precompiling;
      for (const e18 of this._renderTargets.targets) {
        if (e18.content === o9.ColorNoRasterImage && !this._needsColorWithoutRasterImage) continue;
        const r10 = e18.output;
        this._renderContext.output = r10, this._bindParameters.slot = r10 === n9.Normal ? A2.DRAPED_WATER : A2.DRAPED_MATERIAL, e18.content === o9.Occluded && (this._renderContext.renderOccludedMask = se), this._sortedRenderers.forAll(({ drapeSource: r11, renderer: t19 }) => {
          e18.content === o9.ColorNoRasterImage && r11.drapeSourceType === e13.RasterImage || t19.precompile(this._renderContext);
        }), this._renderContext.renderOccludedMask = o14;
      }
      --this._techniques.precompiling;
    }
  }
  drawOverlays(e17) {
    if (this._overlays && this._renderTargets) {
      for (const e18 of this._overlays) this.longitudeCyclical ? e18.setupGeometryViewsCyclical(this.longitudeCyclical) : e18.setupGeometryView();
      this._bindParameters.alignPixelEnabled = e17.alignPixelEnabled;
      for (const e18 of this._renderTargets.targets) {
        if (e18.content === o9.ColorNoRasterImage && !this._needsColorWithoutRasterImage) continue;
        const r10 = this._drawTarget(E6.INNER, e18), t19 = this._drawTarget(E6.OUTER, e18);
        (r10 || t19) && e18.fbo.generateMipMap();
      }
    }
  }
  _drawTarget(e17, r10) {
    const t19 = this._overlays[e17], s15 = t19.canvasGeometries;
    if (0 === s15.numViews) return false;
    const i11 = this._view.state.contentPixelRatio;
    this._screenToWorldRatio = i11 * t19.mapUnitsPerPixel / this._bindParameters.overlayStretch;
    const n19 = r10.output;
    if (this.isEmpty || n19 === n9.Normal && !this.hasWater || !t19.hasSomeSizedView()) return false;
    const { _rctx: o16, _camera: a15, _renderContext: h7, _bindParameters: l10 } = this;
    if (a15.pixelRatio = t19.pixelRatio * i11, h7.output = n19, l10.screenToWorldRatio = this._screenToWorldRatio, l10.screenToPCSRatio = this._screenToWorldRatio * this.parent.worldToPCSRatio, l10.slot = n19 === n9.Normal ? A2.DRAPED_WATER : A2.DRAPED_MATERIAL, r10.content === o9.Occluded && (h7.renderOccludedMask = se), !this.renders(r10.content)) return h7.renderOccludedMask = o14, false;
    const { resolution: d7 } = t19, c11 = e17 === E6.INNER ? 0 : d7;
    o16.setViewport(c11, 0, d7, d7), this._bindTargetFBO(r10), e17 === E6.INNER && (o16.setClearColor(0, 0, 0, 0), o16.clear(_2.COLOR));
    if (t5.OVERLAY_DRAW_DEBUG_TEXTURE && r10.content !== o9.Occluded && r10.content !== o9.Highlight) {
      this._techniques.precompile(t16, ie);
      const r11 = this._techniques.get(t16, ie);
      for (let i12 = 0; i12 < s15.numViews; i12++) this._setViewParameters(s15.extents[i12], t19), this._ensureDebugPatternResources(t19.resolution, re[e17]), o16.bindTechnique(r11, l10, this._passParameters), o16.screen.draw();
    }
    if (r10.output === n9.Highlight) {
      const { fboCache: t20 } = this._stage.renderer, s16 = this._resolution;
      this._bindTargetFBO(r10), V(o16, t20, { width: s16, height: s16 }, l10, () => this._renderAllGeometry(e17, r10), c11);
    } else this._renderAllGeometry(e17, r10);
    return o16.bindFramebuffer(null), h7.renderOccludedMask = o14, true;
  }
  _renderAllGeometry(e17, r10) {
    const t19 = this._overlays[e17], s15 = t19.canvasGeometries;
    this._sortedRenderers.forAll(({ drapeSource: i11, renderer: n19 }) => {
      if (r10.content === o9.ColorNoRasterImage && i11.drapeSourceType === e13.RasterImage) return;
      const { fullOpacity: o16 } = i11, a15 = null != o16 && o16 < 1 && r10.output === n9.Color && this._bindTemporaryFBO();
      for (let e18 = 0; e18 < s15.numViews; e18++) this._setViewParameters(s15.extents[e18], t19), n19.render(this._renderContext);
      if (a15) {
        this._bindTargetFBO(r10), this._overlayParameters.texture = a15.getTexture(), this._overlayParameters.opacity = o16, this._overlayParameters.overlayIndex = e17;
        const t20 = this._techniques.get(s13);
        this._rctx.bindTechnique(t20, this._bindParameters, this._overlayParameters), this._rctx.screen.draw(), a15.release();
      }
    });
  }
  _bindTargetFBO(e17) {
    const r10 = this._resolution, t19 = 2 * r10;
    e17.fbo.bind(this._rctx, t19, r10);
  }
  _bindTemporaryFBO() {
    const e17 = this._resolution, r10 = 2 * e17, t19 = this._stage.renderer.fboCache, s15 = t19.acquire(r10, e17, "overlay tmp");
    return t19.rctx.bindFramebuffer(s15.fbo), t19.rctx.clear(_2.COLOR), s15;
  }
  get _resolution() {
    var _a;
    return ((_a = this._overlays) == null ? void 0 : _a[E6.INNER].resolution) ?? 0;
  }
  notifyContentChanged() {
    this.events.emit("content-changed");
  }
  intersect(e17, r10, t19, s15) {
    var _a;
    this._sortedDrapeSourceRenderersDirty && this._updateSortedDrapeSourceRenderers();
    let i11 = 0;
    for (const { renderer: n19 } of this._sortedRenderers) i11 = ((_a = n19.intersect) == null ? void 0 : _a.call(n19, e17, r10, t19, s15, i11)) ?? i11;
  }
  _updateSortedDrapeSourceRenderers() {
    if (this._sortedRenderers.clear(), 0 === this._renderers.size) return;
    const e17 = this._view.map.allLayers, r10 = e17.length;
    this._renderers.forEach((t19, s15) => {
      const i11 = e17.indexOf(s15.layer), n19 = i11 >= 0, o16 = s15.renderGroup ?? (n19 ? a8.MapLayer : a8.ViewLayer), a15 = r10 * o16 + (n19 ? i11 : 0);
      this._sortedRenderers.push(new ee(s15, t19, a15));
    }), this._sortedRenderers.sort((e18, r11) => e18.index - r11.index);
  }
  _setViewParameters(e17, r10) {
    const t19 = this._camera;
    t19.viewport = [0, 0, r10.resolution, r10.resolution], Q(t19.projectionMatrix, 0, e17[2] - e17[0], 0, e17[3] - e17[1], t19.near, t19.far), q(t19.viewMatrix, [-e17[0], -e17[1], 0]);
  }
  _ensureDebugPatternResources(e17, r10) {
    if (o4(this._passParameters.color, r10[0], r10[1], r10[2]), this._passParameters.texture) return;
    const t19 = new Uint8Array(e17 * e17 * 4);
    let s15 = 0;
    for (let n19 = 0; n19 < e17; n19++) for (let r11 = 0; r11 < e17; r11++) {
      const i12 = Math.floor(r11 / 10), o16 = Math.floor(n19 / 10);
      i12 < 2 || o16 < 2 || 10 * i12 > e17 - 20 || 10 * o16 > e17 - 20 ? (t19[s15++] = 255, t19[s15++] = 255, t19[s15++] = 255, t19[s15++] = 255) : (t19[s15++] = 255, t19[s15++] = 255, t19[s15++] = 255, t19[s15++] = 1 & i12 && 1 & o16 ? 1 & r11 ^ 1 & n19 ? 0 : 255 : 1 & i12 ^ 1 & o16 ? 0 : 128);
    }
    const i11 = new p2(e17);
    i11.samplingMode = L.NEAREST, this._passParameters.texture = new w2(this._rctx, i11, t19);
  }
  get test() {
  }
};
r2([m()], $2.prototype, "hasHighlights", void 0), r2([m()], $2.prototype, "_sortedDrapeSourceRenderersDirty", void 0), r2([m({ constructOnly: true })], $2.prototype, "parent", void 0), r2([m({ readOnly: true })], $2.prototype, "_techniques", null), r2([m({ type: Boolean, readOnly: true })], $2.prototype, "updating", null), r2([m()], $2.prototype, "isEmpty", null), r2([m({ readOnly: true })], $2.prototype, "rendersOccludedDraped", null), $2 = r2([a("esri.views.3d.terrain.OverlayRenderer")], $2);
var ee = class {
  constructor(e17, r10, t19) {
    this.drapeSource = e17, this.renderer = r10, this.index = t19;
  }
};
var re = [[1, 0.5, 0.5], [0.5, 0.5, 1]];
var te = -2;
var se = p.OccludeAndTransparent;
var ie = new r8();
ie.hasAlpha = true;

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderGeometry.js
var g4 = class {
  constructor(r10, i11 = {}) {
    this.geometry = r10, this.screenToWorldRatio = 1, this._transformation = e6(), this._shaderTransformation = null, this._boundingSphere = null, this.id = e(), this.layerUid = i11.layerUid, this.graphicUid = i11.graphicUid, this.castShadow = i11.castShadow ?? false, i11.objectShaderTransformation && this.objectShaderTransformationChanged(i11.objectShaderTransformation);
  }
  get transformation() {
    return this._transformation;
  }
  set transformation(t19) {
    n5(this._transformation, t19), this._boundingSphere = null;
  }
  get boundingInfo() {
    return this.geometry.boundingInfo;
  }
  objectShaderTransformationChanged(t19) {
    null == t19 ? this._shaderTransformation = null : (this._shaderTransformation ?? (this._shaderTransformation = e6()), c(this._shaderTransformation, t19, this.geometry.transformation)), this._boundingSphere = null;
  }
  get boundingSphere() {
    return this.boundingInfo ? (null == this._boundingSphere && (this._boundingSphere ?? (this._boundingSphere = E3()), E(U(this._boundingSphere), this.boundingInfo.center, this.shaderTransformation), this._boundingSphere[3] = this.boundingInfo.radius * m2(this.shaderTransformation)), this._boundingSphere) : C3;
  }
  get material() {
    return this.geometry.material;
  }
  get type() {
    return this.geometry.type;
  }
  get shaderTransformation() {
    return this._shaderTransformation ?? this.transformation;
  }
  get attributes() {
    return this.geometry.attributes;
  }
  get highlight() {
    return this.geometry.highlights;
  }
  foreachHighlightOptions(t19) {
    this.geometry.foreachHighlightOptions(t19);
  }
  get hasHighlights() {
    return this.geometry.hasHighlights;
  }
  get occludees() {
    return this.geometry.occludees;
  }
  get visible() {
    return this.geometry.visible;
  }
  set visible(t19) {
    this.geometry.visible = t19;
  }
};

// node_modules/@arcgis/core/layers/graphics/sources/interfaces.js
var a13;
!function(a15) {
  a15[a15.EnableFastUpdates = 0] = "EnableFastUpdates", a15[a15.DisableFastUpdates = 1] = "DisableFastUpdates", a15[a15.UpdateFastLocalOrigin = 2] = "UpdateFastLocalOrigin";
}(a13 || (a13 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/lineStippleUtils.js
var t17 = { dash: [4, 3], dot: [1, 3], "long-dash": [8, 3], "short-dash": [4, 1], "short-dot": [1, 1] };
var o15 = { dash: t17.dash, "dash-dot": [...t17.dash, ...t17.dot], dot: t17.dot, "long-dash": t17["long-dash"], "long-dash-dot": [...t17["long-dash"], ...t17.dot], "long-dash-dot-dot": [...t17["long-dash"], ...t17.dot, ...t17.dot], none: null, "short-dash": t17["short-dash"], "short-dash-dot": [...t17["short-dash"], ...t17["short-dot"]], "short-dash-dot-dot": [...t17["short-dash"], ...t17["short-dot"], ...t17["short-dot"]], "short-dot": t17["short-dot"], solid: null };
var d5 = 8;
function s14(t19, o16) {
  return null == t19 ? t19 : { pattern: t19.slice(), pixelRatio: o16 };
}
function h5(t19) {
  return { pattern: [t19, t19], pixelRatio: 2 };
}
function n18(t19) {
  return "style" === (t19 == null ? void 0 : t19.type) ? l8(t19.style) : null;
}
function l8(t19) {
  return null != t19 ? s14(o15[t19], d5) : null;
}

// node_modules/@arcgis/core/views/3d/support/engineContent/line.js
function b3(t19, e17, r10 = null) {
  const o16 = [], n19 = e17.mapPositions;
  g5(e17, o16);
  const i11 = o16[0][1].data, a15 = o16[0][1].indices.length, l10 = w(a15);
  return h6(e17, o16, l10), j2(e17, o16, l10), T(e17, o16, l10), D(e17, o16, l10), w4(e17, o16, l10), y3(e17, o16, l10), E7(e17, o16, i11), new f7(t19, o16, n19, e10.Line, r10);
}
function g5(t19, e17) {
  const { attributeData: { position: r10 }, removeDuplicateStartEnd: o16 } = t19, n19 = A4(r10) && o16, i11 = r10.length / 3 - (n19 ? 1 : 0), a15 = new Array(2 * (i11 - 1)), l10 = n19 ? r10.slice(0, -3) : r10;
  let u8 = 0;
  for (let s15 = 0; s15 < i11 - 1; s15++) a15[u8++] = s15, a15[u8++] = s15 + 1;
  e17.push([e4.POSITION, new t4(l10, a15, 3, n19)]);
}
function h6(t19, e17, r10) {
  if (null != t19.attributeData.colorFeature) return;
  const n19 = t19.attributeData.color;
  e17.push([e4.COLOR, new t4(n19 ?? N, r10, 4)]);
}
function T(t19, e17, r10) {
  t19.attributeData.normal && e17.push([e4.NORMAL, new t4(t19.attributeData.normal, r10, 3)]);
}
function D(t19, e17, r10) {
  null != t19.attributeData.colorFeature && e17.push([e4.COLORFEATUREATTRIBUTE, new t4([t19.attributeData.colorFeature], r10, 1, true)]);
}
function j2(t19, e17, r10) {
  null == t19.attributeData.sizeFeature && e17.push([e4.SIZE, new t4([t19.attributeData.size ?? 1], r10, 1, true)]);
}
function w4(t19, e17, r10) {
  null != t19.attributeData.sizeFeature && e17.push([e4.SIZEFEATUREATTRIBUTE, new t4([t19.attributeData.sizeFeature], r10, 1, true)]);
}
function y3(t19, e17, r10) {
  null != t19.attributeData.opacityFeature && e17.push([e4.OPACITYFEATUREATTRIBUTE, new t4([t19.attributeData.opacityFeature], r10, 1, true)]);
}
function E7(r10, o16, u8) {
  if (null == r10.overlayInfo || r10.overlayInfo.renderCoordsHelper.viewingMode !== l2.Global || !r10.overlayInfo.spatialReference.isGeographic) return;
  const p6 = t2(u8.length), f9 = s(r10.overlayInfo.spatialReference);
  for (let t19 = 0; t19 < p6.length; t19 += 3) h(u8, t19, p6, t19, f9);
  const b4 = u8.length / 3, g6 = n8(b4 + 1);
  let h7 = I3, T3 = F3, D2 = 0, j3 = 0;
  o3(h7, p6[j3++], p6[j3++]), j3++, g6[0] = 0;
  for (let n19 = 1; n19 < b4 + 1; ++n19) n19 === b4 && (j3 = 0), o3(T3, p6[j3++], p6[j3++]), j3++, D2 += G(h7, T3), g6[n19] = D2, [h7, T3] = [T3, h7];
  o16.push([e4.DISTANCETOSTART, new t4(g6, o16[0][1].indices, 1, true)]);
}
function A4(t19) {
  const e17 = t19.length;
  return t19[0] === t19[e17 - 3] && t19[1] === t19[e17 - 2] && t19[2] === t19[e17 - 1];
}
var I3 = n7();
var F3 = n7();

// node_modules/@arcgis/core/views/3d/support/renderInfoUtils/line.js
function p5(o16, t19, s15, p6) {
  const l10 = "polygon" === o16.type ? p4.CCW_IS_HOLE : p4.NONE, a15 = "polygon" === o16.type ? o16.rings : o16.paths, { position: u8, outlines: f9 } = a7(a15, !!o16.hasZ, l10, o16.spatialReference), m8 = t2(u8.length), g6 = u7(u8, o16.spatialReference, 0, m8, 0, u8, 0, u8.length / 3, t19, s15, p6), y4 = null != g6;
  return { lines: y4 ? c10(f9, u8, m8) : [], projectionSuccess: y4, sampledElevation: g6 };
}
function l9(e17, t19) {
  const i11 = "polygon" === e17.type ? p4.CCW_IS_HOLE : p4.NONE, p6 = "polygon" === e17.type ? e17.rings : e17.paths, { position: l10, outlines: a15 } = a7(p6, false, i11), u8 = o2(l10, e17.spatialReference, 0, l10, t19, 0);
  for (let o16 = 2; o16 < l10.length; o16 += 3) l10[o16] = te;
  return { lines: u8 ? c10(a15, l10) : [], projectionSuccess: u8 };
}
function c10(o16, e17, n19 = null) {
  const r10 = new Array();
  for (const { index: i11, count: s15 } of o16) {
    if (s15 <= 1) continue;
    const o17 = 3 * i11, p6 = 3 * s15;
    r10.push({ position: a2(e17, 3 * i11, 3 * s15), mapPositions: null != n19 ? a2(n19, o17, p6) : void 0 });
  }
  return r10;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/ModelDirtyTypes.js
var E8;
var I4;
!function(E9) {
  E9[E9.ADD = 0] = "ADD", E9[E9.UPDATE = 1] = "UPDATE", E9[E9.REMOVE = 2] = "REMOVE";
}(E8 || (E8 = {})), function(E9) {
  E9[E9.NONE = 0] = "NONE", E9[E9.VISIBILITY = 1] = "VISIBILITY", E9[E9.GEOMETRY = 2] = "GEOMETRY", E9[E9.TRANSFORMATION = 4] = "TRANSFORMATION", E9[E9.HIGHLIGHT = 8] = "HIGHLIGHT", E9[E9.OCCLUDEE = 16] = "OCCLUDEE";
}(I4 || (I4 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/TriangleMaterial.js
var e16 = class extends n10 {
  intersect(r10, e17, i11, s15, o16, n19) {
    return p3(r10, i11, s15, o16, void 0, n19);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ColorMaterialTechnique.js
var S2 = class extends l4 {
  constructor(e17, r10) {
    super(e17, r10, new t6(m5, () => import("./ColorMaterial.glsl-EUNDZBDX.js")));
  }
  _createPipeline(e17, s15) {
    const { oitPass: i11, output: d7, transparent: h7, cullFace: O3, draped: S3, hasOccludees: _5, polygonOffset: w5, enableOffset: x3 } = e17, y4 = i11 === o6.NONE, N3 = i11 === o6.FrontFace;
    return B2({ blending: u4(d7) && h7 ? a4(i11) : null, culling: f3(O3), depthTest: S3 ? null : { func: f4(i11) }, depthWrite: l5(e17), drawBuffers: d7 === n9.Depth ? { buffers: [f2.NONE] } : i4(i11, d7), colorWrite: g2, stencilWrite: _5 ? e11 : null, stencilTest: _5 ? s15 ? o7 : f5 : null, polygonOffset: y4 || N3 ? w5 ? T2 : null : N2(x3) });
  }
  initializePipeline(e17) {
    return this._occludeePipelineState = this._createPipeline(e17, true), this._createPipeline(e17, false);
  }
  getPipeline(e17) {
    return e17 ? this._occludeePipelineState : super.getPipeline();
  }
};
var T2 = { factor: 1, units: 1 };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ColorMaterialTechniqueConfiguration.js
var a14 = class extends a6 {
  constructor() {
    super(...arguments), this.cullFace = e9.None, this.hasVertexColors = false, this.transparent = false, this.discardInvisibleFragments = false, this.polygonOffset = false, this.enableOffset = true, this.writeDepth = true, this.hasOccludees = false, this.terrainDepthTest = false, this.cullAboveTerrain = false, this.objectAndLayerIdColorInstanced = false, this.vvColor = false, this.draped = false, this.textureCoordinateType = d2.None, this.emissionSource = d3.None, this.occlusionPass = false, this.hasVvInstancing = true, this.vvSize = false, this.vvOpacity = false;
  }
};
r2([i7({ count: e9.COUNT })], a14.prototype, "cullFace", void 0), r2([i7()], a14.prototype, "hasVertexColors", void 0), r2([i7()], a14.prototype, "transparent", void 0), r2([i7()], a14.prototype, "discardInvisibleFragments", void 0), r2([i7()], a14.prototype, "polygonOffset", void 0), r2([i7()], a14.prototype, "enableOffset", void 0), r2([i7()], a14.prototype, "writeDepth", void 0), r2([i7()], a14.prototype, "hasOccludees", void 0), r2([i7()], a14.prototype, "terrainDepthTest", void 0), r2([i7()], a14.prototype, "cullAboveTerrain", void 0), r2([i7()], a14.prototype, "objectAndLayerIdColorInstanced", void 0), r2([i7()], a14.prototype, "vvColor", void 0), r2([i7()], a14.prototype, "draped", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/ColorMaterial.js
var A5 = class extends e16 {
  constructor(t19) {
    super(t19, P3), this._configuration = new a14(), this.supportsEdges = true, this.produces = /* @__PURE__ */ new Map([[A2.OPAQUE_MATERIAL, (t20) => this._isOpaqueMaterialPass(t20)], [A2.OPAQUE_MATERIAL_WITHOUT_NORMALS, (t20) => this._isOpaqueNoSSAODepthPass(t20)], [A2.TRANSPARENT_MATERIAL, (t20) => l3(t20) && this._transparent && this.parameters.writeDepth], [A2.TRANSPARENT_MATERIAL_WITHOUT_NORMALS, (t20) => S(t20) && this._transparent && this.parameters.writeDepth], [A2.TRANSPARENT_MATERIAL_WITHOUT_DEPTH, (t20) => l3(t20) && this._transparent && !this.parameters.writeDepth], [A2.DRAPED_MATERIAL, (t20) => e7(t20)]]);
  }
  getConfiguration(t19, r10) {
    return this._configuration.output = t19, this._configuration.cullFace = this.parameters.cullFace, this._configuration.hasVertexColors = this.parameters.hasVertexColors && !this.parameters.vvColor, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.transparent = this._transparent, this._configuration.discardInvisibleFragments = this._transparent && !this._isOpaquePass(t19) && this.parameters.discardInvisibleFragments, this._configuration.polygonOffset = this.parameters.polygonOffset, this._configuration.writeDepth = this.parameters.writeDepth, this._configuration.hasOccludees = r10.hasOccludees, this._configuration.oitPass = r10.oitPass, this._configuration.enableOffset = r10.camera.relativeElevation < A3, this._configuration.terrainDepthTest = r10.terrainDepthTest && u4(t19), this._configuration.cullAboveTerrain = r10.cullAboveTerrain, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.draped = this.parameters.draped, this._configuration;
  }
  get visible() {
    return this.parameters.color[3] >= o8;
  }
  get _transparent() {
    return this.parameters.color[3] < 1 || this.parameters.forceTransparentMode;
  }
  _isOpaquePass(t19) {
    return this._isOpaqueMaterialPass(t19) || this._isOpaqueNoSSAODepthPass(t19);
  }
  _isOpaqueMaterialPass(t19) {
    return t19 === n9.Highlight || l3(t19) && !this._transparent;
  }
  _isOpaqueNoSSAODepthPass(t19) {
    return S(t19) && this.parameters.writeDepth && !this._transparent;
  }
  createGLMaterial(t19) {
    return new d6(t19);
  }
  createBufferWriter() {
    const t19 = H2().vec3f(e4.POSITION);
    return e8() && t19.vec4u8(e4.OBJECTANDLAYERIDCOLOR), this.parameters.vvColor ? t19.f32(e4.COLORFEATUREATTRIBUTE) : t19.vec4u8(e4.COLOR), new f6(t19);
  }
};
var d6 = class extends e12 {
  beginSlot(t19) {
    return this.getTechnique(S2, t19);
  }
};
var P3 = class extends t7 {
  constructor() {
    super(...arguments), this.color = s3, this.forceTransparentMode = false, this.writeDepth = true, this.hasVertexColors = false, this.polygonOffset = false, this.hasSlicePlane = false, this.cullFace = e9.None, this.draped = false, this.discardInvisibleFragments = false;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultLayouts.js
var t18 = H2().vec3f(e4.POSITION);
var f8 = H2().vec3f(e4.POSITION).vec2f(e4.UV0);
var r9 = H2().vec3f(e4.POSITION).vec4u8(e4.COLOR);
var I5 = H2().vec3f(e4.POSITION).vec2f(e4.UV0).vec4u8(e4.OBJECTANDLAYERIDCOLOR);

export {
  E8 as E,
  I4 as I,
  o12 as o,
  te,
  g4 as g,
  e16 as e,
  A5 as A,
  a13 as a,
  h5 as h,
  n18 as n,
  b3 as b,
  p5 as p,
  l9 as l,
  t18 as t,
  f8 as f,
  r9 as r,
  I5 as I2
};
//# sourceMappingURL=chunk-3J6UPOJA.js.map
