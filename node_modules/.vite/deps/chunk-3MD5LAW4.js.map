{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js", "../../@arcgis/core/chunks/HUDMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{AlignPixel as e}from\"./AlignPixel.glsl.js\";import{terrainDepthTest as o}from\"../shading/TerrainDepthTest.glsl.js\";import{glsl as r}from\"../../shaderModules/glsl.js\";function i(i,t){const{vertex:s,fragment:p}=i;i.include(o,t),s.include(e),s.main.add(r`vec4 posProjCenter;\nif (dot(position, position) > 0.0) {\nProjectHUDAux projectAux;\nvec4 posProj = projectPositionHUD(projectAux);\nposProjCenter = alignToPixelCenter(posProj, viewport.zw);\nforwardViewPosDepth(projectAux.posView);\nvec3 vpos = projectAux.posModel;\nif (rejectBySlice(vpos)) {\nposProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n}\n} else {\nposProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n}\ngl_Position = posProjCenter;\ngl_PointSize = 1.0;`),p.main.add(r`fragColor = vec4(1);\nif(discardByTerrainDepth()) {\nfragColor.g = 0.5;\n}`)}export{i as HUDOcclusionPass};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{set as e,copy as o}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as i}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{ZEROS as r,fromValues as l}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{earth as t}from\"../geometry/support/Ellipsoid.js\";import{ShaderOutput as a}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{RejectBySlice as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{AlignPixel as c}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as u}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{HUDVisibility as p}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDVisibility.glsl.js\";import{OutputHighlight as f}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{ColorConversion as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as v}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as b,addScreenSizePerspective as h,addScreenSizePerspectiveAlignment as w}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{addPixelRatio as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float2PassUniform as C}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4BindUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float4BindUniform.js\";import{Float4DrawUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float4DrawUniform.js\";import{Float4PassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatBindUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js\";import{FloatPassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as A,If as O}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DBindUniform as $}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DBindUniform.js\";import{Texture2DPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{OITPass as D}from\"../views/3d/webgl-engine/lib/OITPass.js\";import{VertexAttribute as T}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{ShaderBuilder as L}from\"../views/webgl/ShaderBuilder.js\";import{alphaCutoff as B}from\"../webscene/support/AlphaCutoff.js\";function E(o){const i=new L,E=o.signedDistanceFieldEnabled;i.include(d,o),i.vertex.include(s,o);const{occlusionPass:H,output:V,oitPass:_}=o;if(H)return i.include(u,o),i;const{vertex:I,fragment:q}=i;i.include(b),i.include(g,o),i.include(n,o),i.include(p),q.include(v),q.include(m),i.varyings.add(\"vcolor\",\"vec4\"),i.varyings.add(\"vtc\",\"vec2\"),i.varyings.add(\"vsize\",\"vec2\");const k=V===a.Highlight,G=k&&o.occlusionTestEnabled;G&&i.varyings.add(\"voccluded\",\"float\"),I.uniforms.add(new P(\"viewport\",(e=>e.camera.fullViewport)),new C(\"screenOffset\",((o,i)=>e(R,2*o.screenOffset[0]*i.camera.pixelRatio,2*o.screenOffset[1]*i.camera.pixelRatio))),new C(\"anchorPosition\",(e=>U(e))),new j(\"materialColor\",(e=>e.color)),new y(\"materialRotation\",(e=>e.rotation))),x(I),E&&(I.uniforms.add(new j(\"outlineColor\",(e=>e.outlineColor))),q.uniforms.add(new j(\"outlineColor\",(e=>M(e)?e.outlineColor:r)),new y(\"outlineSize\",(e=>M(e)?e.outlineSize:0)))),o.horizonCullingEnabled&&I.uniforms.add(new z(\"pointDistanceSphere\",((e,o)=>{const i=o.camera.eye,r=e.origin;return l(r[0]-i[0],r[1]-i[1],r[2]-i[2],t.radius)}))),o.pixelSnappingEnabled&&I.include(c),o.hasScreenSizePerspective&&(h(I),w(I)),o.debugDrawLabelBorder&&i.varyings.add(\"debugBorderCoords\",\"vec4\"),i.attributes.add(T.UV0,\"vec2\"),i.attributes.add(T.COLOR,\"vec4\"),i.attributes.add(T.SIZE,\"vec2\"),i.attributes.add(T.ROTATION,\"float\"),i.attributes.add(T.FEATUREATTRIBUTE,\"vec4\"),I.code.add(o.horizonCullingEnabled?A`bool behindHorizon(vec3 posModel) {\nvec3 camToEarthCenter = pointDistanceSphere.xyz - localOrigin;\nvec3 camToPos = pointDistanceSphere.xyz + posModel;\nfloat earthRadius = pointDistanceSphere.w;\nfloat a = dot(camToPos, camToPos);\nfloat b = dot(camToPos, camToEarthCenter);\nfloat c = dot(camToEarthCenter, camToEarthCenter) - earthRadius * earthRadius;\nreturn  b > 0.0 && b < a && b * b  > a * c;\n}`:A`bool behindHorizon(vec3 posModel) { return false; }`),I.main.add(A`\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      forwardObjectAndLayerIdColor();\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n\n      if (behindHorizon(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n\n      vec2 inputSize;\n      ${O(o.hasScreenSizePerspective,A`\n          inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n          vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);`,A`\n          inputSize = size;\n          vec2 screenOffsetScaled = screenOffset;`)}\n      ${O(o.vvSize,A`inputSize *= vvScale(featureAttribute).xx;`)}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${O(o.occlusionTestEnabled,A`\n      bool visible = testHUDVisibility(posProj);\n      if (!visible) {\n        vtc = vec2(0.0);\n        ${O(o.debugDrawLabelBorder,\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);\")}\n        return;\n      }`)}\n      ${O(G,A`voccluded = visible ? 0.0 : 1.0;`)}\n    `);const N=A`\n      vec2 uv01 = floor(uv0);\n      vec2 uv = uv0 - uv01;\n      quadOffset.xy = (uv01 - anchorPosition) * 2.0 * combinedSize;\n\n      ${O(o.hasRotation,A`\n          float angle = radians(materialRotation + rotation);\n          float cosAngle = cos(angle);\n          float sinAngle = sin(angle);\n          mat2 rotate = mat2(cosAngle, -sinAngle, sinAngle,  cosAngle);\n\n          quadOffset.xy = rotate * quadOffset.xy;\n        `)}\n\n      quadOffset.xy = (quadOffset.xy + screenOffsetScaled) / viewport.zw * posProj.w;\n  `,Z=o.pixelSnappingEnabled?E?A`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:A`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:A`posProj += quadOffset;`;I.main.add(A`\n    ${N}\n    ${o.vvColor?\"vcolor = interpolateVVColor(featureAttribute.y) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    ${O(V===a.ObjectAndLayerIdColor,A`vcolor.a = 1.0;`)}\n\n    bool alphaDiscard = vcolor.a < ${A.float(B)};\n    ${O(E,`alphaDiscard = alphaDiscard && outlineColor.a < ${A.float(B)};`)}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${Z}\n      gl_Position = posProj;\n    }\n\n    vtc = uv;\n\n    ${O(o.debugDrawLabelBorder,A`debugBorderCoords = vec4(uv01, 1.5 / combinedSize);`)}\n    vsize = inputSize;\n  `),q.uniforms.add(new F(\"tex\",(e=>e.texture))),o.occludedFragmentFade&&(q.uniforms.add(new $(\"depthMap\",(e=>e.mainDepth))),q.uniforms.add(new S(\"occludedOpacity\",(e=>e.hudOccludedFragmentOpacity))));const J=o.debugDrawLabelBorder?A`(isBorder > 0.0 ? 0.0 : ${A.float(B)})`:A.float(B),K=A`\n    ${O(o.debugDrawLabelBorder,A`float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`)}\n\n    ${O(o.sampleSignedDistanceFieldTexelCenter,A`\n      float txSize = float(textureSize(tex, 0).x);\n      float texelSize = 1.0 / txSize;\n\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;`,A`vec2 samplePos = vtc;`)}\n\n    ${E?A`\n      vec4 fillPixelColor = vcolor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgbaTofloat(texture(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${J} ||\n          fillPixelColor.a + outlinePixelColor.a < ${A.float(B)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        ${O(!k,A`fragColor = vec4(compositeColor, compositeAlpha);`)}\n      } else {\n        if (fillAlphaFactor < ${J}) {\n          discard;\n        }\n\n        ${O(!k,A`fragColor = premultiplyAlpha(fillPixelColor);`)}\n      }\n\n      // visualize SDF:\n      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:A`\n          vec4 texColor = texture(tex, vtc, -0.5);\n          if (texColor.a < ${J}) {\n            discard;\n          }\n          ${O(!k,A`fragColor = texColor * premultiplyAlpha(vcolor);`)}\n          `}\n\n    ${O(o.occludedFragmentFade&&!k,A`\n        float zSample = texelFetch(depthMap, ivec2(gl_FragCoord.xy), 0).x;\n        if (zSample < gl_FragCoord.z) {\n          fragColor *= occludedOpacity;\n        }\n        `)}\n\n    ${O(!k&&o.debugDrawLabelBorder,A`fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`)}\n  `;switch(V){case a.Color:case a.ColorEmission:i.outputs.add(\"fragColor\",\"vec4\",0),V===a.ColorEmission&&i.outputs.add(\"fragEmission\",\"vec4\",1),_===D.ColorAlpha&&i.outputs.add(\"fragAlpha\",\"float\",V===a.ColorEmission?2:1),q.main.add(A`\n        ${K}\n        ${O(_===D.FrontFace,A`fragColor.rgb /= fragColor.a;`)}\n        ${O(V===a.ColorEmission,A`fragEmission = vec4(0.0);`)}\n        ${O(_===D.ColorAlpha,A`fragAlpha = fragColor.a;`)}`);break;case a.ObjectAndLayerIdColor:q.main.add(A`\n        ${K}\n        outputObjectAndLayerIdColor();`);break;case a.Highlight:i.include(f,o),q.main.add(A`\n        ${K}\n        outputHighlight(${O(G,A`voccluded == 1.0`,A`false`)});`)}return i}function M(e){return e.outlineColor[3]>0&&e.outlineSize>0}function U(e){return e.textureIsSignedDistanceField?H(e.anchorPosition,e.distanceFieldBoundingBox,R):o(R,e.anchorPosition),R}function H(o,i,r){e(r,o[0]*(i[2]-i[0])+i[0],o[1]*(i[3]-i[1])+i[1])}const R=i(),V=Object.freeze(Object.defineProperty({__proto__:null,build:E,calculateAnchorPosition:U},Symbol.toStringTag,{value:\"Module\"}));export{V as H,E as b,U as c};\n"],
  "mappings": "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",
  "names": ["i", "t", "s", "d", "l", "n", "o", "i", "E", "H", "V", "s", "e", "n", "t", "r", "l"]
}
