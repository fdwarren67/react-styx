import {
  d,
  n
} from "./chunk-BF5PIC2K.js";
import {
  r as r2
} from "./chunk-K7TZXQ7O.js";
import {
  h
} from "./chunk-5VM3BO4P.js";
import {
  o
} from "./chunk-BIURGGHV.js";
import {
  m
} from "./chunk-VTWDBFQT.js";
import {
  a2
} from "./chunk-BM4B3CH5.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import {
  a
} from "./chunk-6II7WQ2F.js";

// node_modules/@arcgis/core/symbols/FillSymbol.js
var l = class extends n {
  constructor(e) {
    super(e), this.outline = null, this.type = null;
  }
  hash() {
    var _a;
    return `${this.type}.${(_a = this.outline) == null ? void 0 : _a.hash()}`;
  }
};
r([m({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": d } }, json: { default: null, write: true } })], l.prototype, "outline", void 0), r([m({ type: ["simple-fill", "picture-fill"], readOnly: true })], l.prototype, "type", void 0), l = r([a2("esri.symbols.FillSymbol")], l);
var p = l;

// node_modules/@arcgis/core/symbols/SimpleFillSymbol.js
var p2;
var c = new o({ esriSFSSolid: "solid", esriSFSNull: "none", esriSFSHorizontal: "horizontal", esriSFSVertical: "vertical", esriSFSForwardDiagonal: "forward-diagonal", esriSFSBackwardDiagonal: "backward-diagonal", esriSFSCross: "cross", esriSFSDiagonalCross: "diagonal-cross" });
var m2 = p2 = class extends p {
  constructor(...o2) {
    super(...o2), this.color = new h([0, 0, 0, 0.25]), this.outline = new d(), this.type = "simple-fill", this.style = "solid";
  }
  normalizeCtorArgs(o2, r3, s) {
    if (o2 && "string" != typeof o2) return o2;
    const e = {};
    return o2 && (e.style = o2), r3 && (e.outline = r3), s && (e.color = s), e;
  }
  clone() {
    return new p2({ color: a(this.color), outline: this.outline && this.outline.clone(), style: this.style });
  }
  hash() {
    return `${super.hash()}${this.style}.${this.color && this.color.hash()}`;
  }
};
r([m()], m2.prototype, "color", void 0), r([m()], m2.prototype, "outline", void 0), r([r2({ esriSFS: "simple-fill" }, { readOnly: true })], m2.prototype, "type", void 0), r([m({ type: c.apiValues, json: { read: c.read, write: c.write } })], m2.prototype, "style", void 0), m2 = p2 = r([a2("esri.symbols.SimpleFillSymbol")], m2);
var S = m2;

export {
  p,
  S
};
//# sourceMappingURL=chunk-GTN3PVPB.js.map
