import {
  m
} from "./chunk-2GIEDWQ6.js";
import {
  ref
} from "./chunk-LTKIMXCE.js";
import {
  b
} from "./chunk-6JIDXA46.js";
import {
  Dt
} from "./chunk-VQ5234AM.js";
import {
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  css,
  html,
  safeClassMap
} from "./chunk-MALSDV7D.js";

// node_modules/@esri/calcite-components/dist/components/calcite-flow/customElement.js
var n = {
  frame: "frame",
  frameAdvancing: "frame--advancing",
  frameRetreating: "frame--retreating"
};
var w = css`:host{box-sizing:border-box;background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{position:relative;display:flex;inline-size:100%;flex:1 1 auto;align-items:stretch;overflow:hidden;background-color:transparent}:host .frame{position:relative;margin:0;display:flex;inline-size:100%;flex:1 1 auto;flex-direction:column;align-items:stretch;padding:0;animation-name:none;animation-duration:var(--calcite-animation-timing);background-color:var(--calcite-flow-background-color)}:host ::slotted(*){display:none;block-size:100%}:host ::slotted(*[selected]){display:flex}:host ::slotted(.calcite-match-height:last-child){display:flex;flex:1 1 auto;overflow:hidden}:host .frame--advancing{animation-name:calcite-frame-advance}:host .frame--retreating{animation-name:calcite-frame-retreat}@keyframes calcite-frame-advance{0%{--tw-bg-opacity: .5;transform:translate3d(50px,0,0)}to{--tw-bg-opacity: 1;transform:translateZ(0)}}@keyframes calcite-frame-retreat{0%{--tw-bg-opacity: .5;transform:translate3d(-50px,0,0)}to{--tw-bg-opacity: 1;transform:translateZ(0)}}:host([hidden]){display:none}[hidden]{display:none}`;
var _g = class _g extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.itemMutationObserver = b("mutation", () => this.updateItemsAndProps()), this.items = [], this.selectedIndex = -1, this.flowDirection = "standby", this.listen("calciteInternalFlowItemChange", this.handleCalciteInternalFlowItemChange), this.listen("calciteFlowItemBack", this.handleItemBackClick);
  }
  // #endregion
  // #region Public Methods
  /**
   * Removes the currently active `calcite-flow-item`.
   *
   * @returns Promise<HTMLCalciteFlowItemElement | FlowItemLikeElement>
   */
  async back() {
    const { items: e, selectedIndex: i } = this, t = e[i], s = e[i - 1];
    if (!t || !s)
      return;
    const a = t.beforeBack ? t.beforeBack : () => Promise.resolve();
    try {
      await a.call(t);
    } catch {
      return;
    }
    return t.selected = false, s.selected = true, s;
  }
  /**
   * Sets focus on the component.
   *
   * @returns Promise<void>
   */
  async setFocus() {
    var _a;
    await m(this);
    const { items: e } = this;
    return (_a = e[this.selectedIndex]) == null ? void 0 : _a.setFocus();
  }
  connectedCallback() {
    var _a;
    super.connectedCallback(), (_a = this.itemMutationObserver) == null ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  willUpdate(e) {
    e.has("flowDirection") && (this.hasUpdated || this.flowDirection !== "standby") && this.handleFlowDirectionChange(this.flowDirection);
  }
  loaded() {
    this.updateItemsAndProps();
  }
  disconnectedCallback() {
    var _a;
    super.disconnectedCallback(), (_a = this.itemMutationObserver) == null ? void 0 : _a.disconnect();
  }
  // #endregion
  // #region Private Methods
  async handleFlowDirectionChange(e) {
    e !== "standby" && (await Dt(this.frameEl, e === "retreating" ? "calcite-frame-retreat" : "calcite-frame-advance"), this.resetFlowDirection());
  }
  handleCalciteInternalFlowItemChange(e) {
    e.stopPropagation(), this.updateFlowProps();
  }
  async handleItemBackClick(e) {
    if (!e.defaultPrevented)
      return await this.back(), this.setFocus();
  }
  resetFlowDirection() {
    this.flowDirection = "standby";
  }
  getFlowDirection(e, i) {
    const t = e > 0;
    return !(e > -1 && i > 0) && !t ? "standby" : i < e ? "retreating" : "advancing";
  }
  updateItemsAndProps() {
    const { customItemSelectors: e, el: i } = this, t = Array.from(i.querySelectorAll(`calcite-flow-item${e ? `,${e}` : ""}`)).filter((s) => s.closest("calcite-flow") === i);
    this.items = t, this.ensureSelectedFlowItemExists(), this.updateFlowProps();
  }
  updateFlowProps() {
    const { selectedIndex: e, items: i } = this, t = this.findSelectedFlowItemIndex(i);
    i.forEach((s, a) => {
      const o = a === t;
      o || (s.menuOpen = false), s.showBackButton = o && t > 0;
    }), t !== -1 && (e !== t && (this.flowDirection = this.getFlowDirection(e, t)), this.selectedIndex = t);
  }
  findSelectedFlowItemIndex(e) {
    const i = e.slice(0).reverse().find((t) => !!t.selected);
    return e.indexOf(i);
  }
  ensureSelectedFlowItemExists() {
    const { items: e } = this;
    if (this.findSelectedFlowItemIndex(e) !== -1)
      return;
    const t = e[e.length - 1];
    t && (t.selected = true);
  }
  setFrameEl(e) {
    this.frameEl = e;
  }
  // #endregion
  // #region Rendering
  render() {
    const { flowDirection: e } = this, i = {
      [n.frame]: true,
      [n.frameAdvancing]: e === "advancing",
      [n.frameRetreating]: e === "retreating"
    };
    return html`<div class=${safeClassMap(i)} ${ref(this.setFrameEl)}><slot></slot></div>`;
  }
};
_g.properties = { flowDirection: 16, customItemSelectors: 1 };
_g.styles = w;
var g = _g;
S("calcite-flow", g);

export {
  g
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-flow/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=chunk-MH5KFZTF.js.map
