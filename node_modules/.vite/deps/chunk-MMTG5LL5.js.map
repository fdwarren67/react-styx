{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/SingleHighlightApply.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{HighlightCellGridScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/HighlightCellGridScreenSpacePass.glsl.js\";import{HighlightReadBitmap as t}from\"../views/3d/webgl-engine/core/shaderLibrary/HighlightReadBitmap.glsl.js\";import{Float2DrawUniform as i}from\"../views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js\";import{FloatPassUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as r}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{IntegerPassUniform as o}from\"../views/3d/webgl-engine/core/shaderModules/IntegerPassUniform.js\";import{Texture2DPassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{o as g,b as u}from\"./HighlightDownsample.glsl.js\";import{ShaderBuilder as h}from\"../views/webgl/ShaderBuilder.js\";function s(){const s=new h;s.include(e);const{fragment:c}=s;return c.uniforms.add(new n(\"blurInput\",(e=>e.singleHighlightBlurTexture)),new i(\"blurSize\",(e=>e.blurSize)),new n(\"highlightTexture\",(e=>e.highlightTexture)),new n(\"highlightOptionsTexture\",(e=>e.highlightOptionsTexture)),new o(\"highlightLevel\",(e=>e.highlightLevel)),new l(\"occludedIntensityFactor\",(e=>e.occludedFactor))),c.constants.add(\"inner\",\"float\",1-(g-u)/g),s.include(t),c.main.add(r`vec2 highlightTextureSize = vec2(textureSize(highlightTexture,0));\nvec2 uv = sUV;\nvec2 center = texture(blurInput, uv).rg;\nvec2 blurredHighlightValue = (vOutlinePossible == 0.0)\n? center\n: center * 0.204164\n+ texture(blurInput, uv + blurSize * 1.407333).rg * 0.304005\n+ texture(blurInput, uv - blurSize * 1.407333).rg * 0.304005\n+ texture(blurInput, uv + blurSize * 3.294215).rg * 0.093913\n+ texture(blurInput, uv - blurSize * 3.294215).rg * 0.093913;\nfloat highlightIntensity = blurredHighlightValue.r;\nfloat occlusionWeight = blurredHighlightValue.g;\nif (highlightIntensity <= 0.01) {\ndiscard;\n}\nvec4 fillColor    = texelFetch(highlightOptionsTexture, ivec2(highlightLevel, 0), 0);\nvec4 outlineColor = texelFetch(highlightOptionsTexture, ivec2(highlightLevel, 1), 0);\nvec2 centerTexel = texelFetch(highlightTexture, ivec2(uv * highlightTextureSize), 0).rg;\nuint centerBits = readLevelBits(centerTexel, highlightLevel);\nbool centerFilled = (centerBits & 1u) == 1u;\nbool centerOccluded = (centerBits & 3u) == 3u;\nbool occluded = centerOccluded || (0.5 * highlightIntensity < occlusionWeight);\nfloat occlusionFactor = occluded ? occludedIntensityFactor : 1.0;\nfloat outlineFactor = centerFilled ? 1.0 : smoothstep(0.0, inner, highlightIntensity);\nfloat fillFactor = centerFilled ? 1.0 : 0.0;\nvec4 baseColor = mix(outlineColor, fillColor, fillFactor);\nfloat intensity = baseColor.a * occlusionFactor * outlineFactor;\nfragColor = vec4(baseColor.rgb, intensity);`),s}const c=Object.freeze(Object.defineProperty({__proto__:null,build:s},Symbol.toStringTag,{value:\"Module\"}));export{c as S,s as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIo1B,SAASA,KAAG;AAAC,QAAMA,KAAE,IAAI;AAAE,EAAAA,GAAE,QAAQA,EAAC;AAAE,QAAK,EAAC,UAASC,GAAC,IAAED;AAAE,SAAOC,GAAE,SAAS,IAAI,IAAID,GAAE,aAAa,OAAG,EAAE,0BAA2B,GAAE,IAAIE,GAAE,YAAY,OAAG,EAAE,QAAS,GAAE,IAAIF,GAAE,oBAAoB,OAAG,EAAE,gBAAiB,GAAE,IAAIA,GAAE,2BAA2B,OAAG,EAAE,uBAAwB,GAAE,IAAI,EAAE,kBAAkB,OAAG,EAAE,cAAe,GAAE,IAAI,EAAE,2BAA2B,OAAG,EAAE,cAAe,CAAC,GAAEC,GAAE,UAAU,IAAI,SAAQ,SAAQ,KAAGE,KAAE,KAAGA,EAAC,GAAEH,GAAE,QAAQ,CAAC,GAAEC,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CA2B5uC,GAAED;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAMA,GAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["s", "c", "o", "n"]
}
