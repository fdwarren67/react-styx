{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js", "../../@arcgis/core/chunks/DefaultMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{IDENTITY as e}from\"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{ONES as t}from\"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{TextureCoordinateType as r}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as a}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{NormalsDoubleSidedMode as n}from\"./Normals.glsl.js\";import{Float2PassUniform as o}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as s}from\"../../shaderModules/glsl.js\";import{Matrix3PassUniform as m}from\"../../shaderModules/Matrix3PassUniform.js\";import{Texture2DDrawUniform as d}from\"../../shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as l}from\"../../shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as i}from\"../../../lib/VertexAttribute.js\";import{BindType as c}from\"../../../../../webgl/BindType.js\";function T(T,u){const x=T.fragment;u.hasVertexTangents?(T.attributes.add(i.TANGENT,\"vec4\"),T.varyings.add(\"vTangent\",\"vec4\"),u.doubleSidedMode===n.WindingOrder?x.code.add(s`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;\nvec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`):x.code.add(s`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = vTangent.w;\nvec3 tangent = normalize(vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`)):x.code.add(s`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {\nvec3 Q1 = dFdx(pos);\nvec3 Q2 = dFdy(pos);\nvec2 stx = dFdx(st);\nvec2 sty = dFdy(st);\nfloat det = stx.t * sty.s - sty.t * stx.s;\nvec3 T = stx.t * Q2 - sty.t * Q1;\nT = T - normal * dot(normal, T);\nT *= inversesqrt(max(dot(T,T), 1.e-10));\nvec3 B = sign(det) * cross(normal, T);\nreturn mat3(T, B, normal);\n}`),u.textureCoordinateType!==r.None&&(T.include(a,u),x.uniforms.add(u.bindType===c.Pass?new l(\"normalTexture\",(e=>e.textureNormal)):new d(\"normalTexture\",(e=>e.textureNormal))),u.hasNormalTextureTransform&&(x.uniforms.add(new o(\"scale\",(e=>e.scale??t))),x.uniforms.add(new m(\"normalTextureTransformMatrix\",(t=>t.normalTextureTransformMatrix??e)))),x.code.add(s`vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {\nvec3 rawNormal = textureLookup(normalTexture, uv).rgb * 2.0 - 1.0;`),u.hasNormalTextureTransform&&x.code.add(s`mat3 normalTextureRotation = mat3(normalTextureTransformMatrix[0][0]/scale[0], normalTextureTransformMatrix[0][1]/scale[1], 0.0,\nnormalTextureTransformMatrix[1][0]/scale[0], normalTextureTransformMatrix[1][1]/scale[1], 0.0,\n0.0, 0.0, 0.0 );\nrawNormal.xy = (normalTextureRotation * vec3(rawNormal.x, rawNormal.y, 1.0)).xy;`),x.code.add(s`return tangentSpace * rawNormal;\n}`))}export{T as ComputeNormalTexture};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{IDENTITY as r}from\"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{TextureCoordinateType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{glsl as o}from\"../../shaderModules/glsl.js\";import{Matrix3PassUniform as a}from\"../../shaderModules/Matrix3PassUniform.js\";function s(e,s){s.hasColorTextureTransform?(e.varyings.add(\"colorUV\",\"vec2\"),e.vertex.uniforms.add(new a(\"colorTextureTransformMatrix\",(e=>e.colorTextureTransformMatrix??r))).code.add(o`void forwardColorUV(){\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):e.vertex.code.add(o`void forwardColorUV(){}`)}function i(s,i){i.hasNormalTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"normalUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"normalTextureTransformMatrix\",(e=>e.normalTextureTransformMatrix??r))).code.add(o`void forwardNormalUV(){\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardNormalUV(){}`)}function t(s,i){i.hasEmissionTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"emissiveUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"emissiveTextureTransformMatrix\",(e=>e.emissiveTextureTransformMatrix??r))).code.add(o`void forwardEmissiveUV(){\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardEmissiveUV(){}`)}function d(s,i){i.hasOcclusionTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"occlusionUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"occlusionTextureTransformMatrix\",(e=>e.occlusionTextureTransformMatrix??r))).code.add(o`void forwardOcclusionUV(){\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardOcclusionUV(){}`)}function n(s,i){i.hasMetallicRoughnessTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"metallicRoughnessUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"metallicRoughnessTextureTransformMatrix\",(e=>e.metallicRoughnessTextureTransformMatrix??r))).code.add(o`void forwardMetallicRoughnessUV(){\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)):s.vertex.code.add(o`void forwardMetallicRoughnessUV(){}`)}export{s as colorTextureUV,t as emissiveTextureUV,n as metallicRoughnessTextureUV,i as normalTextureUV,d as occlusionTextureUV};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{isColorOrColorEmission as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as s,NormalType as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as u}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as h,addAmbientBoostFactor as p,addLightingGlobalFactor as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{Normals as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as C,PBRMode as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{terrainDepthTest as N}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js\";import{colorTextureUV as S,normalTextureUV as T,emissiveTextureUV as A,occlusionTextureUV as V,metallicRoughnessTextureUV as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlphaPass as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/DiscardOrAdjustAlpha.glsl.js\";import{MixExternalColor as E}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as U,addCameraPosition as B}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as I}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as _}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as R,If as z}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DPassUniform as G}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as W}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{outputColorHighlightOID as k}from\"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js\";import{ShaderBuilder as H}from\"../views/webgl/ShaderBuilder.js\";import{alphaCutoff as q}from\"../webscene/support/AlphaCutoff.js\";function J(J){const K=new H,{vertex:Q,fragment:X,varyings:Y}=K,{output:Z,normalType:ee,offsetBackfaces:re,instancedColor:oe,spherical:ie,receiveShadows:ae,snowCover:le,pbrMode:se,textureAlphaPremultiplied:ne,instancedDoublePrecision:te,hasVertexColors:de,hasVertexTangents:ce,hasColorTexture:me,hasNormalTexture:ge,hasNormalTextureTransform:ve,hasColorTextureTransform:ue}=J;if(U(Q,J),K.include(t),Y.add(\"vpos\",\"vec3\"),K.include($,J),K.include(l,J),K.include(v,J),K.include(S,J),!o(Z))return K.include(u,J),K;K.include(T,J),K.include(A,J),K.include(V,J),K.include(M,J),B(Q,J),K.include(s,J),K.include(a,J);const be=ee===n.Attribute||ee===n.Compressed;return be&&re&&K.include(r),K.include(b,J),K.include(g,J),oe&&K.attributes.add(W.INSTANCECOLOR,\"vec4\"),Y.add(\"vPositionLocal\",\"vec3\"),K.include(c,J),K.include(e,J),K.include(d,J),K.include(m,J),Q.uniforms.add(new F(\"externalColor\",(e=>e.externalColor))),Y.add(\"vcolorExt\",\"vec4\"),K.include(N,J),Q.main.add(R`\n    forwardNormalizedVertexColor();\n    vcolorExt = externalColor;\n    ${z(oe,\"vcolorExt *= instanceColor * 0.003921568627451;\")}\n    vcolorExt *= vvColor();\n    vcolorExt *= getSymbolColor();\n    forwardColorMixMode();\n\n    vpos = getVertexInLocalOriginSpace();\n    vPositionLocal = vpos - view[3].xyz;\n    vpos = subtractOrigin(vpos);\n    ${z(be,\"vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\")}\n    vpos = addVerticalOffset(vpos, localOrigin);\n    ${z(ce,\"vTangent = dpTransformVertexTangent(tangent);\")}\n    gl_Position = transformPosition(proj, view, vpos);\n    ${z(be&&re,\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\")}\n\n    forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);\n    forwardLinearDepth();\n    forwardTextureCoordinates();\n    forwardColorUV();\n    forwardNormalUV();\n    forwardEmissiveUV();\n    forwardOcclusionUV();\n    forwardMetallicRoughnessUV();\n\n    if (vcolorExt.a < ${R.float(q)}) {\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n    }\n  `),K.include(h,J),K.include(w,J),K.include(D,J),K.include(te?P:O,J),K.fragment.include(i,J),K.include(k,J),B(X,J),X.uniforms.add(Q.uniforms.get(\"localOrigin\"),new I(\"ambient\",(e=>e.ambient)),new I(\"diffuse\",(e=>e.diffuse)),new _(\"opacity\",(e=>e.opacity)),new _(\"layerOpacity\",(e=>e.layerOpacity))),me&&X.uniforms.add(new G(\"tex\",(e=>e.texture))),K.include(C,J),K.include(L,J),X.include(E),K.include(y,J),p(X),f(X),x(X),X.main.add(R`\n    discardBySlice(vpos);\n    discardByTerrainDepth();\n    ${me?R`\n            vec4 texColor = texture(tex, ${ue?\"colorUV\":\"vuv0\"});\n            ${z(ne,\"texColor.rgb /= texColor.a;\")}\n            discardOrAdjustAlpha(texColor);`:R`vec4 texColor = vec4(1.0);`}\n    shadingParams.viewDirection = normalize(vpos - cameraPosition);\n    ${ee===n.ScreenDerivative?R`vec3 normal = screenDerivativeNormal(vPositionLocal);`:R`shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n    applyPBRFactors();\n    float ssao = evaluateAmbientOcclusionInverse() * getBakedOcclusion();\n\n    vec3 posWorld = vpos + localOrigin;\n\n      float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n      float shadow = ${ae?\"max(lightingGlobalFactor * (1.0 - additionalAmbientScale), readShadowMap(vpos, linearDepth))\":z(ie,\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\",\"0.0\")};\n\n    vec3 matColor = max(ambient, diffuse);\n    vec3 albedo = mixExternalColor(${z(de,\"vColor.rgb *\")} matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n    float opacity_ = layerOpacity * mixExternalOpacity(${z(de,\"vColor.a * \")} opacity, texColor.a, vcolorExt.a, int(colorMixMode));\n    ${ge?`mat3 tangentSpace = computeTangentSpace(${ce?\"normal\":\"normal, vpos, vuv0\"});\\n            vec3 shadingNormal = computeTextureNormal(tangentSpace, ${ve?\"normalUV\":\"vuv0\"});`:\"vec3 shadingNormal = normal;\"}\n    vec3 normalGround = ${ie?\"normalize(posWorld);\":\"vec3(0.0, 0.0, 1.0);\"}\n\n    ${z(le,R`\n          float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n          albedo = mix(albedo, vec3(1), snow);\n          shadingNormal = mix(shadingNormal, normal, snow);\n          ssao = mix(ssao, 1.0, snow);`)}\n\n    vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n    ${se===j.Normal||se===j.Schematic?R`\n            float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n            ${z(le,R`mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);`)}\n            vec4 emission = ${le?\"mix(getEmissions(), vec4(0.0), snow)\":\"getEmissions()\"};\n            vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:R`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n    vec4 finalColor = vec4(shadedColor, opacity_);\n    outputColorHighlightOID(finalColor, vpos);\n  `),K}const K=Object.freeze(Object.defineProperty({__proto__:null,build:J},Symbol.toStringTag,{value:\"Module\"}));export{K as D,J as b};\n"],
  "mappings": "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",
  "names": ["T", "u", "x", "i", "d", "s", "e", "o", "t", "s", "e", "o", "i", "d", "t", "n", "J", "K", "i", "o", "s", "t", "d", "n", "a", "c", "e", "f", "m", "p", "u"]
}
