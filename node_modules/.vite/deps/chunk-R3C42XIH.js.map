{
  "version": 3,
  "sources": ["../../color-string/node_modules/color-name/index.js", "../../color-string/index.js", "../../color/node_modules/color-name/index.js", "../../color/node_modules/color-convert/conversions.js", "../../color/node_modules/color-convert/route.js", "../../color/node_modules/color-convert/index.js", "../../color/index.js", "../../@esri/calcite-components/dist/chunks/utils4.js"],
  "sourcesContent": ["export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n", "import colorNames from 'color-name';\n\nconst reverseNames = Object.create(null);\n\n// Create a list of reverse color names\nfor (const name in colorNames) {\n\tif (Object.hasOwn(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nconst cs = {\n\tto: {},\n\tget: {},\n};\n\ncs.get = function (string) {\n\tconst prefix = string.slice(0, 3).toLowerCase();\n\tlet value;\n\tlet model;\n\tswitch (prefix) {\n\t\tcase 'hsl': {\n\t\t\tvalue = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'hwb': {\n\t\t\tvalue = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault: {\n\t\t\tvalue = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!value) {\n\t\treturn null;\n\t}\n\n\treturn {model, value};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst abbr = /^#([a-f\\d]{3,4})$/i;\n\tconst hex = /^#([a-f\\d]{6})([a-f\\d]{2})?$/i;\n\tconst rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst per = /^rgba?\\(\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst keyword = /^(\\w+)$/;\n\n\tlet rgb = [0, 0, 0, 1];\n\tlet match;\n\tlet i;\n\tlet hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tconst i2 = i * 2;\n\t\t\trgb[i] = Number.parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i + 1], 10);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(Number.parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!Object.hasOwn(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hsl);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst s = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst l = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hwb);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst w = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst b = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function (...rgba) {\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function (...rgba) {\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function (...rgba) {\n\tconst r = Math.round(rgba[0] / 255 * 100);\n\tconst g = Math.round(rgba[1] / 255 * 100);\n\tconst b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function (...hsla) {\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// Hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function (...hwba) {\n\tlet a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (...rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// Helpers\nfunction clamp(number_, min, max) {\n\treturn Math.min(Math.max(min, number_), max);\n}\n\nfunction hexDouble(number_) {\n\tconst string_ = Math.round(number_).toString(16).toUpperCase();\n\treturn (string_.length < 2) ? '0' + string_ : string_;\n}\n\nexport default cs;\n", "export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nimport cssKeywords from 'color-name';\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']},\n};\n\nexport default convert;\n\n// LAB f(t) constant\nconst LAB_FT = (6 / 29) ** 3;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tswitch (max) {\n\t\tcase min: {\n\t\t\th = 0;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase r: {\n\t\t\th = (g - b) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase g: {\n\t\t\th = 2 + (b - r) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase b: {\n\t\t\th = 4 + (r - g) / delta;\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tswitch (v) {\n\t\t\tcase r: {\n\t\t\t\th = bdif - gdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase g: {\n\t\t\t\th = (1 / 3) + rdif - bdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase b: {\n\t\t\t\th = (2 / 3) + gdif - rdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t// No default\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100,\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Number.POSITIVE_INFINITY;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.040_45 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.040_45 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.040_45 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.412_456_4) + (g * 0.357_576_1) + (b * 0.180_437_5);\n\tconst y = (r * 0.212_672_9) + (g * 0.715_152_2) + (b * 0.072_175);\n\tconst z = (r * 0.019_333_9) + (g * 0.119_192) + (b * 0.950_304_1);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t3;\n\tlet value;\n\n\tif (s === 0) {\n\t\tvalue = l * 255;\n\t\treturn [value, value, value];\n\t}\n\n\tconst t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tvalue = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tvalue = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tvalue = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tvalue = t1;\n\t\t}\n\n\t\trgb[i] = value * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0: {\n\t\t\treturn [v, t, p];\n\t\t}\n\n\t\tcase 1: {\n\t\t\treturn [q, v, p];\n\t\t}\n\n\t\tcase 2: {\n\t\t\treturn [p, v, t];\n\t\t}\n\n\t\tcase 3: {\n\t\t\treturn [p, q, v];\n\t\t}\n\n\t\tcase 4: {\n\t\t\treturn [t, p, v];\n\t\t}\n\n\t\tcase 5: {\n\t\t\treturn [v, p, q];\n\t\t}\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\t// eslint-disable-next-line no-bitwise\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces, default-case-last */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: { r = v;  g = n;  b = wh; break;\n\t\t}\n\n\t\tcase 1: { r = n;  g = v;  b = wh; break;\n\t\t}\n\n\t\tcase 2: { r = wh; g = v;  b = n; break;\n\t\t}\n\n\t\tcase 3: { r = wh; g = n;  b = v; break;\n\t\t}\n\n\t\tcase 4: { r = n;  g = wh; b = v; break;\n\t\t}\n\n\t\tcase 5: { r = v;  g = wh; b = n; break;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces, default-case-last */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.240_454_2) + (y * -1.537_138_5) + (z * -0.498_531_4);\n\tg = (x * -0.969_266) + (y * 1.876_010_8) + (z * 0.041_556);\n\tb = (x * 0.055_643_4) + (y * -0.204_025_9) + (z * 1.057_225_2);\n\n\t// Assume sRGB\n\tr = r > 0.003_130_8\n\t\t? ((1.055 * (r ** (1 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.003_130_8\n\t\t? ((1.055 * (g ** (1 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.003_130_8\n\t\t? ((1.055 * (b ** (1 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > LAB_FT ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > LAB_FT ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > LAB_FT ? z2 : (z - 16 / 116) / 7.787;\n\n\t// Illuminant D65 XYZ Tristrimulus Values\n\t// https://en.wikipedia.org/wiki/CIE_1931_color_space\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t/* eslint-disable no-bitwise */\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\t\t/* eslint-enable no-bitwise */\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\t// eslint-disable-next-line no-bitwise\n\tif (r >> 4 === g >> 4 && g >> 4 === b >> 4) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\targs = args[0];\n\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (Math.trunc(args > 50) + 1) * 0.5;\n\t/* eslint-disable no-bitwise */\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\targs = args[0];\n\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\t/* eslint-disable no-bitwise */\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f\\d]{6}|[a-f\\d]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = [...colorString].map(char => char + char).join('');\n\t}\n\n\tconst integer = Number.parseInt(colorString, 16);\n\t/* eslint-disable no-bitwise */\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet hue;\n\n\tconst grayscale = chroma < 1 ? min / (1 - chroma) : 0;\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else if (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else if (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2 * s * l) : (2 * s * (1 - l));\n\n\tlet f = 0;\n\tif (c < 1) {\n\t\tf = (l - 0.5 * c) / (1 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0: {\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 1: {\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 2: {\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\t}\n\n\t\tcase 3: {\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\t}\n\n\t\tcase 4: {\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\t}\n\n\t\tdefault: {\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255,\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1 - c);\n\tlet f = 0;\n\n\tif (v > 0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else if (l >= 0.5 && l < 1) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65_535) * 255, (apple[1] / 65_535) * 255, (apple[2] / 65_535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65_535, (rgb[1] / 255) * 65_535, (rgb[2] / 255) * 65_535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\t/* eslint-disable no-bitwise */\n\tconst value = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (value << 16) + (value << 8) + value;\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst value = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [value / 255 * 100];\n};\n", "import conversions from './conversions.js';\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null,\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length > 0) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let {length} = adjacents, i = 0; i < length; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nfunction route(fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n}\n\nexport default route;\n", "import conversions from './conversions.js';\nimport route from './route.js';\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let {length} = result, i = 0; i < length; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfor (const fromModel of models) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\tfor (const toModel of routeModels) {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t}\n}\n\nexport default convert;\n", "import colorString from 'color-string';\nimport convert from 'color-convert';\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](...arguments_);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(...arguments_);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(...this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(...rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_colour_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...arguments_) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments_.length > 0) {\n\t\t\treturn new Color(arguments_, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...arguments_) {\n\t\tlet color = arguments_[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(arguments_, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] ||= [])[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nexport default Color;\n", "import v from \"color\";\nimport { h as I, i as R, j as b } from \"./global.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.1.0 */\nconst w = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\"\n}, y = v(\"#007AC2\"), z = \"calcite-color-\", X = {\n  r: 255,\n  g: 255,\n  b: 255\n}, B = {\n  h: 360,\n  s: 100,\n  v: 100\n}, N = B.h - 1, O = {\n  min: 0,\n  max: 100\n}, G = {\n  s: {\n    gap: parseInt(b),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 20\n    },\n    minWidth: 200\n  },\n  m: {\n    gap: parseInt(R),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 24\n    },\n    minWidth: 240\n  },\n  l: {\n    gap: parseInt(I),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 32\n    },\n    minWidth: 304\n  }\n}, P = 1, D = /^[0-9A-F]$/i, E = /^#[0-9A-F]{3}$/i, M = /^#[0-9A-F]{6}$/i, $ = /^#[0-9A-F]{4}$/i, x = /^#[0-9A-F]{8}$/i, U = (t) => Number((t * 100).toFixed()), q = (t) => Number((t / 100).toFixed(2));\nfunction C(t, n = !1) {\n  return h(t, n) || F(t, n);\n}\nfunction g(t, n, r) {\n  return t ? t.length === n && r.test(t) : !1;\n}\nfunction h(t, n = !1) {\n  return g(t, n ? 5 : 4, n ? $ : E);\n}\nfunction F(t, n = !1) {\n  return g(t, n ? 9 : 7, n ? x : M);\n}\nfunction Y(t, n = !1, r = !1) {\n  if (t = t.toLowerCase(), t.startsWith(\"#\") || (t = `#${t}`), h(t, n))\n    return A(H(t, n));\n  if (n && r && C(\n    t,\n    !1\n    /* we only care about RGB hex for conversion */\n  )) {\n    const i = h(t, !1);\n    return A(H(`${t}${i ? \"f\" : \"ff\"}`, !0));\n  }\n  return t;\n}\nfunction j(t, n = !1) {\n  return n ? t.hexa() : t.hex();\n}\nfunction A(t) {\n  const { r: n, g: r, b: i } = t, o = S(n), a = S(r), d = S(i), l = \"a\" in t ? S(t.a * 255) : \"\";\n  return `#${o}${a}${d}${l}`.toLowerCase();\n}\nfunction S(t) {\n  return t.toString(16).padStart(2, \"0\");\n}\nfunction k(t) {\n  const n = {\n    ...t,\n    a: t.alpha ?? 1\n    /* Color() will omit alpha if 1 */\n  };\n  return delete n.alpha, n;\n}\nfunction K(t) {\n  const n = { ...t, alpha: t.a ?? 1 };\n  return delete n.a, n;\n}\nfunction H(t, n = !1) {\n  if (!C(t, n))\n    return null;\n  t = t.replace(\"#\", \"\");\n  let r, i, o, a;\n  if (t.length === 3 || t.length === 4) {\n    const [l, p, f, u] = t.split(\"\");\n    r = parseInt(`${l}${l}`, 16), i = parseInt(`${p}${p}`, 16), o = parseInt(`${f}${f}`, 16), a = parseInt(`${u}${u}`, 16) / 255;\n  } else\n    r = parseInt(t.slice(0, 2), 16), i = parseInt(t.slice(2, 4), 16), o = parseInt(t.slice(4, 6), 16), a = parseInt(t.slice(6, 8), 16) / 255;\n  return isNaN(a) ? { r, g: i, b: o } : { r, g: i, b: o, a };\n}\nconst L = (t) => t, e = L({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\"\n}), s = L({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\"\n});\nfunction Z(t) {\n  if (typeof t == \"string\") {\n    if (t.startsWith(\"#\")) {\n      const { length: n } = t;\n      if (n === 4 || n === 7)\n        return e.HEX;\n      if (n === 5 || n === 9)\n        return e.HEXA;\n    }\n    if (t.startsWith(\"rgba(\"))\n      return e.RGBA_CSS;\n    if (t.startsWith(\"rgb(\"))\n      return e.RGB_CSS;\n    if (t.startsWith(\"hsl(\"))\n      return e.HSL_CSS;\n    if (t.startsWith(\"hsla(\"))\n      return e.HSLA_CSS;\n  }\n  if (typeof t == \"object\") {\n    if (c(t, \"r\", \"g\", \"b\"))\n      return c(t, \"a\") ? s.RGBA : s.RGB;\n    if (c(t, \"h\", \"s\", \"l\"))\n      return c(t, \"a\") ? s.HSLA : s.HSL;\n    if (c(t, \"h\", \"s\", \"v\"))\n      return c(t, \"a\") ? s.HSVA : s.HSV;\n  }\n  return null;\n}\nfunction c(t, ...n) {\n  return n.every((r) => r && t && `${r}` in t);\n}\nfunction J(t, n) {\n  return t?.rgb().array().toString() === n?.rgb().array().toString();\n}\nfunction Q(t) {\n  return t === e.HEXA || t === e.RGBA_CSS || t === e.HSLA_CSS || t === s.RGBA || t === s.HSLA || t === s.HSVA;\n}\nfunction V(t) {\n  return t === e.HEX ? e.HEXA : t === e.RGB_CSS ? e.RGBA_CSS : t === e.HSL_CSS ? e.HSLA_CSS : t === s.RGB ? s.RGBA : t === s.HSL ? s.HSLA : t === s.HSV ? s.HSVA : t;\n}\nfunction tt(t) {\n  return t === e.HEXA ? e.HEX : t === e.RGBA_CSS ? e.RGB_CSS : t === e.HSLA_CSS ? e.HSL_CSS : t === s.RGBA ? s.RGB : t === s.HSLA ? s.HSL : t === s.HSVA ? s.HSV : t;\n}\nconst T = 1, _ = T * 2;\nfunction nt(t, n, r) {\n  const i = r ? G.l.preview.size : n.preview.size, o = t - _, a = n.gap * 3;\n  return Math.max(o - a - i, 0);\n}\nfunction et(t) {\n  const r = t - _;\n  return {\n    width: Math.max(r, 0),\n    height: Math.max(Math.floor(r / 1.8), 0)\n  };\n}\nexport {\n  e as C,\n  y as D,\n  B as H,\n  O,\n  X as R,\n  G as S,\n  F as a,\n  h as b,\n  U as c,\n  D as d,\n  et as e,\n  z as f,\n  nt as g,\n  j as h,\n  C as i,\n  Q as j,\n  K as k,\n  J as l,\n  w as m,\n  Y as n,\n  q as o,\n  Z as p,\n  tt as q,\n  A as r,\n  N as s,\n  V as t,\n  k as u,\n  P as v,\n  H as w\n};\n"],
  "mappings": "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",
  "names": ["h", "s", "w", "g", "color_name_default", "color_name_default", "g", "h", "s", "c", "w", "k", "y", "x", "z", "q", "n", "y2", "x2", "z2", "models", "convert", "w", "w2", "n", "e", "s"]
}
