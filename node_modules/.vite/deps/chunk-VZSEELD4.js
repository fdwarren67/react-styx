import {
  y
} from "./chunk-NT5GNFHC.js";
import {
  m,
  p
} from "./chunk-VBBJGZOS.js";
import {
  debounce_default
} from "./chunk-F5MHH7JA.js";
import {
  m as m2
} from "./chunk-2GIEDWQ6.js";
import {
  createRef,
  ref
} from "./chunk-LTKIMXCE.js";
import {
  s
} from "./chunk-RZAGQ6CT.js";
import {
  M,
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html,
  safeClassMap
} from "./chunk-MALSDV7D.js";

// node_modules/@esri/calcite-components/dist/components/calcite-filter/customElement.js
var g = {
  container: "container"
};
var y2 = {
  search: "search"
};
var x = css`:host{box-sizing:border-box;background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex;inline-size:100%}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}.container{display:flex;inline-size:100%}:host([scale=s]) .container{padding:var(--calcite-spacing-sm)}:host([scale=m]) .container{padding:var(--calcite-spacing-md)}:host([scale=l]) .container{padding:var(--calcite-spacing-lg)}label{position:relative;margin-block:0px;display:flex;inline-size:100%;align-items:center;overflow:hidden}calcite-input{inline-size:100%}:host([hidden]){display:none}[hidden]{display:none}`;
var _D = class _D extends LitElement {
  constructor() {
    super(...arguments), this.filterDebounced = debounce_default((e, t = false, s2) => this.updateFiltered(y(this.items ?? [], e, this.filterProps), t, s2), M.filter), this.textInput = createRef(), this._value = "", this.disabled = false, this.filteredItems = [], this.items = [], this.messages = s(), this.scale = "m", this.calciteFilterChange = createEvent({ cancelable: false });
  }
  /** The component's value. */
  get value() {
    return this._value;
  }
  set value(e) {
    const t = this._value;
    e !== t && (this._value = e, this.valueHandler(e));
  }
  // #endregion
  // #region Public Methods
  /**
   * Performs a filter on the component.
   *
   * This method can be useful because filtering is delayed and asynchronous.
   *
   * @param {string} value - The filter text value.
   * @returns {Promise<void>}
   */
  async filter(e = this.value) {
    return new Promise((t) => {
      this.value = e, this.updateFiltered(y(this.items ?? [], e, this.filterProps), false, t);
    });
  }
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    return await m2(this), (_a = this.textInput.value) == null ? void 0 : _a.setFocus();
  }
  // #endregion
  // #region Lifecycle
  async load() {
    this.updateFiltered(y(this.items ?? [], this.value, this.filterProps));
  }
  willUpdate(e) {
    var _a;
    (e.has("items") && (this.hasUpdated || ((_a = this.items) == null ? void 0 : _a.length) > 0) || e.has("filterProps")) && this.filterDebounced(this.value);
  }
  updated() {
    m(this);
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.filterDebounced.cancel();
  }
  // #endregion
  // #region Private Methods
  valueHandler(e) {
    this.filterDebounced(e);
  }
  inputHandler(e) {
    const t = e.target;
    this.value = t.value, this.filterDebounced(t.value, true);
  }
  keyDownHandler(e) {
    e.defaultPrevented || (e.key === "Escape" && (this.clear(), e.preventDefault()), e.key === "Enter" && e.preventDefault());
  }
  clear() {
    this.value = "", this.filterDebounced("", true), this.setFocus();
  }
  updateFiltered(e, t = false, s2) {
    this.filteredItems = e, t && this.calciteFilterChange.emit(), s2 == null ? void 0 : s2();
  }
  // #endregion
  // #region Rendering
  render() {
    const { disabled: e, scale: t } = this;
    return p({ disabled: e, children: html`<div class=${safeClassMap(g.container)}><label><calcite-input clearable .disabled=${e} .icon=${y2.search} .label=${this.label ?? this.messages.label} .messageOverrides=${{ clear: this.messages.clear }} @keydown=${this.keyDownHandler} @calciteInputInput=${this.inputHandler} .placeholder=${this.placeholder} .scale=${t} type=text .value=${this.value} ${ref(this.textInput)}></calcite-input></label></div>` });
  }
};
_D.properties = { disabled: 7, filterProps: 0, filteredItems: 0, items: 0, label: 1, messageOverrides: 0, placeholder: 1, scale: 3, value: 1 };
_D.shadowRootOptions = { mode: "open", delegatesFocus: true };
_D.styles = x;
var D = _D;
S("calcite-filter", D);

export {
  D
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-filter/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=chunk-VZSEELD4.js.map
