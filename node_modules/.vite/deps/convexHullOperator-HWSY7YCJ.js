import {
  M,
  _,
  v
} from "./chunk-7YMUYD34.js";
import {
  Be,
  Me,
  Pe,
  Ve
} from "./chunk-DSEHCG2W.js";
import "./chunk-GSEBXRMV.js";
import "./chunk-JGZNT3KT.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-BIURGGHV.js";
import "./chunk-FQILN67Z.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import "./chunk-VTWDBFQT.js";
import "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/geometry/operators/json/convexHullOperator.js
function a(t) {
  const r = Pe(t);
  return Me(M(r.getGeometry()), r.getSpatialReference());
}
function c(e, r = {}) {
  const { merge: o = false } = r, [u, a2] = Be(e);
  return v(u, o).map((e2) => Me(e2, a2));
}
function p(e) {
  return _(Ve(e));
}
export {
  a as execute,
  c as executeMany,
  p as isConvex
};
//# sourceMappingURL=convexHullOperator-HWSY7YCJ.js.map
