import {
  m as m3
} from "./chunk-DPQ7TENX.js";
import {
  B,
  D,
  W
} from "./chunk-VLJE74YV.js";
import {
  T,
  v
} from "./chunk-YJUTXVD7.js";
import {
  m,
  p
} from "./chunk-VBBJGZOS.js";
import {
  m as m2
} from "./chunk-2GIEDWQ6.js";
import {
  s
} from "./chunk-RZAGQ6CT.js";
import {
  mt
} from "./chunk-VQ5234AM.js";
import "./chunk-PXZ2RU65.js";
import {
  i
} from "./chunk-S3EVYUV4.js";
import {
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html,
  live,
  nothing2 as nothing,
  safeClassMap,
  safeStyleMap,
  stringOrBoolean
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-rating/customElement.js
var p2 = ({ full: u, scale: e, partial: t }) => html`<calcite-icon class=${safeClassMap(t ? void 0 : "icon")} .icon=${u ? "star-f" : "star"} .scale=${e}></calcite-icon>`;
var v2 = {
  validationMessage: "validationMessage"
};
var P = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([read-only]) *,:host([disabled]) *,:host([read-only]) ::slotted(*),:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:flex;align-items:center;inline-size:fit-content}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([scale=s]){block-size:1.5rem;--calcite-internal-rating-spacing: .25rem}:host([scale=m]){block-size:2rem;--calcite-internal-rating-spacing: .5rem}:host([scale=l]){block-size:2.75rem;--calcite-internal-rating-spacing: .75rem}.fieldset{margin:0;display:flex;border-width:0;padding:0;align-items:center;gap:var(--calcite-rating-spacing, var(--calcite-internal-rating-spacing))}.wrapper{display:inline-block}.star{transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;position:relative;display:flex;flex-direction:column;cursor:pointer;color:var(--calcite-rating-color, var(--calcite-color-border-input))}.star:hover{color:var(--calcite-rating-color-hover, var(--calcite-color-brand-hover))}.star:active{color:var(--calcite-rating-color-press, var(--calcite-color-brand-press))}.star:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.average,.fraction{color:var(--calcite-rating-average-color, var(--calcite-color-status-warning))}.hovered,.selected{color:var(--calcite-rating-color, var(--calcite-color-brand))}.fraction{transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;position:absolute;pointer-events:none;inset-block-start:0;overflow:hidden;inset-inline-start:0}calcite-chip{pointer-events:none;cursor:default}.number--average{font-weight:700;color:var(--calcite-rating-average-text-color)}.number--count{color:var(--calcite-rating-count-text-color, var(--calcite-color-text-2));font-style:italic}.number--count:not(:first-child){margin-inline-start:var(--calcite-rating-spacing, var(--calcite-internal-rating-spacing))}.visually-hidden{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.validation-container{display:flex;flex-direction:column;align-items:flex-start;align-self:stretch}:host([scale=m]) .validation-container,:host([scale=l]) .validation-container{padding-block-start:.5rem}:host([scale=s]) .validation-container{padding-block-start:.25rem}::slotted(input[slot=hidden-form-input]){margin:0!important;opacity:0!important;outline:none!important;padding:0!important;position:absolute!important;inset:0!important;transform:none!important;-webkit-appearance:none!important;z-index:-1!important}:host([hidden]){display:none}[hidden]{display:none}`;
var _S = class _S extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.emit = false, this.guid = `calcite-ratings-${i()}`, this.isKeyboardInteraction = true, this.labelElements = [], this.max = 5, this._value = 0, this.disabled = false, this.messages = s({ blocking: true }), this.readOnly = false, this.required = false, this.scale = "m", this.showChip = false, this.status = "idle", this.validity = {
      valid: false,
      badInput: false,
      customError: false,
      patternMismatch: false,
      rangeOverflow: false,
      rangeUnderflow: false,
      stepMismatch: false,
      tooLong: false,
      tooShort: false,
      typeMismatch: false,
      valueMissing: false
    }, this.calciteRatingChange = createEvent({ cancelable: false }), this.listen("keydown", this.handleHostKeyDown), this.listen("pointerout", this.handleRatingPointerOut), this.listen("pointerover", this.handleRatingPointerOver);
  }
  /** The component's value. */
  get value() {
    return this._value;
  }
  set value(e) {
    const t = this._value;
    e !== t && (this._value = e, this.hasUpdated && this.handleValueUpdate(e));
  }
  // #endregion
  // #region Public Methods
  /** Sets focus on the component. */
  async setFocus() {
    await m2(this), mt(this.el);
  }
  connectedCallback() {
    super.connectedCallback(), v(this), D(this);
  }
  async load() {
    this.requestUpdate("value");
  }
  willUpdate() {
    this.starsMap = Array.from({ length: this.max }, (e, t) => {
      const a = t + 1, i2 = !this.hoverValue && this.average && !this.value && a <= this.average, c = a === this.value, n = this.average && this.average + 1 - a, l = a <= this.hoverValue, h = `${this.guid}-${a}`, o = !this.hoverValue && !this.value && !l && n > 0 && n < 1, d = this.value >= a, m4 = this.getTabIndex(a);
      return {
        average: i2,
        checked: c,
        fraction: n,
        hovered: l,
        id: h,
        partial: o,
        selected: d,
        value: a,
        tabIndex: m4
      };
    });
  }
  updated() {
    m(this);
  }
  loaded() {
    this.labelElements = Array.from(this.renderRoot.querySelectorAll("label"));
  }
  disconnectedCallback() {
    super.disconnectedCallback(), T(this), W(this);
  }
  // #endregion
  // #region Private Methods
  handleValueUpdate(e) {
    this.hoverValue = e, this.emit && this.calciteRatingChange.emit(), this.emit = false;
  }
  onLabelClick() {
    this.setFocus();
  }
  handleRatingPointerOver() {
    this.isKeyboardInteraction = false;
  }
  handleRatingPointerOut() {
    this.isKeyboardInteraction = true, this.hoverValue = null;
  }
  handleHostKeyDown() {
    this.isKeyboardInteraction = true;
  }
  handleLabelKeyDown(e) {
    const t = this.getValueFromLabelEvent(e), a = e.key, i2 = a == " " ? void 0 : Number(a);
    if (this.emit = true, isNaN(i2))
      switch (a) {
        case "Enter":
        case " ":
          this.value = !this.required && this.value === t ? 0 : t;
          break;
        case "ArrowLeft":
          this.value = this.getPreviousRatingValue(t), this.updateFocus(), e.preventDefault();
          break;
        case "ArrowRight":
          this.value = this.getNextRatingValue(t), this.updateFocus(), e.preventDefault();
          break;
        case "Tab":
          this.hoverValue = null;
          break;
      }
    else
      !this.required && i2 >= 0 && i2 <= this.max ? this.value = i2 : this.required && i2 > 0 && i2 <= this.max && (this.value = i2), this.updateFocus();
  }
  handleInputChange(e) {
    if (this.isKeyboardInteraction === true) {
      const t = Number(e.target.value);
      this.hoverValue = t, this.value = t;
    }
  }
  handleLabelPointerOver(e) {
    this.hoverValue = this.getValueFromLabelEvent(e);
  }
  handleLabelPointerDown(e) {
    const t = e.currentTarget, a = this.getValueFromLabelEvent(e);
    this.hoverValue = a, this.emit = true, this.value = !this.required && this.value === a ? 0 : a, t.focus();
  }
  handleLabelClick(e) {
    e.preventDefault();
  }
  handleLabelFocus(e) {
    const t = this.getValueFromLabelEvent(e);
    this.hoverValue = t;
  }
  updateFocus() {
    this.hoverValue = this.value, this.labelElements[this.value - 1].focus();
  }
  getTabIndex(e) {
    return this.readOnly || this.value !== e && (this.value || e !== 1) ? -1 : 0;
  }
  getValueFromLabelEvent(e) {
    const t = e.currentTarget;
    return Number(t.getAttribute("data-value"));
  }
  getNextRatingValue(e) {
    return e === 5 ? 1 : e + 1;
  }
  getPreviousRatingValue(e) {
    return e === 1 ? 5 : e - 1;
  }
  // #endregion
  // #region Rendering
  render() {
    var _a;
    const e = (_a = this.count) == null ? void 0 : _a.toString();
    return p({ disabled: this.disabled, children: html`<span class="wrapper"><fieldset class="fieldset" .disabled=${this.disabled}><legend class="visually-hidden">${this.messages.rating}</legend>${this.starsMap.map(({ average: t, checked: a, fraction: i2, hovered: c, id: n, partial: l, selected: h, value: o, tabIndex: d }) => html`<label class=${safeClassMap({
      star: true,
      selected: h,
      hovered: c,
      average: t,
      partial: l
    })} data-value=${o ?? nothing} for=${n ?? nothing} @click=${this.handleLabelClick} @focus=${this.handleLabelFocus} @keydown=${this.handleLabelKeyDown} @pointerdown=${this.handleLabelPointerDown} @pointerover=${this.handleLabelPointerOver} tabindex=${d ?? nothing}><input aria-errormessage=${v2.validationMessage} .ariaInvalid=${this.status === "invalid"} .checked=${a} class="visually-hidden" .disabled=${this.disabled || this.readOnly} id=${n ?? nothing} name=${this.guid ?? nothing} @change=${this.handleInputChange} tabindex=-1 type=radio .value=${live(o ?? "")}>${p2({ full: h || t || c, scale: this.scale })}${l && html`<div class="fraction" style=${safeStyleMap({ width: `${i2 * 100}%` })}>${p2({ full: true, partial: true, scale: this.scale })}</div>` || ""}<span class="visually-hidden">${this.messages.stars.replace("{num}", `${o}`)}</span></label>`)}${(this.count || this.average) && this.showChip ? html`<calcite-chip .label=${e} .scale=${this.scale} .value=${e}>${!!this.average && html`<span class="number--average">${this.average.toString()}</span>` || ""}${!!this.count && html`<span class="number--count">(${e})</span>` || ""}</calcite-chip>` : null}</fieldset>${B({ component: this })}${this.validationMessage && this.status === "invalid" ? m3({ icon: this.validationIcon, id: v2.validationMessage, message: this.validationMessage, scale: this.scale, status: this.status }) : null}</span>` });
  }
};
_S.properties = { hoverValue: 16, average: 11, count: 11, disabled: 7, form: 3, messageOverrides: 0, name: 3, readOnly: 7, required: 7, scale: 3, showChip: 7, status: 3, validationIcon: [3, { converter: stringOrBoolean }], validationMessage: 1, validity: 0, value: 11 };
_S.styles = P;
var S2 = _S;
S("calcite-rating", S2);
export {
  S2 as Rating
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-rating/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-2G6PRXVN.js.map
