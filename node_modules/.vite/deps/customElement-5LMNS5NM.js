import {
  l,
  m as m7
} from "./chunk-ODA522JV.js";
import {
  E,
  F,
  O,
  m as m6,
  p as p2,
  w,
  x
} from "./chunk-BYGGXTK7.js";
import {
  m as m5
} from "./chunk-4YU6FNSH.js";
import {
  m as m4
} from "./chunk-DPQ7TENX.js";
import {
  H,
  X as X2,
  q
} from "./chunk-ZHGVMVCT.js";
import {
  $,
  B,
  D,
  W
} from "./chunk-VLJE74YV.js";
import {
  T,
  v
} from "./chunk-YJUTXVD7.js";
import {
  m as m2,
  p
} from "./chunk-VBBJGZOS.js";
import {
  X,
  Y,
  ct,
  ft,
  lt,
  ot,
  rt
} from "./chunk-T2GPF443.js";
import "./chunk-54EUENDV.js";
import "./chunk-F5MHH7JA.js";
import {
  k
} from "./chunk-766L7GNF.js";
import {
  s as s2
} from "./chunk-GL5DQLAU.js";
import {
  e
} from "./chunk-A7MNUVGI.js";
import {
  m as m3,
  o
} from "./chunk-2GIEDWQ6.js";
import {
  ref
} from "./chunk-LTKIMXCE.js";
import {
  s
} from "./chunk-RZAGQ6CT.js";
import {
  mt
} from "./chunk-VQ5234AM.js";
import "./chunk-PXZ2RU65.js";
import {
  i
} from "./chunk-S3EVYUV4.js";
import {
  S,
  m
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html,
  nothing,
  safeClassMap,
  stringOrBoolean
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-input-date-picker/customElement.js
var rt2 = css`:host{--calcite-icon-size: 1rem;--calcite-spacing-eighth: .125rem;--calcite-spacing-quarter: .25rem;--calcite-spacing-half: .5rem;--calcite-spacing-three-quarters: .75rem;--calcite-spacing: 1rem;--calcite-spacing-plus-quarter: 1.25rem;--calcite-spacing-plus-half: 1.5rem;--calcite-spacing-double: 2rem;--calcite-menu-min-width: 10rem;--calcite-header-min-height: 3rem;--calcite-footer-min-height: 3rem}:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:inline-block;width:100%;overflow:visible;vertical-align:top;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}:host .menu-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset,left,opacity;opacity:0;box-shadow:0 0 16px #00000029;z-index:var(--calcite-z-index);border-radius:.25rem}:host .menu-container[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}:host .menu-container[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}:host .menu-container[data-placement^=left] .calcite-floating-ui-anim{left:5px}:host .menu-container[data-placement^=right] .calcite-floating-ui-anim{left:-5px}:host .menu-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block-start:0;left:0}:host([scale=s]){--calcite-toggle-spacing: .5rem;--calcite-internal-input-text-input-padding-inline-end: calc(var(--calcite-toggle-spacing) + 1rem)}:host([scale=m]){--calcite-toggle-spacing: .75rem;--calcite-internal-input-text-input-padding-inline-end: calc(var(--calcite-toggle-spacing) + 1.5rem)}:host([scale=l]){--calcite-toggle-spacing: 1rem;--calcite-internal-input-text-input-padding-inline-end: calc(var(--calcite-toggle-spacing) + 2rem)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}.calendar-wrapper{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);transform:translateZ(0)}.input-wrapper{position:relative}.input-wrapper .chevron-icon{color:var(--calcite-color-text-3)}.input-wrapper:focus-within .chevron-icon,.input-wrapper:active .chevron-icon,.input-wrapper:hover .chevron-icon{color:var(--calcite-color-text-1)}.input-wrapper:focus-within~.input-wrapper .chevron-icon,.input-wrapper:active~.input-wrapper .chevron-icon,.input-wrapper:hover~.input-wrapper .chevron-icon{color:var(--calcite-color-text-1)}.toggle-icon{position:absolute;display:flex;cursor:pointer;align-items:center;inset-inline-end:0;inset-block:0;padding-inline:var(--calcite-toggle-spacing)}:host([range]) .container{display:flex}:host([range]) .input-container{display:flex;flex:1 1 auto}:host([range]) .input-wrapper{flex:1 1 auto}.divider-container{display:flex;align-items:stretch;border-width:1px;border-left-width:0px;border-right-width:0px;border-style:solid;border-color:var(--calcite-color-border-input);background-color:var(--calcite-color-foreground-1)}:host([layout=horizontal]) .divider-container{width:1px}.divider{display:inline-block;width:1px;margin-block:var(--calcite-spacing-xxs);background-color:var(--calcite-color-border-2)}:host([layout=vertical]) .divider-container{height:1px;width:100%;border-top-width:0px;border-bottom-width:0px;border-left-width:1px;border-right-width:0px;padding-inline:var(--calcite-spacing-md)}:host([layout=vertical]) .divider-container .divider{margin-top:0;margin-bottom:0;height:1px;width:100%}:host([range][layout=vertical]) .input-wrapper{width:100%}:host([range][layout=vertical]) .input-container{flex-direction:column;align-items:flex-start}.menu-container{--calcite-floating-ui-z-index: var(--calcite-z-index-dropdown);inline-size:max-content;display:none;max-inline-size:100vw;max-block-size:100vh;inset-block-start:0;left:0;z-index:var(--calcite-floating-ui-z-index)}.menu-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset,left,opacity;opacity:0;box-shadow:0 0 16px #00000029;z-index:var(--calcite-z-index);border-radius:.25rem}.menu-container[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}.menu-container[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}.menu-container[data-placement^=left] .calcite-floating-ui-anim{left:5px}.menu-container[data-placement^=right] .calcite-floating-ui-anim{left:-5px}.menu-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block-start:0;left:0}.input .calcite-input__wrapper{margin-top:0}.vertical-chevron-container{display:flex;align-items:center;border-width:1px;border-left-width:0px;border-style:solid;border-color:var(--calcite-color-border-input);padding-inline:var(--calcite-spacing-md);background-color:var(--calcite-color-foreground-1)}.vertical-chevron-container calcite-icon{color:var(--calcite-color-text-3)}.vertical-chevron-container calcite-icon:hover{color:var(--calcite-color-text-1)}:host([range][layout=vertical][scale=s]) .vertical-chevron-container,:host([range][layout=vertical][scale=s]) .divider-container{padding-inline:var(--calcite-spacing-sm)}:host([range][layout=vertical][scale=l]) .vertical-chevron-container,:host([range][layout=vertical][scale=l]) .divider-container{padding-inline:var(--calcite-spacing-lg)}.container:focus-within .vertical-chevron-container calcite-icon,.container:active .vertical-chevron-container calcite-icon,.container:hover .vertical-chevron-container calcite-icon{color:var(--calcite-color-text-1)}.validation-container{display:flex;flex-direction:column;align-items:flex-start;align-self:stretch}:host([scale=m]) .validation-container,:host([scale=l]) .validation-container{padding-block-start:.5rem}:host([scale=s]) .validation-container{padding-block-start:.25rem}::slotted(input[slot=hidden-form-input]){margin:0!important;opacity:0!important;outline:none!important;padding:0!important;position:absolute!important;inset:0!important;transform:none!important;-webkit-appearance:none!important;z-index:-1!important}.assistive-text{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}:host([hidden]){display:none}[hidden]{display:none}`;
var n = {
  assistiveText: "assistive-text",
  calendarWrapper: "calendar-wrapper",
  container: "container",
  dividerContainer: "divider-container",
  divider: "divider",
  inputContainer: "input-container",
  inputNoBottomBorder: "input--no-bottom-border",
  inputNoRightBorder: "input--no-right-border",
  inputNoTopBorder: "input--no-top-border",
  inputNoLeftBorder: "input--no-left-border",
  inputWrapper: "input-wrapper",
  input: "input",
  menu: "menu-container",
  toggleIcon: "toggle-icon",
  verticalChevronContainer: "vertical-chevron-container",
  chevronIcon: "chevron-icon"
};
var k2 = {
  validationMessage: "inputDatePickerValidationMessage"
};
function ot2(g) {
  if (!g)
    return false;
  const { year: t } = E(g);
  return Number(t) < 100;
}
function lt2(g) {
  const t = (/* @__PURE__ */ new Date()).getFullYear();
  return Math.floor(t / 100) * 100 + g;
}
var _ct = class _ct extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.commonDateSeparators = [".", "-", "/"], this.dialogId = `date-picker-dialog--${i()}`, this.focusOnOpen = false, this.focusTrap = k({
      triggerProp: "open",
      focusTrapOptions: {
        onActivate: () => {
          var _a;
          this.focusOnOpen && ((_a = this.datePickerEl) == null ? void 0 : _a.setFocus(), this.focusOnOpen = false);
        },
        allowOutsideClick: true,
        // Allow outside click and let the popover manager take care of closing the popover.
        clickOutsideDeactivates: false,
        initialFocus: false,
        setReturnFocus: false,
        onDeactivate: () => {
          this.open = false;
        }
      }
    })(this), this.transitionProp = "opacity", this.placeholderTextId = `calcite-input-date-picker-placeholder-${i()}`, this.rangeStartValueChangedByUser = false, this.userChangedValue = false, this._value = "", this.valueAsDateChangedExternally = false, this.focusedInput = "start", this.disabled = false, this.focusTrapDisabled = false, this.layout = "horizontal", this.messages = s({ blocking: true }), this.monthStyle = "wide", this.open = false, this.overlayPositioning = "absolute", this.placement = ot, this.proximitySelectionDisabled = false, this.range = false, this.readOnly = false, this.required = false, this.scale = "m", this.status = "idle", this.validity = {
      valid: false,
      badInput: false,
      customError: false,
      patternMismatch: false,
      rangeOverflow: false,
      rangeUnderflow: false,
      stepMismatch: false,
      tooLong: false,
      tooShort: false,
      typeMismatch: false,
      valueMissing: false
    }, this.calciteInputDatePickerBeforeClose = createEvent({ cancelable: false }), this.calciteInputDatePickerBeforeOpen = createEvent({ cancelable: false }), this.calciteInputDatePickerChange = createEvent({ cancelable: false }), this.calciteInputDatePickerClose = createEvent({ cancelable: false }), this.calciteInputDatePickerOpen = createEvent({ cancelable: false }), this.listen("blur", this.blurHandler), this.listen("keydown", this.keyDownHandler), this.handleDateTimeFormatChange();
  }
  /** Selected date as a string in ISO format (`"yyyy-mm-dd"`). */
  get value() {
    return this._value;
  }
  set value(t) {
    const e2 = this._value;
    t !== e2 && (this._value = t, this.valueWatcher(t));
  }
  // #endregion
  // #region Public Methods
  /**
   * Updates the position of the component.
   *
   * @param delayed If true, the repositioning is delayed.
   * @returns void
   */
  async reposition(t = false) {
    const { floatingEl: e2, referenceEl: a, placement: i2, overlayPositioning: s3, filteredFlipPlacements: r } = this;
    return ft(this, {
      floatingEl: e2,
      referenceEl: a,
      overlayPositioning: s3,
      placement: i2,
      flipPlacements: r,
      type: "menu"
    }, t);
  }
  /** Sets focus on the component. */
  async setFocus() {
    await m3(this), mt(this.el);
  }
  connectedCallback() {
    super.connectedCallback();
    const { open: t } = this;
    if (t && this.openHandler(), this.min && (this.minAsDate = O(this.min)), this.max && (this.maxAsDate = O(this.max)), Array.isArray(this.value))
      this.valueAsDate = m7(this.value);
    else if (this.value)
      try {
        const e2 = O(this.value), a = p2(e2, this.minAsDate, this.maxAsDate);
        this.valueAsDate = a;
      } catch {
        this.warnAboutInvalidValue(this.value), this.value = "";
      }
    else this.valueAsDate && (this.range && Array.isArray(this.valueAsDate) ? this.value = [x(this.valueAsDate[0]), x(this.valueAsDate[1])] : !this.range && !Array.isArray(this.valueAsDate) && (this.value = x(this.valueAsDate)));
    v(this), D(this), this.setFilteredPlacements(), q.numberFormatOptions = {
      numberingSystem: this.numberingSystem,
      locale: this.messages._lang,
      useGrouping: false
    }, ct(this);
  }
  async load() {
    this.handleDateTimeFormatChange(), await this.loadLocaleData(), this.onMinChanged(this.min), this.onMaxChanged(this.max);
  }
  willUpdate(t) {
    t.has("disabled") && (this.hasUpdated || this.disabled !== false) && this.handleDisabledAndReadOnlyChange(this.disabled), t.has("readOnly") && (this.hasUpdated || this.readOnly !== false) && this.handleDisabledAndReadOnlyChange(this.readOnly), t.has("valueAsDate") && this.valueAsDateWatcher(this.valueAsDate), t.has("flipPlacements") && this.flipPlacementsHandler(), t.has("min") && this.onMinChanged(this.min), t.has("max") && this.onMaxChanged(this.max), t.has("open") && (this.hasUpdated || this.open !== false) && this.openHandler(), t.has("overlayPositioning") && (this.hasUpdated || this.overlayPositioning !== "absolute") && this.reposition(true), (t.has("numberingSystem") || t.has("messages")) && this.handleDateTimeFormatChange(), t.has("layout") && (this.hasUpdated || this.layout !== "horizontal") && this.setReferenceEl(), t.has("messages") && this.loadLocaleData();
  }
  updated() {
    m2(this);
  }
  loaded() {
    this.localizeInputValues(), ct(this);
  }
  disconnectedCallback() {
    super.disconnectedCallback(), T(this), W(this), Y(this);
  }
  // #endregion
  // #region Private Methods
  handleDisabledAndReadOnlyChange(t) {
    t || (this.open = false);
  }
  valueWatcher(t) {
    if (!this.userChangedValue) {
      let e2;
      Array.isArray(t) ? e2 = m7(t) : t ? e2 = O(t) : e2 = void 0, !this.valueAsDateChangedExternally && e2 !== this.valueAsDate && (this.valueAsDate = e2), this.localizeInputValues();
    }
    this.userChangedValue = false;
  }
  valueAsDateWatcher(t) {
    const e2 = Array.isArray(t) ? [x(t[0]), x(t[1])] : x(t);
    this.datePickerActiveDate = Array.isArray(t) ? t[0] : t, this.value !== e2 && (this.valueAsDateChangedExternally = true, this.value = e2, this.valueAsDateChangedExternally = false);
  }
  flipPlacementsHandler() {
    this.setFilteredPlacements(), this.reposition(true);
  }
  onMinChanged(t) {
    this.minAsDate = O(t);
  }
  onMaxChanged(t) {
    this.maxAsDate = O(t);
  }
  openHandler() {
    s2(this), !(this.disabled || this.readOnly) && this.reposition(true);
  }
  calciteInternalInputInputHandler(t) {
    const e2 = t.target, a = e2.value, i2 = this.parseNumerals(a), s3 = this.formatNumerals(i2);
    e2.value = s3;
    const { year: r } = F(a, this.localeData);
    if (r && r.length < 4)
      return;
    const h = w(a, this.localeData);
    m6(h, this.min, this.max) && (this.datePickerActiveDate = h);
  }
  calciteInternalInputBlurHandler() {
    this.commitValue();
  }
  handleDateTimeFormatChange() {
    const t = {
      // we explicitly set numberingSystem to prevent the browser-inferred value
      // @see [Arabic numbering system support context](https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195) for more info.
      numberingSystem: H(this.numberingSystem)
    };
    this.dateTimeFormat = new Intl.DateTimeFormat(X2(this.messages._lang), t);
  }
  setReferenceEl() {
    const { focusedInput: t, layout: e2, endWrapper: a, startWrapper: i2 } = this;
    this.referenceEl = t === "end" || e2 === "vertical" ? a || i2 : i2 || a, requestAnimationFrame(() => ct(this));
  }
  onInputWrapperPointerDown() {
    this.currentOpenInput = this.focusedInput;
  }
  onInputWrapperClick(t) {
    const { range: e2, endInput: a, startInput: i2, currentOpenInput: s3 } = this, h = t.currentTarget.getAttribute("data-position");
    t.composedPath().find((v2) => {
      var _a;
      return (_a = v2.classList) == null ? void 0 : _a.contains(n.toggleIcon);
    }) && (h === "start" ? i2 : a).setFocus(), (!e2 || !this.open || s3 === h) && (this.open = !this.open);
  }
  setFilteredPlacements() {
    const { el: t, flipPlacements: e2 } = this;
    this.filteredFlipPlacements = e2 ? lt(e2, t) : null;
  }
  setTransitionEl(t) {
    t && (this.transitionEl = t);
  }
  onLabelClick() {
    this.setFocus();
  }
  onBeforeOpen() {
    this.calciteInputDatePickerBeforeOpen.emit();
  }
  onOpen() {
    this.focusTrap.activate(), this.calciteInputDatePickerOpen.emit();
  }
  onBeforeClose() {
    this.calciteInputDatePickerBeforeClose.emit();
  }
  onClose() {
    var _a;
    this.calciteInputDatePickerClose.emit(), X(this), this.focusTrap.deactivate(), this.focusOnOpen = false, (_a = this.datePickerEl) == null ? void 0 : _a.reset();
  }
  syncHiddenFormInput(t) {
    m5("date", this, t);
  }
  setStartInput(t) {
    this.startInput = t;
  }
  setEndInput(t) {
    this.endInput = t;
  }
  blurHandler() {
    this.open = false;
  }
  commitValue() {
    const { focusedInput: t, value: e2 } = this, a = `${t}Input`, i2 = this[a].value, s3 = w(i2, this.localeData), r = x(s3), h = Array.isArray(e2);
    if (this.range) {
      const u = t === "start" ? 0 : 1;
      if (h) {
        if (r === e2[u])
          return;
        s3 ? (this.setRangeValue([
          t === "start" ? s3 : O(e2[0]),
          t === "end" ? s3 : O(e2[1])
        ]), this.localizeInputValues()) : this.setRangeValue([
          t === "end" && O(e2[0]),
          t === "start" && O(e2[1])
        ]);
      } else
        s3 && (this.setRangeValue([
          t === "start" ? s3 : O(e2[0]),
          t === "end" ? s3 : O(e2[1])
        ]), this.localizeInputValues());
    } else {
      if (r === e2)
        return;
      this.setValue(s3), this.localizeInputValues();
    }
  }
  keyDownHandler(t) {
    var _a, _b;
    const { defaultPrevented: e2, key: a } = t;
    if (e2)
      return;
    const i2 = t.composedPath().some((s3) => s3.tagName === "CALCITE-SELECT");
    a === "Enter" ? (t.preventDefault(), this.commitValue(), this.shouldFocusRangeEnd() ? (_a = this.endInput) == null ? void 0 : _a.setFocus() : this.shouldFocusRangeStart() && ((_b = this.startInput) == null ? void 0 : _b.setFocus()), $(this) && this.restoreInputFocus(true)) : (a === "ArrowDown" || a === "ArrowUp") && !i2 ? (this.open = true, this.focusOnOpen = true, t.preventDefault()) : this.open && a === "Escape" && (this.open = false, t.preventDefault(), this.restoreInputFocus(true));
  }
  startInputFocus() {
    this.focusedInput = "start";
  }
  endInputFocus() {
    this.focusedInput = "end";
  }
  setFloatingEl(t) {
    this.floatingEl = t, ct(this);
  }
  setStartWrapper(t) {
    this.startWrapper = t, this.setReferenceEl();
  }
  setEndWrapper(t) {
    this.endWrapper = t, this.setReferenceEl();
  }
  setDatePickerRef(t) {
    t && (this.datePickerEl = t, this.focusTrap.overrideFocusTrapEl(t));
  }
  async loadLocaleData() {
    m() && (q.numberFormatOptions = {
      numberingSystem: this.numberingSystem,
      locale: this.messages._lang,
      useGrouping: false
    }, this.localeData = await l(this.messages._lang), this.localizeInputValues());
  }
  /**
   * Event handler for when the selected date changes
   *
   * @param event CalciteDatePicker custom change event
   */
  handleDateChange(t) {
    this.range || (t.stopPropagation(), this.setValue(t.target.valueAsDate), this.localizeInputValues(), this.restoreInputFocus());
  }
  shouldFocusRangeStart() {
    const t = this.value[0];
    return !!(this.value[1] && !t && this.focusedInput === "end" && this.startInput);
  }
  shouldFocusRangeEnd() {
    const t = this.value[0], e2 = this.value[1];
    return !!(t && !e2 && this.focusedInput === "start" && this.endInput);
  }
  handleDateRangeChange(t) {
    if (!this.range)
      return;
    t.stopPropagation();
    const e2 = t.target.valueAsDate;
    this.setRangeValue(e2), this.localizeInputValues(), this.restoreInputFocus();
  }
  restoreInputFocus(t = false) {
    if (!this.range) {
      this.startInput.setFocus(), this.open = false;
      return;
    }
    if (t) {
      this.focusInput();
      return;
    }
    this.rangeStartValueChangedByUser = this.focusedInput === "start", this.focusedInput = "end", !(this.shouldFocusRangeStart() || this.rangeStartValueChangedByUser) && (this.open = false, this.focusInput());
  }
  localizeInputValues() {
    const t = p2(this.range ? Array.isArray(this.valueAsDate) && this.valueAsDate[0] || void 0 : this.valueAsDate, this.minAsDate, this.maxAsDate), e2 = this.range ? p2(Array.isArray(this.valueAsDate) && this.valueAsDate[1] || void 0, this.minAsDate, this.maxAsDate) : null;
    this.setInputValue((t && this.dateTimeFormat.format(t)) ?? "", "start"), this.setInputValue((this.range && e2 && this.dateTimeFormat.format(e2)) ?? "", "end");
  }
  setInputValue(t, e2 = "start") {
    const a = this[`${e2}Input`];
    a && (a.value = t);
  }
  setRangeValue(t) {
    if (!this.range)
      return;
    const { value: e2 } = this, a = Array.isArray(e2), i2 = Array.isArray(t), s3 = i2 ? t[0] : null;
    let r = i2 ? x(s3) : "";
    r && (r = this.getNormalizedDate(r));
    const h = i2 ? t[1] : null;
    let u = i2 ? x(h) : "";
    u && (u = this.getNormalizedDate(u));
    const f = r || u ? [r, u] : "";
    if (f === e2)
      return;
    this.userChangedValue = true, this.value = f, this.valueAsDate = f ? m7(f) : void 0;
    const v2 = this.calciteInputDatePickerChange.emit();
    v2 && v2.defaultPrevented && (this.value = e2, a ? (this.setInputValue(e2[0], "start"), this.setInputValue(e2[1], "end")) : (this.value = e2, this.setInputValue(e2)));
  }
  setValue(t) {
    if (this.range)
      return;
    const e2 = this.value;
    let a = x(t);
    if (a = this.getNormalizedDate(a), a === e2)
      return;
    this.userChangedValue = true, this.valueAsDate = a ? O(a) : void 0, this.value = a || "", this.calciteInputDatePickerChange.emit().defaultPrevented && (this.value = e2, this.setInputValue(e2));
  }
  warnAboutInvalidValue(t) {
    console.warn(`The specified value "${t}" does not conform to the required format, "YYYY-MM-DD".`);
  }
  formatNumerals(t) {
    return t ? t.split("").map((e2) => {
      var _a, _b, _c, _d, _e;
      return ((_a = this.commonDateSeparators) == null ? void 0 : _a.includes(e2)) ? (_b = this.localeData) == null ? void 0 : _b.separator : ((_c = e) == null ? void 0 : _c.includes(e2)) ? (_e = (_d = q) == null ? void 0 : _d.numberFormatter) == null ? void 0 : _e.format(Number(e2)) : e2;
    }).join("") : "";
  }
  parseNumerals(t) {
    return t ? t.split("").map((e2) => e.includes(e2) ? q.delocalize(e2) : e2).join("") : "";
  }
  getNormalizedDate(t) {
    if (!t)
      return "";
    if (!ot2(t))
      return t;
    const { day: e2, month: a, year: i2 } = E(t);
    return `${lt2(Number(i2))}-${a}-${e2}`;
  }
  focusInput() {
    (this.focusedInput === "start" ? this.startInput : this.endInput).setFocus();
  }
  // #endregion
  // #region Rendering
  render() {
    var _a, _b, _c;
    const { disabled: t, messages: { _lang: e2 }, messages: a, numberingSystem: i2, readOnly: s3 } = this;
    return q.numberFormatOptions = {
      numberingSystem: i2,
      locale: e2,
      useGrouping: false
    }, p({ disabled: this.disabled, children: html`${this.localeData && html`<div class=${safeClassMap(n.container)}><div class=${safeClassMap(n.inputContainer)}><div class=${safeClassMap(n.inputWrapper)} data-position=start @click=${this.onInputWrapperClick} @pointerdown=${this.onInputWrapperPointerDown} ${ref(this.setStartWrapper)}><calcite-input-text aria-controls=${this.dialogId ?? nothing} aria-describedby=${this.placeholderTextId ?? nothing} aria-errormessage=${k2.validationMessage} aria-autocomplete=none .ariaExpanded=${this.open} aria-haspopup=dialog .ariaInvalid=${this.status === "invalid"} class=${safeClassMap({
      [n.input]: true,
      [n.inputNoBottomBorder]: this.layout === "vertical" && this.range,
      [n.inputNoRightBorder]: this.range
    })} .disabled=${t} icon=calendar @calciteInputTextInput=${this.calciteInternalInputInputHandler} @calciteInternalInputTextBlur=${this.calciteInternalInputBlurHandler} @calciteInternalInputTextFocus=${this.startInputFocus} .placeholder=${(_a = this.localeData) == null ? void 0 : _a.placeholder} .readOnly=${s3} role=combobox .scale=${this.scale} .status=${this.status} ${ref(this.setStartInput)}></calcite-input-text>${!this.readOnly && !this.range && this.renderToggleIcon(this.open && this.focusedInput === "start") || ""}<span aria-hidden=true class=${safeClassMap(n.assistiveText)} id=${this.placeholderTextId ?? nothing}>${a.dateFormat.replace("{format}", (_b = this.localeData) == null ? void 0 : _b.placeholder)}</span></div><div .ariaHidden=${!this.open} .ariaLabel=${a.chooseDate} aria-live=polite aria-modal=true class=${safeClassMap(n.menu)} id=${this.dialogId ?? nothing} role=dialog ${ref(this.setFloatingEl)}><div class=${safeClassMap({
      [n.calendarWrapper]: true,
      [rt.animation]: true,
      [rt.animationActive]: this.open
    })} ${ref(this.setTransitionEl)}><calcite-date-picker .activeDate=${this.datePickerActiveDate} .activeRange=${this.focusedInput} .headingLevel=${this.headingLevel} .layout=${this.layout} .max=${this.max} .maxAsDate=${this.maxAsDate} .messageOverrides=${this.messageOverrides} .min=${this.min} .minAsDate=${this.minAsDate} .monthStyle=${this.monthStyle} .numberingSystem=${i2} @calciteDatePickerChange=${this.handleDateChange} @calciteDatePickerRangeChange=${this.handleDateRangeChange} .proximitySelectionDisabled=${this.proximitySelectionDisabled} .range=${this.range} .scale=${this.scale} tabindex=${(this.open ? void 0 : -1) ?? nothing} .valueAsDate=${this.valueAsDate} ${ref(this.setDatePickerRef)}></calcite-date-picker></div></div>${this.range && html`<div class=${safeClassMap(n.dividerContainer)}><div class=${safeClassMap(n.divider)}></div></div>` || ""}${this.range && html`<div class=${safeClassMap(n.inputWrapper)} data-position=end @click=${this.onInputWrapperClick} @pointerdown=${this.onInputWrapperPointerDown} ${ref(this.setEndWrapper)}><calcite-input-text aria-controls=${this.dialogId ?? nothing} aria-autocomplete=none .ariaExpanded=${this.open} aria-haspopup=dialog class=${safeClassMap({
      [n.input]: true,
      [n.inputNoTopBorder]: this.layout === "vertical" && this.range,
      [n.inputNoLeftBorder]: this.layout === "horizontal" && this.range,
      [n.inputNoRightBorder]: this.layout === "vertical" && this.range
    })} .disabled=${t} icon=calendar @calciteInputTextInput=${this.calciteInternalInputInputHandler} @calciteInternalInputTextBlur=${this.calciteInternalInputBlurHandler} @calciteInternalInputTextFocus=${this.endInputFocus} .placeholder=${(_c = this.localeData) == null ? void 0 : _c.placeholder} .readOnly=${s3} role=combobox .scale=${this.scale} .status=${this.status} ${ref(this.setEndInput)}></calcite-input-text>${!this.readOnly && this.layout === "horizontal" && this.renderToggleIcon(this.open) || ""}</div>` || ""}</div>${this.range && this.layout === "vertical" && html`<div class=${safeClassMap(n.verticalChevronContainer)}><calcite-icon .icon=${this.open ? "chevron-up" : "chevron-down"} .scale=${o(this.scale)}></calcite-icon></div>` || ""}</div>` || ""}${B({ component: this })}${this.validationMessage && this.status === "invalid" ? m4({ icon: this.validationIcon, id: k2.validationMessage, message: this.validationMessage, scale: this.scale, status: this.status }) : null}` });
  }
  renderToggleIcon(t) {
    return html`<span class=${safeClassMap(n.toggleIcon)} tabindex=-1><calcite-icon class=${safeClassMap(n.chevronIcon)} .icon=${t ? "chevron-up" : "chevron-down"} .scale=${o(this.scale)}></calcite-icon></span>`;
  }
};
_ct.properties = { datePickerActiveDate: 16, focusedInput: 16, localeData: 16, disabled: 7, flipPlacements: 0, focusTrapDisabled: 7, form: 3, headingLevel: 11, layout: 3, max: 3, maxAsDate: 0, messageOverrides: 0, min: 3, minAsDate: 0, monthStyle: 1, name: 3, numberingSystem: 3, open: 7, overlayPositioning: 3, placement: 3, proximitySelectionDisabled: 5, range: 7, readOnly: 7, required: 7, scale: 3, status: 3, validationIcon: [3, { converter: stringOrBoolean }], validationMessage: 1, validity: 0, value: 1, valueAsDate: 0 };
_ct.shadowRootOptions = { mode: "open", delegatesFocus: true };
_ct.styles = rt2;
var ct2 = _ct;
S("calcite-input-date-picker", ct2);
export {
  ct2 as InputDatePicker
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-input-date-picker/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-5LMNS5NM.js.map
