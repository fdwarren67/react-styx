import {
  B,
  D,
  W
} from "./chunk-VLJE74YV.js";
import {
  I,
  T,
  v
} from "./chunk-YJUTXVD7.js";
import {
  m,
  p
} from "./chunk-VBBJGZOS.js";
import {
  o
} from "./chunk-2WQHVWBG.js";
import {
  m as m2
} from "./chunk-2GIEDWQ6.js";
import {
  ref
} from "./chunk-LTKIMXCE.js";
import {
  gt,
  tt
} from "./chunk-VQ5234AM.js";
import "./chunk-PXZ2RU65.js";
import "./chunk-S3EVYUV4.js";
import {
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html,
  nothing,
  safeClassMap
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-radio-button/customElement.js
var L = {
  container: "container"
};
var E = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:block;cursor:pointer}:host .container{position:relative;outline:2px solid transparent;outline-offset:2px}:host .radio{cursor:pointer;border-radius:9999px;background-color:var(--calcite-color-foreground-1);outline-color:transparent;transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;box-shadow:inset 0 0 0 1px var(--calcite-color-border-input)}:host([hovered]) .radio,:host(:not([checked])[focused]:not([disabled])) .radio{box-shadow:inset 0 0 0 2px var(--calcite-color-brand)}:host([focused]) .radio{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}:host([disabled]) .radio{cursor:default;opacity:var(--calcite-opacity-disabled)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hovered][disabled]) .radio{box-shadow:inset 0 0 0 1px var(--calcite-color-border-input)}:host([scale=s]){--calcite-radio-size: var(--calcite-font-size--2)}:host([scale=m]){--calcite-radio-size: var(--calcite-font-size--1)}:host([scale=l]){--calcite-radio-size: var(--calcite-font-size-0)}.radio{block-size:var(--calcite-radio-size);max-inline-size:var(--calcite-radio-size);min-inline-size:var(--calcite-radio-size)}:host([scale=s][checked]) .radio,:host([hovered][scale=s][checked][disabled]) .radio{box-shadow:inset 0 0 0 4px var(--calcite-color-brand)}:host([scale=s][focused][checked]:not([disabled])) .radio{box-shadow:inset 0 0 0 4px var(--calcite-color-brand),0 0 0 2px var(--calcite-color-foreground-1)}:host([scale=m][checked]) .radio,:host([hovered][scale=m][checked][disabled]) .radio{box-shadow:inset 0 0 0 5px var(--calcite-color-brand)}:host([scale=m][focused][checked]:not([disabled])) .radio{box-shadow:inset 0 0 0 5px var(--calcite-color-brand),0 0 0 2px var(--calcite-color-foreground-1)}:host([scale=l][checked]) .radio,:host([hovered][scale=l][checked][disabled]) .radio{box-shadow:inset 0 0 0 6px var(--calcite-color-brand)}:host([scale=l][focused][checked]:not([disabled])) .radio{box-shadow:inset 0 0 0 6px var(--calcite-color-brand),0 0 0 2px var(--calcite-color-foreground-1)}@media (forced-colors: active){:host([checked]) .radio:after,:host([checked][disabled]) .radio:after{content:"";inline-size:var(--calcite-radio-size);block-size:var(--calcite-radio-size);background-color:windowText;display:block}}::slotted(input[slot=hidden-form-input]){margin:0!important;opacity:0!important;outline:none!important;padding:0!important;position:absolute!important;inset:0!important;transform:none!important;-webkit-appearance:none!important;z-index:-1!important}:host([hidden]){display:none}[hidden]{display:none}`;
var _q = class _q extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.checked = false, this.disabled = false, this.focused = false, this.hovered = false, this.required = false, this.scale = "m", this.calciteInternalRadioButtonBlur = createEvent({ cancelable: false }), this.calciteInternalRadioButtonCheckedChange = createEvent({ cancelable: false }), this.calciteInternalRadioButtonFocus = createEvent({ cancelable: false }), this.calciteRadioButtonChange = createEvent({ cancelable: false }), this.listen("pointerenter", this.pointerEnterHandler), this.listen("pointerleave", this.pointerLeaveHandler), this.listen("click", this.clickHandler), this.listen("keydown", this.handleKeyDown);
  }
  // #endregion
  // #region Public Methods
  /** @private */
  async emitCheckedChange() {
    this.calciteInternalRadioButtonCheckedChange.emit();
  }
  /** Sets focus on the component. */
  async setFocus() {
    await m2(this), this.disabled || tt(this.containerEl);
  }
  connectedCallback() {
    this.rootNode = this.el.getRootNode(), this.name && this.checkLastRadioButton(), v(this), D(this), this.updateTabIndexOfOtherRadioButtonsInGroup(), super.connectedCallback();
  }
  willUpdate(e) {
    this.hasUpdated && e.has("checked") && this.checkedChanged(this.checked), e.has("disabled") && (this.hasUpdated || this.disabled !== false) && this.updateTabIndexOfOtherRadioButtonsInGroup(), e.has("name") && this.checkLastRadioButton();
  }
  updated() {
    m(this);
  }
  loaded() {
    this.focused && !this.disabled && this.setFocus();
  }
  disconnectedCallback() {
    super.disconnectedCallback(), T(this), W(this), this.updateTabIndexOfOtherRadioButtonsInGroup();
  }
  // #endregion
  // #region Private Methods
  checkedChanged(e) {
    e && this.uncheckOtherRadioButtonsInGroup(), this.calciteInternalRadioButtonCheckedChange.emit();
  }
  syncHiddenFormInput(e) {
    e.type = "radio";
  }
  selectItem(e, o2) {
    e[o2].click();
  }
  queryButtons() {
    return Array.from(this.rootNode.querySelectorAll("calcite-radio-button:not([hidden])")).filter((e) => e.name === this.name);
  }
  isFocusable() {
    const e = this.queryButtons(), o2 = e.find((i) => !i.disabled), t = e.find((i) => i.checked);
    return o2 === this.el && !t;
  }
  check() {
    this.disabled || (this.focused = true, this.setFocus(), !this.checked && (this.uncheckAllRadioButtonsInGroup(), this.checked = true, this.calciteRadioButtonChange.emit()));
  }
  clickHandler() {
    this.disabled || this.check();
  }
  onLabelClick(e) {
    if (this.disabled || this.el.hidden)
      return;
    const o2 = e.currentTarget, t = o2.for ? this.rootNode.querySelector(`calcite-radio-button[id="${o2.for}"]`) : o2.querySelector(`calcite-radio-button[name="${this.name}"]`);
    t && (t.focused = true, this.setFocus(), !t.checked && (this.uncheckOtherRadioButtonsInGroup(), t.checked = true, this.calciteRadioButtonChange.emit()));
  }
  checkLastRadioButton() {
    const o2 = this.queryButtons().filter((t) => t.checked);
    if ((o2 == null ? void 0 : o2.length) > 1) {
      const t = o2[o2.length - 1];
      o2.filter((i) => i !== t).forEach((i) => {
        i.checked = false, i.emitCheckedChange();
      });
    }
  }
  setContainerEl(e) {
    this.containerEl = e;
  }
  uncheckAllRadioButtonsInGroup() {
    this.queryButtons().forEach((o2) => {
      o2.checked && (o2.checked = false, o2.focused = false);
    });
  }
  uncheckOtherRadioButtonsInGroup() {
    this.queryButtons().filter((t) => t !== this.el).forEach((t) => {
      t.checked && (t.checked = false, t.focused = false);
    });
  }
  updateTabIndexOfOtherRadioButtonsInGroup() {
    this.queryButtons().filter((t) => t !== this.el && !t.disabled).forEach((t) => {
      var _a;
      (_a = t.manager) == null ? void 0 : _a.component.requestUpdate();
    });
  }
  getTabIndex() {
    if (!this.disabled)
      return this.checked || this.isFocusable() ? 0 : -1;
  }
  pointerEnterHandler() {
    this.disabled || (this.hovered = true);
  }
  pointerLeaveHandler() {
    this.disabled || (this.hovered = false);
  }
  handleKeyDown(e) {
    const o2 = ["ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", " "], { key: t } = e, { el: i } = this;
    if (o2.indexOf(t) === -1)
      return;
    if (t === " ") {
      this.check(), e.preventDefault();
      return;
    }
    let r = t;
    gt(i) === "rtl" && (t === "ArrowRight" && (r = "ArrowLeft"), t === "ArrowLeft" && (r = "ArrowRight"));
    const a = Array.from(this.rootNode.querySelectorAll("calcite-radio-button:not([hidden])")).filter((n) => n.name === this.name);
    let c = 0;
    const d = a.length;
    switch (a.some((n, h) => {
      if (n.checked)
        return c = h, true;
    }), r) {
      case "ArrowLeft":
      case "ArrowUp":
        e.preventDefault(), this.selectItem(a, o(Math.max(c - 1, -1), d));
        return;
      case "ArrowRight":
      case "ArrowDown":
        e.preventDefault(), this.selectItem(a, o(c + 1, d));
        return;
      default:
        return;
    }
  }
  onContainerBlur() {
    this.focused = false, this.calciteInternalRadioButtonBlur.emit();
  }
  onContainerFocus() {
    this.disabled || (this.focused = true, this.calciteInternalRadioButtonFocus.emit());
  }
  // #endregion
  // #region Rendering
  render() {
    const e = this.getTabIndex();
    return p({ disabled: this.disabled, children: html`<div .ariaChecked=${this.checked} .ariaLabel=${I(this)} class=${safeClassMap(L.container)} @blur=${this.onContainerBlur} @focus=${this.onContainerFocus} role=radio tabindex=${e ?? nothing} ${ref(this.setContainerEl)}><div class="radio"></div></div>${B({ component: this })}` });
  }
};
_q.properties = { checked: 7, disabled: 7, focused: 7, form: 3, hovered: 7, label: 1, name: 3, required: 7, scale: 3, value: 1 };
_q.styles = E;
var q = _q;
S("calcite-radio-button", q);
export {
  q as RadioButton
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-radio-button/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-BBA323M4.js.map
