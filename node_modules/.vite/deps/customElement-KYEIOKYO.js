import {
  q
} from "./chunk-ZHGVMVCT.js";
import "./chunk-A7MNUVGI.js";
import {
  f
} from "./chunk-2GIEDWQ6.js";
import {
  createRef,
  ref
} from "./chunk-LTKIMXCE.js";
import {
  s
} from "./chunk-RZAGQ6CT.js";
import "./chunk-PXZ2RU65.js";
import {
  L,
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html,
  nothing,
  render,
  safeClassMap
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-table/customElement.js
var n = {
  bordered: "bordered",
  striped: "striped",
  selectionArea: "selection-area",
  paginationArea: "pagination-area",
  container: "container",
  tableContainer: "table-container",
  tableFixed: "table--fixed",
  assistiveText: "assistive-text",
  selectionActions: "selection-actions"
};
var m = {
  selectionActions: "selection-actions",
  tableHeader: "table-header",
  tableFooter: "table-footer"
};
var H = css`@charset "UTF-8";:host([scale=s]){--calcite-internal-table-cell-padding: .25rem;--calcite-internal-table-cell-font-size: var(--calcite-font-size--2);--calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--3)}:host([scale=m]){--calcite-internal-table-cell-padding: .5rem;--calcite-internal-table-cell-font-size: var(--calcite-font-size--1);--calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--2)}:host([scale=l]){--calcite-internal-table-cell-padding: 1rem;--calcite-internal-table-cell-font-size: var(--calcite-font-size-0);--calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--1)}:host{display:flex}.container{display:flex;block-size:100%;inline-size:100%;flex-direction:column}.table-container{overflow:auto;white-space:nowrap;border:1px solid var(--calcite-color-border-3)}.assistive-text{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}table{inline-size:100%;border-collapse:collapse;overflow-x:scroll}@-moz-document url-prefix(){table{border-collapse:separate;border-spacing:0}}.table--fixed{table-layout:fixed}.bordered ::slotted(calcite-table-row){--calcite-table-row-border-color: var(--calcite-color-border-3)}.striped ::slotted(calcite-table-row:nth-child(2n+1)){--calcite-table-row-background: var(--calcite-color-foreground-2)}.selection-actions{display:flex;flex-direction:row;margin-inline-start:auto}.selection-area{display:flex;flex-direction:row;align-items:center;padding-block:var(--calcite-internal-table-cell-padding)}.selection-area calcite-chip:last-of-type{margin-inline-end:.5rem}.selection-area calcite-chip:last-of-type:not(:first-of-type){margin-inline-start:.5rem}.selection-area calcite-button{margin-inline-end:1rem}.pagination-area{display:flex;inline-size:100%;flex-direction:row;justify-content:center;padding-block:var(--calcite-internal-table-cell-padding)}calcite-pagination{flex:1;justify-content:center}:host([hidden]){display:none}[hidden]{display:none}`;
var _L = class _L extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.paginationEl = createRef(), this.tableBodySlotEl = createRef(), this.tableFootSlotEl = createRef(), this.tableHeadSlotEl = createRef(), this.colCount = 0, this.pageStartRow = 1, this.selectedCount = 0, this.bordered = false, this.groupSeparator = false, this.interactionMode = "interactive", this.layout = "auto", this.messages = s({ blocking: true }), this.numbered = false, this.pageSize = 0, this.scale = "m", this._selectedItems = [], this.selectionDisplay = "top", this.selectionMode = "none", this.striped = false, this.calciteInternalTableRowFocusChange = createEvent({ cancelable: false }), this.calciteTablePageChange = createEvent({ cancelable: false }), this.calciteTableSelect = createEvent({ cancelable: false }), this.listen("calciteTableRowSelect", this.calciteTableRowSelectListener), this.listen("calciteInternalTableRowSelect", this.calciteInternalTableRowSelectListener), this.listen("calciteInternalTableRowFocusRequest", this.calciteInternalTableRowFocusEvent);
  }
  /**
   * Specifies the component's selected items.
   *
   * @readonly
   */
  get selectedItems() {
    return this._selectedItems;
  }
  async load() {
    this.readCellContentsToAT = /safari/i.test(L()), this.listenOn(this.el.shadowRoot, "slotchange", this.handleSlotChange);
  }
  willUpdate(e) {
    (e.has("groupSeparator") && (this.hasUpdated || this.groupSeparator !== false) || e.has("interactionMode") && (this.hasUpdated || this.interactionMode !== "interactive") || e.has("numbered") && (this.hasUpdated || this.numbered !== false) || e.has("numberingSystem") || e.has("pageSize") && (this.hasUpdated || this.pageSize !== 0) || e.has("scale") && (this.hasUpdated || this.scale !== "m") || e.has("selectionMode") && (this.hasUpdated || this.selectionMode !== "none")) && this.updateRows();
  }
  // #endregion
  // #region Private Methods
  handleSlotChange() {
    this.updateRows();
  }
  calciteTableRowSelectListener(e) {
    e.composedPath().includes(this.el) && this.setSelectedItems(e.target);
  }
  calciteInternalTableRowSelectListener(e) {
    e.composedPath().includes(this.el) && this.updateSelectedItems(false);
  }
  calciteInternalTableRowFocusEvent(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    const i = e.detail.cellPosition, s2 = e.detail.rowPosition, l = e.detail.destination, c = e.detail.lastCell, t = (_a = this.bodyRows) == null ? void 0 : _a.filter((h) => !f(h)), o = (_b = this.allRows) == null ? void 0 : _b.filter((h) => !f(h)), f2 = (_c = this.headRows[this.headRows.length - 1]) == null ? void 0 : _c.positionAll, S2 = (_d = t[0]) == null ? void 0 : _d.positionAll, w = (_e = t[t.length - 1]) == null ? void 0 : _e.positionAll, R = (_f = this.footRows[0]) == null ? void 0 : _f.positionAll, C = (_g = o[o.length - 1]) == null ? void 0 : _g.positionAll, v = l === "next" && s2 === f2, z = l === "previous" && s2 === R, T = l === "previous" && s2 === S2, x = l === "next" && s2 === w;
    let r;
    switch (l) {
      case "first":
        r = 0;
        break;
      case "last":
        r = C;
        break;
      case "next":
        r = v ? S2 : x ? R : s2 + 1;
        break;
      case "previous":
        r = z ? w : T ? f2 : s2 - 1;
        break;
    }
    const y = (_i = (_h = this.allRows) == null ? void 0 : _h.find((h) => h.positionAll === r)) == null ? void 0 : _i.cellCount, A = i > y ? y : i;
    r !== void 0 && this.calciteInternalTableRowFocusChange.emit({
      cellPosition: A,
      rowPosition: r,
      destination: l,
      lastCell: c
    });
  }
  getSlottedRows(e) {
    var _a;
    return (_a = e == null ? void 0 : e.assignedElements({ flatten: true })) == null ? void 0 : _a.filter((i) => i == null ? void 0 : i.matches("calcite-table-row"));
  }
  updateRows() {
    var _a, _b, _c;
    const e = this.getSlottedRows(this.tableHeadSlotEl.value) || [], i = this.getSlottedRows(this.tableBodySlotEl.value) || [], s2 = this.getSlottedRows(this.tableFootSlotEl.value) || [], l = [...e, ...i, ...s2];
    e == null ? void 0 : e.forEach((t) => {
      const o = e == null ? void 0 : e.indexOf(t);
      t.rowType = "head", t.positionSection = o, t.positionSectionLocalized = this.localizeNumber((o + 1).toString());
    }), i == null ? void 0 : i.forEach((t) => {
      const o = i == null ? void 0 : i.indexOf(t);
      t.rowType = "body", t.positionSection = o, t.positionSectionLocalized = this.localizeNumber((o + 1).toString());
    }), s2 == null ? void 0 : s2.forEach((t) => {
      const o = s2 == null ? void 0 : s2.indexOf(t);
      t.rowType = "foot", t.positionSection = o, t.positionSectionLocalized = this.localizeNumber((o + 1).toString());
    }), l == null ? void 0 : l.forEach((t) => {
      t.interactionMode = this.interactionMode, t.selectionMode = this.selectionMode, t.bodyRowCount = i == null ? void 0 : i.length, t.positionAll = l == null ? void 0 : l.indexOf(t), t.numbered = this.numbered, t.scale = this.scale, t.readCellContentsToAT = this.readCellContentsToAT, t.lastVisibleRow = (l == null ? void 0 : l.indexOf(t)) === l.length - 1;
    });
    const c = ((_a = e[0]) == null ? void 0 : _a.cellCount) || ((_c = (_b = e[0]) == null ? void 0 : _b.querySelectorAll("calcite-table-header")) == null ? void 0 : _c.length);
    this.colCount = c, this.headRows = e, this.bodyRows = i, this.footRows = s2, this.allRows = l, this.updateSelectedItems(), this.paginateRows();
  }
  handlePaginationChange() {
    var _a;
    const e = (_a = this.paginationEl.value) == null ? void 0 : _a.startItem;
    this.pageStartRow = e || 1, this.calciteTablePageChange.emit(), this.updateRows();
  }
  paginateRows() {
    var _a;
    (_a = this.bodyRows) == null ? void 0 : _a.forEach((e) => {
      const i = e.positionSection + 1, s2 = i >= this.pageStartRow && i < this.pageStartRow + this.pageSize;
      e.itemHidden = this.pageSize > 0 && !s2 && !this.footRows.includes(e), e.lastVisibleRow = i === this.pageStartRow + this.pageSize - 1 || i === this.bodyRows.length;
    });
  }
  updateSelectedItems(e) {
    var _a, _b;
    const i = (_a = this.bodyRows) == null ? void 0 : _a.filter((s2) => s2.selected);
    this._selectedItems = i, this.selectedCount = i == null ? void 0 : i.length, (_b = this.allRows) == null ? void 0 : _b.forEach((s2) => {
      s2.selectedRowCount = this.selectedCount, s2.selectedRowCountLocalized = this.localizeNumber(this.selectedCount);
    }), e && this.calciteTableSelect.emit();
  }
  handleDeselectAllRows() {
    var _a;
    (_a = this.bodyRows) == null ? void 0 : _a.forEach((e) => {
      e.selected = false;
    }), this.updateSelectedItems(true);
  }
  setSelectedItems(e) {
    var _a;
    (_a = this.bodyRows) == null ? void 0 : _a.forEach((i) => {
      var _a2;
      (e == null ? void 0 : e.rowType) === "head" ? i.selected = this.selectedCount !== ((_a2 = this.bodyRows) == null ? void 0 : _a2.length) : i.selected = e === i ? !i.selected : this.selectionMode === "multiple" ? i.selected : false;
    }), this.updateSelectedItems(true);
  }
  localizeNumber(e) {
    return q.numberFormatOptions = {
      locale: this.messages._lang,
      numberingSystem: this.numberingSystem,
      useGrouping: this.groupSeparator
    }, q.localize(e.toString());
  }
  // #endregion
  // #region Rendering
  renderSelectionArea() {
    var _a, _b, _c;
    const e = (_b = (_a = this._selectedItems) == null ? void 0 : _a.filter((t) => f(t))) == null ? void 0 : _b.length, i = this.localizeNumber(e == null ? void 0 : e.toString()), l = `${this.localizeNumber((_c = this.selectedCount) == null ? void 0 : _c.toString())} ${this.messages.selected}`, c = `${i} ${this.messages.hiddenSelected}`;
    return html`<div class=${safeClassMap(n.selectionArea)}><calcite-chip .kind=${this.selectedCount > 0 ? "brand" : "neutral"} .label=${l} .scale=${this.scale} .value=${l}>${l}</calcite-chip>${e > 0 && html`<calcite-chip icon=hide-empty .label=${c} .scale=${this.scale} title=${c ?? nothing} .value=${c}>${i}</calcite-chip>` || ""}${this.selectedCount > 0 && html`<calcite-button icon-start=x kind=neutral @click=${this.handleDeselectAllRows} round .scale=${this.scale} .title=${`${this.messages.clear} ${l} ${this.messages.row}`}>${this.messages.clear}</calcite-button>` || ""}<div class=${safeClassMap(n.selectionActions)}><slot name=${m.selectionActions}></slot></div></div>`;
  }
  renderPaginationArea() {
    var _a;
    return html`<div class=${safeClassMap(n.paginationArea)}><calcite-pagination .groupSeparator=${this.groupSeparator} .numberingSystem=${this.numberingSystem} @calcitePaginationChange=${this.handlePaginationChange} .pageSize=${this.pageSize} .scale=${this.scale} start-item=1 .totalItems=${(_a = this.bodyRows) == null ? void 0 : _a.length} ${ref(this.paginationEl)}></calcite-pagination></div>`;
  }
  renderTHead() {
    return html`<thead><slot name=${m.tableHeader} ${ref(this.tableHeadSlotEl)}></slot></thead>`;
  }
  renderTBody() {
    return html`<tbody><slot ${ref(this.tableBodySlotEl)}></slot></tbody>`;
  }
  renderTFoot() {
    return html`<tfoot><slot name=${m.tableFooter} ${ref(this.tableFootSlotEl)}></slot></tfoot>`;
  }
  render() {
    var _a;
    return html`<div class=${safeClassMap(n.container)}>${this.selectionMode !== "none" && this.selectionDisplay !== "none" && this.renderSelectionArea() || ""}<div class=${safeClassMap({
      [n.bordered]: this.bordered,
      [n.striped]: this.striped,
      [n.tableContainer]: true
    })}><table .ariaColCount=${this.colCount} .ariaMultiSelectable=${/* workaround to ensure the attr gets removed; we should be able to avoid the ternary when fixed */
    this.selectionMode === "multiple" ? "true" : null} .ariaRowCount=${(_a = this.allRows) == null ? void 0 : _a.length} class=${safeClassMap({ [n.tableFixed]: this.layout === "fixed" })} .role=${this.interactionMode === "interactive" ? "grid" : "table"} ${ref((e) => {
      e && render(html`<caption class=${safeClassMap(n.assistiveText)}>${this.caption}</caption>${this.renderTHead()}${this.renderTBody()}${this.renderTFoot()}`, e);
    })}></table></div>${this.pageSize > 0 && this.renderPaginationArea() || ""}</div>`;
  }
};
_L.properties = { colCount: 16, pageStartRow: 16, readCellContentsToAT: 16, selectedCount: 16, bordered: 7, caption: 1, groupSeparator: 7, interactionMode: 3, layout: 3, messageOverrides: 0, numbered: 7, numberingSystem: 3, pageSize: 11, scale: 3, selectedItems: 32, _selectedItems: 16, selectionDisplay: 3, selectionMode: 3, striped: 7 };
_L.styles = H;
var L2 = _L;
S("calcite-table", L2);
export {
  L2 as Table
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-table/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-KYEIOKYO.js.map
