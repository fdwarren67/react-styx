import {
  m,
  p
} from "./chunk-VBBJGZOS.js";
import {
  createRef,
  ref
} from "./chunk-LTKIMXCE.js";
import {
  tt,
  xt
} from "./chunk-VQ5234AM.js";
import "./chunk-S3EVYUV4.js";
import {
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-card-group/customElement.js
var f = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:block}.container{display:flex;flex-wrap:wrap;gap:var(--calcite-card-group-space, var(--calcite-card-group-gap, var(--calcite-spacing-md)))}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}`;
var _b = class _b extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.items = [], this.slotRefEl = createRef(), this.disabled = false, this.selectedItems = [], this.selectionMode = "none", this.calciteCardGroupSelect = createEvent({ cancelable: false }), this.listen("calciteInternalCardKeyEvent", this.calciteInternalCardKeyEventListener), this.listen("calciteCardSelect", this.calciteCardSelectListener);
  }
  // #endregion
  // #region Public Methods
  /** Sets focus on the component's first focusable element. */
  async setFocus() {
    await this.componentOnReady(), this.disabled || tt(this.items[0]);
  }
  willUpdate(e) {
    e.has("selectionMode") && this.hasUpdated && this.updateItemsOnSelectionModeChange();
  }
  updated() {
    m(this);
  }
  loaded() {
    this.updateSelectedItems();
  }
  // #endregion
  // #region Private Methods
  calciteInternalCardKeyEventListener(e) {
    if (e.composedPath().includes(this.el)) {
      const s = this.items.filter((t) => !t.disabled);
      switch (e.detail.key) {
        case "ArrowRight":
          xt(s, e.target, "next");
          break;
        case "ArrowLeft":
          xt(s, e.target, "previous");
          break;
        case "Home":
          xt(s, e.target, "first");
          break;
        case "End":
          xt(s, e.target, "last");
          break;
      }
    }
  }
  calciteCardSelectListener(e) {
    e.composedPath().includes(this.el) && !e.target.selectable && this.setSelectedItems(true, e.target);
  }
  updateItemsOnSelectionModeChange() {
    this.updateSlottedItems(this.slotRefEl.value), this.updateSelectedItems();
  }
  updateItemsOnSlotChange(e) {
    this.updateSlottedItems(e.target), this.updateSelectedItems();
  }
  updateSlottedItems(e) {
    this.items = e.assignedElements({ flatten: true }).filter((s) => s == null ? void 0 : s.matches("calcite-card"));
  }
  updateSelectedItems() {
    this.items.forEach((e) => {
      e.selectionMode = this.selectionMode;
    }), this.setSelectedItems(false);
  }
  setSelectedItems(e, s) {
    s && this.items.forEach((t) => {
      const a = s === t;
      switch (this.selectionMode) {
        case "multiple":
          a && (t.selected = !t.selected);
          break;
        case "single":
          t.selected = a ? !t.selected : false;
          break;
        case "single-persist":
          t.selected = !!a;
          break;
      }
    }), this.selectedItems = this.items.filter((t) => t.selected), e && this.selectionMode !== "none" && !this.disabled && this.calciteCardGroupSelect.emit();
  }
  // #endregion
  // #region Rendering
  render() {
    const e = this.selectionMode === "none" || this.selectionMode === "multiple" ? "group" : "radiogroup";
    return p({ disabled: this.disabled, children: html`<div .ariaLabel=${this.label} class="container" .role=${e}><slot @slotchange=${this.updateItemsOnSlotChange} ${ref(this.slotRefEl)}></slot></div>` });
  }
};
_b.properties = { disabled: 7, label: 1, selectedItems: 0, selectionMode: 3 };
_b.styles = f;
var b = _b;
S("calcite-card-group", b);
export {
  b as CardGroup
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-card-group/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-ME3KJSOQ.js.map
