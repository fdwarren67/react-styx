import {
  m
} from "./chunk-2GIEDWQ6.js";
import {
  s
} from "./chunk-RZAGQ6CT.js";
import {
  mt,
  tt,
  ut,
  xt
} from "./chunk-VQ5234AM.js";
import "./chunk-PXZ2RU65.js";
import "./chunk-S3EVYUV4.js";
import {
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  css,
  html,
  useWatchAttributes
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-menu/customElement.js
var d = css`:host{display:flex}ul{margin:0;display:inline-flex;block-size:100%;align-items:center;padding:0}:host([layout=vertical]) ul{display:flex;inline-size:100%;flex-direction:column}:host([hidden]){display:none}[hidden]{display:none}`;
var _y = class _y extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.attributeWatch = useWatchAttributes(["role"], this.handleGlobalAttributesChanged), this.menuItems = [], this.layout = "horizontal", this.messages = s(), this.listen("calciteInternalMenuItemKeyEvent", this.calciteInternalNavMenuItemKeyEvent);
  }
  // #endregion
  // #region Public Methods
  /** Sets focus on the component's first focusable element. */
  async setFocus() {
    await m(this), mt(this.menuItems[0]);
  }
  willUpdate(e) {
    e.has("layout") && (this.hasUpdated || this.layout !== "horizontal") && this.setMenuItemLayout(this.menuItems, this.layout);
  }
  // #endregion
  // #region Private Methods
  handleGlobalAttributesChanged() {
    this.requestUpdate(), this.setMenuItemLayout(this.menuItems, this.layout);
  }
  calciteInternalNavMenuItemKeyEvent(e) {
    const t = e.target, s2 = e.detail.children, i = e.detail.event.key;
    e.stopPropagation(), i === "ArrowDown" ? t.layout === "vertical" ? xt(this.menuItems, t, "next", false) : e.detail.isSubmenuOpen && s2[0].setFocus() : i === "ArrowUp" ? this.layout === "vertical" ? xt(this.menuItems, t, "previous", false) : e.detail.isSubmenuOpen && s2[s2.length - 1].setFocus() : i === "ArrowRight" ? this.layout === "horizontal" ? xt(this.menuItems, t, "next", false) : e.detail.isSubmenuOpen && s2[0].setFocus() : i === "ArrowLeft" ? this.layout === "horizontal" ? xt(this.menuItems, t, "previous", false) : e.detail.isSubmenuOpen && this.focusParentElement(e.target) : i === "Escape" && this.focusParentElement(e.target), e.preventDefault();
  }
  handleMenuSlotChange(e) {
    this.menuItems = ut(e), this.setMenuItemLayout(this.menuItems, this.layout);
  }
  focusParentElement(e) {
    const t = e.parentElement;
    t && (tt(t), t.open = false);
  }
  setMenuItemLayout(e, t) {
    e.forEach((s2) => {
      s2.layout = t, this.getEffectiveRole() === "menubar" && (s2.isTopLevelItem = true, s2.topLevelMenuLayout = this.layout);
    });
  }
  getEffectiveRole() {
    return this.el.role || "menubar";
  }
  // #endregion
  // #region Rendering
  render() {
    return html`<ul .ariaLabel=${this.label} .role=${this.getEffectiveRole()}><slot @slotchange=${this.handleMenuSlotChange}></slot></ul>`;
  }
};
_y.properties = { label: 1, layout: 3, messageOverrides: 0 };
_y.shadowRootOptions = { mode: "open", delegatesFocus: true };
_y.styles = d;
var y = _y;
S("calcite-menu", y);
export {
  y as Menu
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-menu/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-WA7JKDDC.js.map
