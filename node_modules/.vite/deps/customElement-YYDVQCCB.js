import {
  m as m2
} from "./chunk-DPQ7TENX.js";
import {
  m
} from "./chunk-2GIEDWQ6.js";
import {
  b
} from "./chunk-6JIDXA46.js";
import {
  mt
} from "./chunk-VQ5234AM.js";
import "./chunk-PXZ2RU65.js";
import "./chunk-S3EVYUV4.js";
import {
  S
} from "./chunk-B7E2AREE.js";
import {
  LitElement,
  createEvent,
  css,
  html,
  safeClassMap,
  stringOrBoolean
} from "./chunk-MALSDV7D.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@esri/calcite-components/dist/components/calcite-radio-button-group/customElement.js
var p = {
  itemWrapper: "item-wrapper"
};
var s = {
  validationMessage: "radioButtonGroupValidationMessage"
};
var m3 = css`:host{display:flex;flex-direction:column}:host>.item-wrapper{display:flex;max-inline-size:100vw}:host([layout=horizontal])>.item-wrapper{flex-direction:row;flex-wrap:wrap}:host([layout=horizontal][scale=s])>.item-wrapper{column-gap:1rem}:host([layout=horizontal][scale=m])>.item-wrapper{column-gap:1.25rem}:host([layout=horizontal][scale=l])>.item-wrapper{column-gap:1.5rem}:host([layout=vertical])>.item-wrapper{flex-direction:column;inline-size:fit-content}:host([scale=s]) calcite-input-message{--calcite-input-message-spacing-value: calc(var(--calcite-spacing-xxs) * -1)}:host([scale=m]) calcite-input-message{--calcite-input-message-spacing-value: calc(var(--calcite-spacing-sm) * -1)}:host([scale=l]) calcite-input-message{--calcite-input-message-spacing-value: calc(var(--calcite-spacing-md) * -1)}.validation-container{display:flex;flex-direction:column;align-items:flex-start;align-self:stretch}:host([scale=m]) .validation-container,:host([scale=l]) .validation-container{padding-block-start:.5rem}:host([scale=s]) .validation-container{padding-block-start:.25rem}:host([hidden]){display:none}[hidden]{display:none}`;
var _g = class _g extends LitElement {
  // #endregion
  // #region Lifecycle
  constructor() {
    super(), this.mutationObserver = b("mutation", () => this.passPropsToRadioButtons()), this.radioButtons = [], this.disabled = false, this.layout = "horizontal", this.required = false, this.scale = "m", this.selectedItem = null, this.status = "idle", this.calciteRadioButtonGroupChange = createEvent({ cancelable: false }), this.listen("calciteRadioButtonChange", this.radioButtonChangeHandler);
  }
  // #endregion
  // #region Public Methods
  /** Sets focus on the fist focusable `calcite-radio-button` element in the component. */
  async setFocus() {
    await m(this), this.selectedItem && !this.selectedItem.disabled && mt(this.selectedItem), this.radioButtons.length > 0 && mt(this.getFocusableRadioButton());
  }
  connectedCallback() {
    var _a;
    super.connectedCallback(), this.passPropsToRadioButtons(), (_a = this.mutationObserver) == null ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  willUpdate(t) {
    (t.has("disabled") && (this.hasUpdated || this.disabled !== false) || t.has("layout") && (this.hasUpdated || this.layout !== "horizontal") || t.has("scale") && (this.hasUpdated || this.scale !== "m")) && this.passPropsToRadioButtons();
  }
  loaded() {
    this.passPropsToRadioButtons();
  }
  disconnectedCallback() {
    var _a;
    super.disconnectedCallback(), (_a = this.mutationObserver) == null ? void 0 : _a.disconnect();
  }
  // #endregion
  // #region Private Methods
  passPropsToRadioButtons() {
    this.radioButtons = Array.from(this.el.querySelectorAll("calcite-radio-button")), this.selectedItem = Array.from(this.radioButtons).reverse().find((t) => t.checked) || null, this.radioButtons.length > 0 && this.radioButtons.forEach((t) => {
      this.hasUpdated && (t.disabled = this.disabled || t.disabled), t.name = this.name, t.required = this.required, t.scale = this.scale;
    });
  }
  getFocusableRadioButton() {
    return this.radioButtons.find((t) => !t.disabled) ?? null;
  }
  radioButtonChangeHandler(t) {
    this.selectedItem = t.target, this.calciteRadioButtonGroupChange.emit();
  }
  // #endregion
  // #region Rendering
  render() {
    return this.el.role = "radiogroup", html`<div aria-errormessage=${s.validationMessage} .ariaInvalid=${this.status === "invalid"} class=${safeClassMap(p.itemWrapper)}><slot></slot></div>${this.validationMessage && this.status === "invalid" ? m2({ icon: this.validationIcon, id: s.validationMessage, message: this.validationMessage, scale: this.scale, status: this.status }) : null}`;
  }
};
_g.properties = { radioButtons: 16, disabled: 7, layout: 3, name: 3, required: 7, scale: 3, selectedItem: 0, status: 3, validationIcon: [3, { converter: stringOrBoolean }], validationMessage: 1 };
_g.styles = m3;
var g = _g;
S("calcite-radio-button-group", g);
export {
  g as RadioButtonGroup
};
/*! Bundled license information:

@esri/calcite-components/dist/components/calcite-radio-button-group/customElement.js:
  (*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
  See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
  v3.1.0 *)
*/
//# sourceMappingURL=customElement-YYDVQCCB.js.map
