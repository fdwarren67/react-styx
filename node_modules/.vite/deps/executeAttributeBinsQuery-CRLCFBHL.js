import {
  c as c2
} from "./chunk-IFOJEJLA.js";
import {
  T
} from "./chunk-I2SHMCYI.js";
import {
  t
} from "./chunk-WX3BOMD3.js";
import "./chunk-YYDDGFL6.js";
import "./chunk-SNZZPKBU.js";
import "./chunk-LMQPVKGX.js";
import {
  R
} from "./chunk-VT63JL2L.js";
import "./chunk-WJNJ43ZU.js";
import "./chunk-MIW7M4LL.js";
import {
  f
} from "./chunk-6W3XFTHW.js";
import "./chunk-6EREU4EG.js";
import "./chunk-VIBOZNXV.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-LILYILCM.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-BLF64HON.js";
import "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import {
  v
} from "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import {
  c,
  s
} from "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import {
  P2 as P
} from "./chunk-BECTSF5P.js";
import {
  I,
  V
} from "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import "./chunk-VTWDBFQT.js";
import "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/rest/query/operations/queryAttributeBins.js
function l(t2) {
  const e = t2.geometry, i2 = t2.toJSON(), r = i2;
  let u, l2, a2;
  if (null != e && (l2 = e.spatialReference, a2 = c(l2), r.geometryType = v(e), r.geometry = JSON.stringify(e), r.inSR = a2), i2.outSR ? (r.outSR = c(i2.outSR), u = t2.outSpatialReference) : e && (r.outSR = r.inSR, u = l2), r.bin && (r.bin = JSON.stringify(r.bin)), r.quantizationParameters && (r.quantizationParameters = JSON.stringify(r.quantizationParameters)), r.outStatistics && (r.outStatistics = JSON.stringify(r.outStatistics)), r.outTimeReference && (r.outTimeReference = JSON.stringify(r.outTimeReference)), i2.timeExtent) {
    const t3 = i2.timeExtent, { start: e2, end: n } = t3;
    null == e2 && null == n || (r.time = e2 === n ? e2 : `${e2 ?? "null"},${n ?? "null"}`), delete i2.timeExtent;
  }
  return t2.defaultSpatialReference && s(l2, u) && (r.defaultSR = r.inSR, delete r.inSR, delete r.outSR), r;
}
async function a(t2, e, i2) {
  return null != e.timeExtent && e.timeExtent.isEmpty ? { data: { features: [] } } : await m(t2, e, i2);
}
async function m(n, o, s2 = {}) {
  const a2 = "string" == typeof n ? I(n) : n, m2 = o.geometry ? [o.geometry] : [], f2 = await R(m2, null, { signal: s2.signal }), y = f2 == null ? void 0 : f2[0];
  null != y && ((o = o.clone()).geometry = y);
  const p = t({ ...a2.query, f: "json", ...l(o) });
  return P(V(a2.path, "queryBins"), { ...s2, query: { ...p, ...s2.query } });
}

// node_modules/@arcgis/core/rest/query/executeAttributeBinsQuery.js
async function i(i2, s2, u) {
  const { data: m2 } = await a(f(i2), T.from(s2), u);
  return c2.fromJSON(m2);
}
export {
  i as executeAttributeBinsQuery
};
//# sourceMappingURL=executeAttributeBinsQuery-CRLCFBHL.js.map
