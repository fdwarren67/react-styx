import {
  p as p2
} from "./chunk-775A6HBK.js";
import {
  l
} from "./chunk-OCIUEMMN.js";
import {
  l as l2
} from "./chunk-U7CVGTND.js";
import {
  t as t2
} from "./chunk-FB5BJKHD.js";
import {
  B as B2,
  E,
  F,
  L,
  N,
  R,
  R2,
  a as a3,
  a2 as a4,
  b,
  c,
  e as e2,
  j,
  k,
  p,
  q as q2
} from "./chunk-RLWOKM2I.js";
import {
  O,
  u
} from "./chunk-UG3EUN5I.js";
import "./chunk-SBJM3JDU.js";
import {
  D as D2
} from "./chunk-LGNRFQCT.js";
import "./chunk-57SJLVFV.js";
import {
  C
} from "./chunk-IT5UV5VM.js";
import {
  B,
  Be,
  G,
  H,
  Ne,
  P as P3,
  Q,
  Ze,
  _e,
  be,
  ee,
  ne,
  oe,
  q,
  re,
  te,
  ye
} from "./chunk-TZ3DYYYB.js";
import {
  s as s2,
  x
} from "./chunk-6ZDD4C2B.js";
import {
  t
} from "./chunk-LFIFTYRG.js";
import "./chunk-C5SNRHNJ.js";
import "./chunk-6PQMUQJV.js";
import "./chunk-JDUGBJ57.js";
import "./chunk-3HA4XA2C.js";
import "./chunk-H2OC77GP.js";
import "./chunk-RDHJUEBL.js";
import {
  D
} from "./chunk-B2CK3GCY.js";
import "./chunk-NINPG5JV.js";
import {
  a as a2,
  r as r4
} from "./chunk-S54EEJCS.js";
import {
  f,
  i,
  s as s3
} from "./chunk-6W3XFTHW.js";
import {
  Ye
} from "./chunk-HPA5LQSZ.js";
import "./chunk-3SU7BOQG.js";
import "./chunk-JED5CITL.js";
import "./chunk-TRBU6WLM.js";
import "./chunk-XBF3Q5CM.js";
import "./chunk-BSQH3I7W.js";
import "./chunk-PHUXOQ5V.js";
import "./chunk-7LZ547RY.js";
import "./chunk-3XDQGJHT.js";
import "./chunk-BMOULVP4.js";
import "./chunk-LVHCS2TZ.js";
import "./chunk-YSZGPB5I.js";
import "./chunk-5GYWQFHA.js";
import "./chunk-MR2DYNTG.js";
import "./chunk-65Z5LAMC.js";
import "./chunk-IFZYBBFM.js";
import "./chunk-WYOFTVUU.js";
import "./chunk-S4AV6MOI.js";
import "./chunk-QOBHQZYU.js";
import "./chunk-CKW4LZG2.js";
import "./chunk-VYOLHG4T.js";
import "./chunk-TKEIF3N7.js";
import "./chunk-RMOE6XHW.js";
import "./chunk-QAXPIBME.js";
import "./chunk-ISRSQJQR.js";
import "./chunk-WOB72RZU.js";
import "./chunk-HKTC3ZVY.js";
import "./chunk-MQ3WYGQ2.js";
import "./chunk-S4QLDBOB.js";
import "./chunk-RTA3XNM7.js";
import "./chunk-NUJWMWJZ.js";
import "./chunk-5ZCYRESW.js";
import "./chunk-XZDT5RTS.js";
import "./chunk-QAP2FVP7.js";
import "./chunk-6EREU4EG.js";
import "./chunk-7DHQ2VMC.js";
import "./chunk-Z5UGTZ3C.js";
import "./chunk-ZXHHBJMH.js";
import "./chunk-5JWPKXQI.js";
import "./chunk-4GBYHIKO.js";
import "./chunk-ZDLUQDDX.js";
import "./chunk-XAZEJYKE.js";
import "./chunk-62KPTW4J.js";
import "./chunk-UCDQUN5K.js";
import "./chunk-OQEC2EUK.js";
import "./chunk-RP6IGXYU.js";
import "./chunk-5T3XQRJL.js";
import "./chunk-MRPAGZVF.js";
import "./chunk-VIBOZNXV.js";
import "./chunk-NBXBK3QW.js";
import "./chunk-K5B7AETB.js";
import "./chunk-KLCKQJVO.js";
import "./chunk-5APVNM2E.js";
import "./chunk-73NNNHMH.js";
import "./chunk-C6YDI6QX.js";
import "./chunk-DJ5HVIE7.js";
import "./chunk-KPY4ZIC2.js";
import "./chunk-HGWPGAUL.js";
import "./chunk-V3IZNRFE.js";
import "./chunk-D7XVYH42.js";
import "./chunk-HAYP5DZM.js";
import "./chunk-OMNXYZNG.js";
import "./chunk-WO43UGNC.js";
import "./chunk-GPMU6IW4.js";
import "./chunk-LTFI343D.js";
import "./chunk-FVMWI3UB.js";
import "./chunk-4JVIG75S.js";
import "./chunk-HZLSEOMW.js";
import "./chunk-L2AVI4MN.js";
import {
  y
} from "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-BBPRJCMB.js";
import "./chunk-7VGCZZPH.js";
import "./chunk-4GYBOMKF.js";
import "./chunk-PMTDIWAP.js";
import "./chunk-ACBQ6NOA.js";
import "./chunk-QW7P5D76.js";
import "./chunk-RO66CZDO.js";
import "./chunk-KMVZXZBR.js";
import "./chunk-7HSZJLYU.js";
import "./chunk-BMGYJDE7.js";
import "./chunk-WHOXQQMB.js";
import "./chunk-YQH3DXBZ.js";
import "./chunk-T52X5K2I.js";
import "./chunk-VE2K63DA.js";
import "./chunk-5E5JYM5A.js";
import "./chunk-GSNLF6RP.js";
import "./chunk-SVWZAOD7.js";
import "./chunk-4ANUERFT.js";
import "./chunk-C33DSFWF.js";
import "./chunk-MILRZFWI.js";
import "./chunk-RPPIM555.js";
import "./chunk-4FQDWSFN.js";
import "./chunk-JOQ2ZFQV.js";
import "./chunk-3UBDE4PK.js";
import "./chunk-LILYILCM.js";
import "./chunk-WBBL3X3F.js";
import "./chunk-OJGPUKVG.js";
import "./chunk-GFEMKR2U.js";
import "./chunk-G2OXL5Y3.js";
import "./chunk-B6ORYDBK.js";
import {
  b as b2
} from "./chunk-BLF64HON.js";
import "./chunk-I3JB2EVB.js";
import "./chunk-TCV7UF6X.js";
import "./chunk-BMNRD4FO.js";
import "./chunk-W7QCICS6.js";
import "./chunk-AYLNWVVJ.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-ZSBMFGDQ.js";
import "./chunk-NAGFHISJ.js";
import "./chunk-QCS4ZI2R.js";
import "./chunk-2SOWSOAE.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-SPVEONZ2.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import {
  m as m2
} from "./chunk-3ODJ3YKN.js";
import {
  e,
  o as o3,
  r as r3
} from "./chunk-P6IUM5K3.js";
import "./chunk-KGTLNUPW.js";
import "./chunk-GY7XU54K.js";
import "./chunk-P4D4HTH2.js";
import {
  C as C2
} from "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import "./chunk-UKY33OJN.js";
import "./chunk-HAWCNM3C.js";
import "./chunk-BQYXRSVC.js";
import "./chunk-BJEQ2APY.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-GTN3PVPB.js";
import "./chunk-BF5PIC2K.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-FZPO5AYT.js";
import "./chunk-5VM3BO4P.js";
import "./chunk-EYUJRAXJ.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import {
  P as P2
} from "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import {
  o as o2
} from "./chunk-FSFEOCO5.js";
import {
  r as r2
} from "./chunk-ZVIMKAJW.js";
import {
  o
} from "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import {
  P2 as P
} from "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import {
  S as S2
} from "./chunk-2FUEBHWI.js";
import {
  m,
  s
} from "./chunk-VTWDBFQT.js";
import {
  a2 as a
} from "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import {
  S
} from "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import {
  r
} from "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import {
  h
} from "./chunk-7LCEUMDD.js";
import {
  n2 as n
} from "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/networks/support/typeUtils.js
var t3;
!function(n3) {
  n3[n3.RTJunctionJunctionConnectivity = 1] = "RTJunctionJunctionConnectivity", n3[n3.RTContainment = 2] = "RTContainment", n3[n3.RTAttachment = 3] = "RTAttachment", n3[n3.RTJunctionEdgeConnectivity = 4] = "RTJunctionEdgeConnectivity", n3[n3.RTEdgeJunctionEdgeConnectivity = 5] = "RTEdgeJunctionEdgeConnectivity";
}(t3 || (t3 = {}));
var o4 = new o({ connected: "connected", upstream: "upstream", downstream: "downstream", shortestPath: "shortest-path", subnetwork: "subnetwork", subnetworkController: "subnetwork-controller", loops: "loops", isolation: "isolation" });
var i2 = new o({ junctionJunctionConnectivity: "junction-junction-connectivity", connectivity: "connectivity", attachment: "attachment", containment: "containment", junctionEdgeFromConnectivity: "junction-edge-from-connectivity", junctionEdgeMidspanConnectivity: "junction-edge-midspan-connectivity", junctionEdgeToConnectivity: "junction-edge-to-connectivity" });
var c2 = new o({ normal: "normal", rebuild: "rebuild", forceRebuild: "force-rebuild" });

// node_modules/@arcgis/core/rest/networks/support/Association.js
var p3 = class extends S2 {
  constructor(o5) {
    super(o5), this.globalId = null, this.associationType = null, this.fromNetworkElement = null, this.toNetworkElement = null, this.geometry = null, this.errorMessage = null, this.percentAlong = null, this.errorCode = null, this.isContentVisible = null, this.status = null;
  }
  readFromNetworkElement(o5, e3) {
    return new p2({ globalId: e3.fromGlobalId, networkSourceId: e3.fromNetworkSourceId, terminalId: e3.fromTerminalId });
  }
  writeFromNetworkElement(o5, e3) {
    o5 && (e3.fromGlobalId = o5.globalId, e3.fromNetworkSourceId = o5.networkSourceId, e3.fromTerminalId = o5.terminalId);
  }
  readToNetworkElement(o5, e3) {
    return new p2({ globalId: e3.toGlobalId, networkSourceId: e3.toNetworkSourceId, terminalId: e3.toTerminalId });
  }
  writeToNetworkElement(o5, e3) {
    o5 && (e3.toGlobalId = o5.globalId, e3.toNetworkSourceId = o5.networkSourceId, e3.toTerminalId = o5.terminalId);
  }
};
r([m({ type: String, json: { write: true } })], p3.prototype, "globalId", void 0), r([m({ type: i2.apiValues, json: { type: i2.jsonValues, read: i2.read, write: i2.write } })], p3.prototype, "associationType", void 0), r([m({ type: p2, json: { write: { target: { fromGlobalId: { type: String }, fromNetworkSourceId: { type: Number }, fromTerminalId: { type: Number } } }, read: { source: ["fromGlobalId", "fromNetworkSourceId", "fromTerminalId"] } } })], p3.prototype, "fromNetworkElement", void 0), r([o2("fromNetworkElement")], p3.prototype, "readFromNetworkElement", null), r([r2("fromNetworkElement")], p3.prototype, "writeFromNetworkElement", null), r([m({ type: p2, json: { write: { target: { toGlobalId: { type: String }, toNetworkSourceId: { type: Number }, toTerminalId: { type: Number } } }, read: { source: ["toGlobalId", "toNetworkSourceId", "toTerminalId"] } } })], p3.prototype, "toNetworkElement", void 0), r([o2("toNetworkElement")], p3.prototype, "readToNetworkElement", null), r([r2("toNetworkElement")], p3.prototype, "writeToNetworkElement", null), r([m({ type: P2, json: { write: true } })], p3.prototype, "geometry", void 0), r([m({ type: String, json: { write: true } })], p3.prototype, "errorMessage", void 0), r([m({ type: Number, json: { write: true } })], p3.prototype, "percentAlong", void 0), r([m({ type: Number, json: { write: true } })], p3.prototype, "errorCode", void 0), r([m({ type: Boolean, json: { write: true } })], p3.prototype, "isContentVisible", void 0), r([m({ type: Number, json: { write: true } })], p3.prototype, "status", void 0), p3 = r([a("esri.rest.networks.support.Association")], p3);
var d = p3;

// node_modules/@arcgis/core/rest/networks/support/QueryAssociationsResult.js
var p4 = class extends S2 {
  constructor(o5) {
    super(o5), this.associations = [];
  }
};
r([m({ type: [d], json: { write: true } })], p4.prototype, "associations", void 0), p4 = r([a("esri.rest.networks.support.QueryAssociationsResult")], p4);
var c3 = p4;

// node_modules/@arcgis/core/rest/networks/queryAssociations.js
function a5(e3) {
  const { returnDeletes: t4, elements: r5, gdbVersion: s4, moment: n3 } = e3.toJSON();
  return { returnDeletes: t4, elements: JSON.stringify(r5.map((e4) => ({ globalId: e4.globalId, networkSourceId: e4.networkSourceId, terminalId: e4.terminalId }))), types: JSON.stringify(e3.types.map((e4) => i2.toJSON(e4))).replaceAll('"connectivity"', '"junctionJunctionConnectivity"'), gdbVersion: s4, moment: n3 };
}
async function p5(o5, p6, m4) {
  const u2 = f(o5), l3 = { ...a5(p6), f: "json" }, y2 = s3({ ...u2.query, ...l3 }), d2 = i(y2, { ...m4, method: "post" }), f2 = `${u2.path}/associations/query`, { data: g } = await P(f2, d2), j2 = c3.fromJSON(g);
  return p6.types.includes("connectivity") && s(n.getLogger("esri/rest/networks/support/QueryAssociationsParameters"), "types", { replacement: "Please use 'junction-junction-connectivity' instead of 'connectivity'.", see: "https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-QueryAssociationsParameters.html#types", version: "4.29", warnOnce: true }), j2;
}

// node_modules/@arcgis/core/rest/networks/support/QueryAssociationsParameters.js
var m3;
var n2 = m3 = class extends S2 {
  static from(e3) {
    return h(m3, e3);
  }
  constructor(e3) {
    super(e3), this.returnDeletes = false, this.elements = [], this.types = [], this.gdbVersion = null, this.moment = null;
  }
};
r([m({ type: Boolean, json: { write: true } })], n2.prototype, "returnDeletes", void 0), r([m({ type: [p2], json: { write: true } })], n2.prototype, "elements", void 0), r([m({ type: [i2.apiValues], json: { type: i2.jsonValues, read: i2.read, write: i2.write } })], n2.prototype, "types", void 0), r([m({ type: String, json: { write: true } })], n2.prototype, "gdbVersion", void 0), r([m({ type: Date, json: { type: Number, write: { writer: (e3, t4) => {
  t4.moment = e3 == null ? void 0 : e3.getTime();
} } } })], n2.prototype, "moment", void 0), n2 = m3 = r([a("esri.rest.networks.support.QueryAssociationsParameters")], n2);
var a6 = n2;

// node_modules/@arcgis/core/arcade/functions/featuresetbase.js
function ae(e3) {
  if (1 === e3.length) {
    if (o3(e3[0])) return l("distinct", e3[0], -1);
    if (ee(e3[0])) return l("distinct", e3[0].toArray(), -1);
  }
  return l("distinct", e3, -1);
}
function re2(e3, t4, n3) {
  const i3 = e3.getVariables();
  if (i3.length > 0) {
    const a7 = {};
    for (const e4 of i3) a7[e4] = t4.evaluateIdentifier(n3, { name: e4 });
    e3.parameters = a7;
  }
  return e3;
}
function oe2(e3, t4, n3 = null) {
  for (const i3 in e3) if (i3.toLowerCase() === t4.toLowerCase()) return e3[i3];
  return n3;
}
function se(e3) {
  if (null === e3) return null;
  const t4 = { type: oe2(e3, "type", ""), name: oe2(e3, "name", "") };
  if ("range" === t4.type) t4.range = oe2(e3, "range", []);
  else {
    t4.codedValues = [];
    for (const n3 of oe2(e3, "codedValues", [])) t4.codedValues.push({ name: oe2(n3, "name", ""), code: oe2(n3, "code", null) });
  }
  return t4;
}
function le(e3) {
  if (null === e3) return null;
  const t4 = {}, n3 = oe2(e3, "wkt");
  null !== n3 && (t4.wkt = n3);
  const i3 = oe2(e3, "wkid");
  return null !== i3 && (t4.wkid = i3), t4;
}
function fe(e3) {
  if (null === e3) return null;
  const t4 = { hasZ: oe2(e3, "hasz", false), hasM: oe2(e3, "hasm", false) }, n3 = oe2(e3, "spatialreference");
  null != n3 && (t4.spatialReference = le(n3));
  const i3 = oe2(e3, "x", null);
  if (null !== i3) return t4.x = i3, t4.y = oe2(e3, "y", null), t4.hasZ && (t4.z = oe2(e3, "z", null)), t4.hasM && (t4.m = oe2(e3, "m", null)), t4;
  const a7 = oe2(e3, "rings", null);
  if (null !== a7) return t4.rings = a7, t4;
  const r5 = oe2(e3, "paths", null);
  if (null !== r5) return t4.paths = r5, t4;
  const o5 = oe2(e3, "points", null);
  if (null !== o5) return t4.points = o5, t4;
  for (const s4 of ["xmin", "xmax", "ymin", "ymax", "zmin", "zmax", "mmin", "mmax"]) {
    const n4 = oe2(e3, s4, null);
    null !== n4 && (t4[s4] = n4);
  }
  return t4;
}
function de(e3, t4) {
  for (const n3 of t4) if (n3 === e3) return true;
  return false;
}
function ue(e3) {
  return !!e3.layerDefinition && (!!e3.featureSet && (false !== de(e3.layerDefinition.geometryType, ["", null, "esriGeometryNull", "esriGeometryPoint", "esriGeometryPolyline", "esriGeometryPolygon", "esriGeometryMultipoint", "esriGeometryEnvelope"]) && (false !== o3(e3.layerDefinition.fields) && false !== o3(e3.featureSet.features))));
}
function ce(e3) {
  return "utc" === (e3 == null ? void 0 : e3.toLowerCase()) ? "UTC" : "unknown" === (e3 == null ? void 0 : e3.toLowerCase()) ? "Unknown" : e3;
}
async function me(t4, n3, i3, o5, s4, l3, d2) {
  var _a, _b, _c;
  const u2 = await t4.getFeatureSetInfo();
  if (null === ((u2 == null ? void 0 : u2.layerId) ?? null)) return null;
  if (!s4.layerIdLookup.get(u2.layerId)) return null;
  const c4 = t4.serviceUrl().replace(/\/FeatureServer/i, "/UtilityNetworkServer"), m4 = [];
  switch (i3) {
    case "connected":
      m4.push("connectivity"), m4.push("junction-edge-from-connectivity"), m4.push("junction-edge-to-connectivity"), m4.push("junction-edge-midspan-connectivity"), m4.push("junction-junction-connectivity");
      break;
    case "container":
    case "content":
      m4.push("containment");
      break;
    case "structure":
    case "attached":
      m4.push("attachment");
      break;
    case "junctionedge":
      m4.push("junction-edge-from-connectivity"), m4.push("junction-edge-to-connectivity");
      break;
    case "midspan":
      m4.push("junction-edge-midspan-connectivity");
      break;
    default:
      throw new a2(l3, r4.InvalidParameter, d2);
  }
  let p6 = null, y2 = false;
  if (null !== o5 && "" !== o5 && void 0 !== o5) {
    for (const e3 of s4.terminals) e3.terminalName === o5 && (p6 = e3.terminalId);
    null === p6 && (y2 = true);
  }
  const w = [];
  if (!y2) {
    const a7 = new p2({ globalId: n3.field(t4.globalIdField), networkSourceId: s4.layerIdLookup.get(u2.layerId).sourceId, ...p6 ? { terminalId: p6 } : "" }), r5 = await p5(c4, new a6({ types: m4, elements: [a7] }));
    let o6 = 0;
    for (const t5 of r5.associations) {
      let n4 = null, r6 = "", l4 = "";
      if (((_a = t5.fromNetworkElement) == null ? void 0 : _a.globalId) === a7.globalId ? (n4 = t5.toNetworkElement, l4 = "to") : ((_b = t5.toNetworkElement) == null ? void 0 : _b.globalId) === a7.globalId && (n4 = t5.fromNetworkElement, l4 = "from"), !n4) continue;
      switch (i3) {
        case "attached":
          if ("attachment" !== t5.associationType) continue;
          if ("to" !== l4) continue;
          break;
        case "structure":
          if ("attachment" !== t5.associationType) continue;
          if ("from" !== l4) continue;
          break;
        case "container":
          if ("containment" !== t5.associationType) continue;
          if ("from" !== l4) continue;
          break;
        case "content":
          if ("containment" !== t5.associationType) continue;
          if ("to" !== l4) continue;
          break;
        case "connected":
          break;
        case "junctionedge":
          "junction-edge-to-connectivity" === t5.associationType ? r6 = "to" : "junction-edge-from-connectivity" === t5.associationType && (r6 = "from");
          break;
        case "midspan":
          if ("junction-edge-midspan-connectivity" !== t5.associationType) continue;
      }
      const f2 = ((_c = s4.sourceIdLookup.get(n4.networkSourceId)) == null ? void 0 : _c.className) ?? "";
      w.push(new b2({ geometry: null, attributes: { objectId: o6++, globalId: n4.globalId, percentAlong: t5.percentAlong ?? 0, isContentVisible: t5.isContentVisible ? 0 : 1, className: f2, side: r6 } }));
    }
  }
  const h2 = new Ye({ source: w, geometryType: null, objectIdField: "objectId", globalIdField: "globalId", fields: [new y({ name: "objectId", alias: "objectId", type: "oid" }), new y({ name: "globalId", alias: "globalId", type: "global-id" }), new y({ name: "percentAlong", alias: "percentAlong", type: "double" }), new y({ name: "side", alias: "side", type: "string" }), new y({ name: "isContentVisible", alias: "isContentVisible", type: "integer" }), new y({ name: "className", alias: "className", type: "string" })] });
  return N(h2);
}
function pe(e3) {
  "async" === e3.mode && (e3.functions.timezone = function(n3, o5) {
    return e3.standardFunctionAsync(n3, o5, async (e4, s4, l3) => {
      var _a, _b;
      if (oe(l3, 1, 2, n3, o5), re(l3[0])) return "Unknown";
      if (ne(l3[0])) return "Unknown";
      if (B(l3[0])) {
        if (await l3[0].load(), 1 === l3.length || null === l3[1]) return l3[0].datesInUnknownTimezone ? ce("unknown") : ce(l3[0].dateFieldsTimeZone);
        if (!(l3[1] instanceof C) || false === l3[1].hasField("type")) throw new a2(n3, r4.InvalidParameter, o5);
        const e5 = l3[1].field("type");
        if (false === e(e5)) throw new a2(n3, r4.InvalidParameter, o5);
        switch (ye(e5).toLowerCase()) {
          case "preferredtimezone":
            return ce(l3[0].preferredTimeZone);
          case "editfieldsinfo":
            return ce(((_a = l3[0].editFieldsInfo) == null ? void 0 : _a.timeZone) ?? null);
          case "timeinfo":
            return ce(((_b = l3[0].timeInfo) == null ? void 0 : _b.timeZone) ?? null);
          case "field":
            if (l3[1].hasField("fieldname") && e(l3[1].field("fieldname"))) return ce(l3[0].fieldTimeZone(ye(l3[1].field("fieldname"))));
        }
        throw new a2(n3, r4.InvalidParameter, o5);
      }
      const f2 = Ne(l3[0], Be(n3));
      if (null === f2) return null;
      const d2 = f2.timeZone;
      return "system" === d2 ? m2.systemTimeZoneCanonicalName : "utc" === d2.toLowerCase() ? "UTC" : "unknown" === d2.toLowerCase() ? "Unknown" : d2;
    });
  }, e3.functions.sqltimestamp = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      oe(o5, 1, 3, t4, n3);
      const s4 = o5[0];
      if (te(s4)) {
        if (1 === o5.length) return s4.toSQLWithKeyword();
        if (2 === o5.length) return s4.changeTimeZone(ye(o5[1])).toSQLWithKeyword();
        throw new a2(t4, r4.InvalidParameter, n3);
      }
      if (ne(s4)) return s4.toSQLWithKeyword();
      if (B(s4)) {
        if (3 !== o5.length) throw new a2(t4, r4.InvalidParameter, n3);
        await s4.load();
        const e5 = ye(o5[1]);
        if (ne(o5[2])) return o5[2].toSQLWithKeyword();
        if (false === te(o5[2])) throw new a2(t4, r4.InvalidParameter, n3);
        const i4 = s4.fieldTimeZone(e5);
        return null == i4 ? o5[2].toSQLWithKeyword() : o5[2].changeTimeZone(i4).toSQLWithKeyword();
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "sqltimestamp", min: 2, max: 4 }), e3.functions.featuresetbyid = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, (e4, i3, o5) => {
      if (oe(o5, 2, 4, t4, n3), Q(o5[0])) {
        const e5 = ye(o5[1]);
        let i4 = q(o5[2], null);
        const s4 = Ze(q(o5[3], true));
        if (null === i4 && (i4 = ["*"]), false === o3(i4)) throw new a2(t4, r4.InvalidParameter, n3);
        return o5[0].featureSetById(e5, s4, i4);
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "featuresetbyid", min: 2, max: 4 }), e3.functions.getfeatureset = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      if (oe(o5, 1, 2, t4, n3), H(o5[0])) {
        let e5 = q(o5[1], "datasource");
        return null === e5 && (e5 = "datasource"), e5 = ye(e5).toLowerCase(), R2(o5[0].fullSchema(), e5, t4.lrucache, t4.interceptor, t4.spatialReference ?? null);
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "getfeatureset", min: 1, max: 2 }), e3.functions.featuresetbyportalitem = function(t4, i3) {
    return e3.standardFunctionAsync(t4, i3, (e4, o5, s4) => {
      var _a, _b;
      if (oe(s4, 2, 5, t4, i3), null === s4[0]) throw new a2(t4, r4.PortalRequired, i3);
      if (s4[0] instanceof t2) {
        const e5 = ye(s4[1]), n3 = ye(s4[2]);
        let o6 = q(s4[3], null);
        const f3 = Ze(q(s4[4], true));
        if (null === o6 && (o6 = ["*"]), false === o3(o6)) throw new a2(t4, r4.InvalidParameter, i3);
        let d3;
        return d3 = ((_a = t4.services) == null ? void 0 : _a.portal) ? t4.services.portal : C2.getDefault(), d3 = l2(s4[0], d3), q2(e5, n3, t4.spatialReference ?? null, o6, f3, d3, t4.lrucache, t4.interceptor);
      }
      if (false === e(s4[0])) throw new a2(t4, r4.PortalRequired, i3);
      const f2 = ye(s4[0]), d2 = ye(s4[1]);
      let u2 = q(s4[2], null);
      const c4 = Ze(q(s4[3], true));
      if (null === u2 && (u2 = ["*"]), false === o3(u2)) throw new a2(t4, r4.InvalidParameter, i3);
      return q2(f2, d2, t4.spatialReference ?? null, u2, c4, ((_b = t4.services) == null ? void 0 : _b.portal) ?? C2.getDefault(), t4.lrucache, t4.interceptor);
    });
  }, e3.signatures.push({ name: "featuresetbyportalitem", min: 2, max: 5 }), e3.functions.featuresetbyname = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, (e4, i3, o5) => {
      if (oe(o5, 2, 4, t4, n3), Q(o5[0])) {
        const e5 = ye(o5[1]);
        let i4 = q(o5[2], null);
        const s4 = Ze(q(o5[3], true));
        if (null === i4 && (i4 = ["*"]), false === o3(i4)) throw new a2(t4, r4.InvalidParameter, n3);
        return o5[0].featureSetByName(e5, s4, i4);
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "featuresetbyname", min: 2, max: 4 }), e3.functions.featureset = function(t4, n3) {
    return e3.standardFunction(t4, n3, (e4, o5, s4) => {
      oe(s4, 1, 1, t4, n3);
      const l3 = { layerDefinition: { geometryType: "", objectIdField: "", globalIdField: "", typeIdField: "", hasM: false, hasZ: false, fields: [] }, featureSet: { geometryType: "", features: [] } };
      if (e(s4[0])) {
        const e5 = JSON.parse(s4[0]);
        void 0 !== e5.layerDefinition ? (l3.layerDefinition = e5.layerDefinition, l3.featureSet = e5.featureSet, e5.layerDefinition.spatialReference && (l3.layerDefinition.spatialReference = e5.layerDefinition.spatialReference)) : (l3.featureSet.features = e5.features, l3.featureSet.geometryType = e5.geometryType, l3.layerDefinition.geometryType = l3.featureSet.geometryType, l3.layerDefinition.objectIdField = e5.objectIdFieldName ?? "", l3.layerDefinition.typeIdField = e5.typeIdFieldName, l3.layerDefinition.globalIdField = e5.globalIdFieldName, l3.layerDefinition.fields = e5.fields, e5.spatialReference && (l3.layerDefinition.spatialReference = e5.spatialReference));
      } else {
        if (!(s4[0] instanceof C)) throw new a2(t4, r4.InvalidParameter, n3);
        {
          const e5 = JSON.parse(s4[0].castToText(true)), i3 = oe2(e5, "layerdefinition");
          if (null !== i3) {
            l3.layerDefinition.geometryType = oe2(i3, "geometrytype", ""), l3.featureSet.geometryType = l3.layerDefinition.geometryType, l3.layerDefinition.globalIdField = oe2(i3, "globalidfield", ""), l3.layerDefinition.objectIdField = oe2(i3, "objectidfield", ""), l3.layerDefinition.typeIdField = oe2(i3, "typeidfield", ""), l3.layerDefinition.hasZ = true === oe2(i3, "hasz", false), l3.layerDefinition.hasM = true === oe2(i3, "hasm", false);
            const t5 = oe2(i3, "spatialreference");
            t5 && (l3.layerDefinition.spatialReference = le(t5));
            const n4 = [];
            for (const e6 of oe2(i3, "fields", [])) {
              const t6 = { name: oe2(e6, "name", ""), alias: oe2(e6, "alias", ""), type: oe2(e6, "type", ""), nullable: oe2(e6, "nullable", true), editable: oe2(e6, "editable", true), length: oe2(e6, "length", null), domain: se(oe2(e6, "domain")) };
              n4.push(t6);
            }
            l3.layerDefinition.fields = n4;
            const a7 = oe2(e5, "featureset");
            if (a7) {
              const e6 = {};
              for (const t6 of n4) e6[t6.name.toLowerCase()] = t6.name;
              for (const t6 of oe2(a7, "features", [])) {
                const n5 = {}, i4 = oe2(t6, "attributes", {});
                for (const t7 in i4) n5[e6[t7.toLowerCase()]] = i4[t7];
                l3.featureSet.features.push({ attributes: n5, geometry: fe(oe2(t6, "geometry")) });
              }
            }
          } else {
            l3.layerDefinition.hasZ = true === oe2(e5, "hasz", false), l3.layerDefinition.hasM = true === oe2(e5, "hasm", false), l3.layerDefinition.geometryType = oe2(e5, "geometrytype", ""), l3.featureSet.geometryType = l3.layerDefinition.geometryType, l3.layerDefinition.objectIdField = oe2(e5, "objectidfieldname", ""), l3.layerDefinition.typeIdField = oe2(e5, "typeidfieldname", "");
            const i4 = oe2(e5, "spatialreference");
            i4 && (l3.layerDefinition.spatialReference = le(i4));
            const o6 = [], s5 = oe2(e5, "fields", null);
            if (!o3(s5)) throw new a2(t4, r4.InvalidParameter, n3);
            for (const e6 of s5) {
              const t5 = { name: oe2(e6, "name", ""), alias: oe2(e6, "alias", ""), type: oe2(e6, "type", ""), nullable: oe2(e6, "nullable", true), editable: oe2(e6, "editable", true), length: oe2(e6, "length", null), domain: se(oe2(e6, "domain")) };
              o6.push(t5);
            }
            l3.layerDefinition.fields = o6;
            const f2 = {};
            for (const e6 of o6) f2[e6.name.toLowerCase()] = e6.name;
            let d2 = oe2(e5, "features", null);
            if (o3(d2)) for (const e6 of d2) {
              const t5 = {}, n4 = oe2(e6, "attributes", {});
              for (const e7 in n4) t5[f2[e7.toLowerCase()]] = n4[e7];
              l3.featureSet.features.push({ attributes: t5, geometry: fe(oe2(e6, "geometry", null)) });
            }
            else d2 = null, l3.featureSet.features = d2;
          }
        }
      }
      if (false === ue(l3)) throw new a2(t4, r4.InvalidParameter, n3);
      return l3.layerDefinition.geometryType || (l3.layerDefinition.geometryType = "esriGeometryNull"), p.create(l3, t4.spatialReference);
    });
  }, e3.signatures.push({ name: "featureset", min: 1, max: 1 }), e3.functions.filter = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (i3, o5, s4) => {
      if (oe(s4, 2, 2, t4, n3), o3(s4[0]) || ee(s4[0])) {
        const e4 = [];
        let i4, o6 = s4[0];
        if (o6 instanceof t && (o6 = o6.toArray()), !G(s4[1])) throw new a2(t4, r4.InvalidParameter, n3);
        i4 = s4[1].createFunction(t4);
        for (const t5 of o6) {
          const n4 = i4(t5);
          S(n4) ? true === await n4 && e4.push(t5) : true === n4 && e4.push(t5);
        }
        return e4;
      }
      if (B(s4[0])) {
        const n4 = await s4[0].load(), i4 = D.create(s4[1], { fieldsIndex: n4.getFieldsIndex(), timeZone: n4.dateFieldsTimeZoneDefaultUTC }), a7 = i4.getVariables();
        if (a7.length > 0) {
          const n5 = {};
          for (const i5 of a7) n5[i5] = e3.evaluateIdentifier(t4, { name: i5 });
          i4.parameters = n5;
        }
        return new c({ parentfeatureset: s4[0], whereclause: i4 });
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "filter", min: 2, max: 2 }), e3.functions.orderby = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      if (oe(o5, 2, 2, t4, n3), B(o5[0])) {
        const e5 = new e2(o5[1]);
        return new a3({ parentfeatureset: o5[0], orderbyclause: e5 });
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "orderby", min: 2, max: 2 }), e3.functions.top = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      if (oe(o5, 2, 2, t4, n3), B(o5[0])) return new a4({ parentfeatureset: o5[0], topnum: o5[1] });
      if (o3(o5[0])) return be(o5[1]) >= o5[0].length ? o5[0].slice() : o5[0].slice(0, be(o5[1]));
      if (ee(o5[0])) return be(o5[1]) >= o5[0].length() ? o5[0].slice() : o5[0].slice(0, be(o5[1]));
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "top", min: 2, max: 2 }), e3.functions.first = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, a7) => {
      if (oe(a7, 1, 1, t4, n3), B(a7[0])) {
        const n4 = await a7[0].first(e4.abortSignal);
        if (null !== n4) {
          const e5 = D2.createFromGraphicLikeObject(n4.geometry, n4.attributes, a7[0], t4.timeZone);
          return e5._underlyingGraphic = n4, e5;
        }
        return n4;
      }
      return o3(a7[0]) ? 0 === a7[0].length ? null : a7[0][0] : ee(a7[0]) ? 0 === a7[0].length() ? null : a7[0].get(0) : null;
    });
  }, e3.signatures.push({ name: "first", min: 1, max: 1 }), e3.functions.attachments = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, o5, s4) => {
      oe(s4, 1, 2, t4, n3);
      const l3 = { minsize: -1, maxsize: -1, types: null, returnMetadata: false };
      if (s4.length > 1) {
        if (s4[1] instanceof C) {
          if (s4[1].hasField("minsize") && (l3.minsize = be(s4[1].field("minsize"))), s4[1].hasField("metadata") && (l3.returnMetadata = Ze(s4[1].field("metadata"))), s4[1].hasField("maxsize") && (l3.maxsize = be(s4[1].field("maxsize"))), s4[1].hasField("types")) {
            const e5 = _e(s4[1].field("types"), false);
            e5.length > 0 && (l3.types = e5);
          }
        } else if (null !== s4[1]) throw new a2(t4, r4.InvalidParameter, n3);
      }
      if (H(s4[0])) {
        const e5 = s4[0]._layer;
        let n4;
        if (B(e5)) n4 = e5;
        else {
          if (null == e5 || !x(e5)) return [];
          n4 = N(e5, t4.spatialReference, ["*"], true, t4.lrucache, t4.interceptor);
        }
        return await n4.load(), n4.queryAttachments(s4[0].field(n4.objectIdField), l3.minsize, l3.maxsize, l3.types, l3.returnMetadata);
      }
      if (null === s4[0]) return [];
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "attachments", min: 1, max: 2 }), e3.functions.featuresetbyrelationshipname = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      oe(o5, 2, 4, t4, n3);
      const s4 = o5[0], l3 = ye(o5[1]);
      let c4 = q(o5[2], null);
      const m4 = Ze(q(o5[3], true));
      if (null === c4 && (c4 = ["*"]), false === o3(c4)) throw new a2(t4, r4.InvalidParameter, n3);
      if (null === o5[0]) return null;
      if (!H(o5[0])) throw new a2(t4, r4.InvalidParameter, n3);
      const y2 = s4._layer;
      let w;
      if (B(y2)) w = y2;
      else {
        if (null == y2 || !x(y2)) return null;
        w = N(y2, t4.spatialReference, ["*"], true, t4.lrucache, t4.interceptor);
      }
      w = await w.load();
      const g = w.relationshipMetaData().filter((e5) => e5.name === l3);
      if (0 === g.length) return null;
      if (void 0 !== g[0].relationshipTableId && null !== g[0].relationshipTableId && g[0].relationshipTableId > -1) return j(w, g[0], s4.field(w.objectIdField), w.spatialReference, c4, m4, t4.lrucache, t4.interceptor);
      let F2 = w.serviceUrl();
      if (!F2) return null;
      F2 = "/" === F2.charAt(F2.length - 1) ? F2 + g[0].relatedTableId.toString() : F2 + "/" + g[0].relatedTableId.toString();
      const b3 = await F(F2, w.spatialReference, c4, m4, t4.lrucache, t4.interceptor);
      await b3.load();
      let T = b3.relationshipMetaData();
      if (T = T.filter((e5) => e5.id === g[0].id), false === s4.hasField(g[0].keyField) || null === s4.field(g[0].keyField)) {
        const e5 = await w.getFeatureByObjectId(s4.field(w.objectIdField), [g[0].keyField]);
        if (e5) {
          const t5 = D.create(T[0].keyField + "= @id", { fieldsIndex: b3.getFieldsIndex(), timeZone: b3.dateFieldsTimeZoneDefaultUTC });
          return t5.parameters = { id: e5.attributes[g[0].keyField] }, b3.filter(t5);
        }
        return new u({ parentfeatureset: b3 });
      }
      const N2 = D.create(T[0].keyField + "= @id", { fieldsIndex: b3.getFieldsIndex(), timeZone: b3.dateFieldsTimeZoneDefaultUTC });
      return N2.parameters = { id: s4.field(g[0].keyField) }, b3.filter(N2);
    });
  }, e3.signatures.push({ name: "featuresetbyrelationshipname", min: 2, max: 4 }), e3.functions.featuresetbyassociation = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      oe(o5, 2, 3, t4, n3);
      const s4 = o5[0], l3 = ye(q(o5[1], "")).toLowerCase(), d2 = e(o5[2]) ? ye(o5[2]) : null;
      if (null === o5[0]) return null;
      if (!H(o5[0])) throw new a2(t4, r4.InvalidParameter, n3);
      let u2 = s4._layer;
      if (u2 instanceof Ye && (u2 = N(u2, t4.spatialReference, ["*"], true, t4.lrucache, t4.interceptor)), null === u2) return null;
      if (false === B(u2)) return null;
      await u2.load();
      const m4 = u2.serviceUrl(), y2 = await E(m4, t4.spatialReference, true);
      if (y2.unVersion >= 8) return await me(u2, s4, l3, d2, y2, t4, n3);
      const w = y2.associations;
      let g = null, F2 = null, b3 = false;
      if (null !== d2 && "" !== d2 && void 0 !== d2) {
        for (const e5 of y2.terminals) e5.terminalName === d2 && (F2 = e5.terminalId);
        null === F2 && (b3 = true);
      }
      const T = w.getFieldsIndex(), x2 = T.get("TOGLOBALID").name, N2 = T.get("FROMGLOBALID").name, A = T.get("TOTERMINALID").name, v = T.get("FROMTERMINALID").name, S3 = T.get("FROMNETWORKSOURCEID").name, j2 = T.get("TONETWORKSOURCEID").name, U = T.get("ASSOCIATIONTYPE").name, M = T.get("ISCONTENTVISIBLE").name, R3 = T.get("OBJECTID").name;
      for (const t5 of u2.fields) if ("global-id" === t5.type) {
        g = s4.field(t5.name);
        break;
      }
      let O2 = null, z = new L(new y({ name: "percentalong", alias: "percentalong", type: "double" }), D.create("0", { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC })), W = new L(new y({ name: "side", alias: "side", type: "string" }), D.create("''", { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC }));
      const H2 = "globalid", V = "globalId", _ = {};
      for (const t5 in y2.lkp) _[t5] = y2.lkp[t5].sourceId;
      const K = new B2(new y({ name: "classname", alias: "classname", type: "string" }), null, _);
      let J = "";
      switch (l3) {
        case "midspan": {
          J = `((${x2}='${g}') OR ( ${N2}='${g}')) AND (${U} IN (5))`, K.codefield = D.create(`CASE WHEN (${x2}='${g}') THEN ${S3} ELSE ${j2} END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC });
          const e5 = s2(R.findField(w.fields, N2));
          e5.name = H2, e5.alias = H2, O2 = new L(e5, D.create(`CASE WHEN (${N2}='${g}') THEN ${x2} ELSE ${N2} END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC })), z = y2.unVersion >= 4 ? new k(R.findField(w.fields, T.get("PERCENTALONG").name)) : new L(new y({ name: "percentalong", alias: "percentalong", type: "double" }), D.create("0", { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC }));
          break;
        }
        case "junctionedge": {
          J = `((${x2}='${g}') OR ( ${N2}='${g}')) AND (${U} IN (4,6))`, K.codefield = D.create(`CASE WHEN (${x2}='${g}') THEN ${S3} ELSE ${j2} END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC });
          const e5 = s2(R.findField(w.fields, N2));
          e5.name = H2, e5.alias = H2, O2 = new L(e5, D.create(`CASE WHEN (${N2}='${g}') THEN ${x2} ELSE ${N2} END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC })), W = new L(new y({ name: "side", alias: "side", type: "string" }), D.create(`CASE WHEN (${U}=4) THEN 'from' ELSE 'to' END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC }));
          break;
        }
        case "connected": {
          let e5 = `${x2}='@T'`, t5 = `${N2}='@T'`;
          null !== F2 && (e5 += ` AND ${A}=@A`, t5 += ` AND ${v}=@A`), J = "((" + e5 + ") OR (" + t5 + "))", J = P3(J, "@T", g ?? ""), e5 = P3(e5, "@T", g ?? ""), null !== F2 && (e5 = P3(e5, "@A", F2.toString()), J = P3(J, "@A", F2.toString())), K.codefield = D.create("CASE WHEN " + e5 + ` THEN ${S3} ELSE ${j2} END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC });
          const n4 = s2(R.findField(w.fields, N2));
          n4.name = H2, n4.alias = H2, O2 = new L(n4, D.create("CASE WHEN " + e5 + ` THEN ${N2} ELSE ${x2} END`, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC }));
          break;
        }
        case "container":
          J = `${x2}='${g}' AND ${U} = 2`, null !== F2 && (J += ` AND ${A} = ` + F2.toString()), K.codefield = S3, J = "( " + J + " )", O2 = new b(R.findField(w.fields, N2), H2, H2);
          break;
        case "content":
          J = `(${N2}='${g}' AND ${U} = 2)`, null !== F2 && (J += ` AND ${v} = ` + F2.toString()), K.codefield = j2, J = "( " + J + " )", O2 = new b(R.findField(w.fields, x2), H2, H2);
          break;
        case "structure":
          J = `(${x2}='${g}' AND ${U} = 3)`, null !== F2 && (J += ` AND ${A} = ` + F2.toString()), K.codefield = S3, J = "( " + J + " )", O2 = new b(R.findField(w.fields, N2), H2, V);
          break;
        case "attached":
          J = `(${N2}='${g}' AND ${U} = 3)`, null !== F2 && (J += ` AND ${v} = ` + F2.toString()), K.codefield = j2, J = "( " + J + " )", O2 = new b(R.findField(w.fields, x2), H2, V);
          break;
        default:
          throw new a2(t4, r4.InvalidParameter, n3);
      }
      b3 && (J = "1 <> 1");
      return new R({ parentfeatureset: w, adaptedFields: [new k(R.findField(w.fields, R3)), new k(R.findField(w.fields, M)), O2, W, K, z], extraFilter: J ? D.create(J, { fieldsIndex: w.getFieldsIndex(), timeZone: w.dateFieldsTimeZoneDefaultUTC }) : null });
    });
  }, e3.signatures.push({ name: "featuresetbyassociation", min: 2, max: 6 }), e3.functions.groupby = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (o5, s4, l3) => {
      if (oe(l3, 3, 3, t4, n3), !B(l3[0])) throw new a2(t4, r4.InvalidParameter, n3);
      const f2 = await l3[0].load(), d2 = [], u2 = [];
      let c4 = false, m4 = [];
      if (e(l3[1])) m4.push(l3[1]);
      else if (l3[1] instanceof C) m4.push(l3[1]);
      else if (o3(l3[1])) m4 = l3[1];
      else {
        if (!ee(l3[1])) throw new a2(t4, r4.InvalidParameter, n3);
        m4 = l3[1].toArray();
      }
      for (const e4 of m4) if (e(e4)) {
        const t5 = D.create(ye(e4), { fieldsIndex: f2.getFieldsIndex(), timeZone: f2.dateFieldsTimeZoneDefaultUTC }), n4 = true === O(t5) ? ye(e4) : "%%%%FIELDNAME";
        d2.push({ name: n4, expression: t5 }), "%%%%FIELDNAME" === n4 && (c4 = true);
      } else {
        if (!(e4 instanceof C)) throw new a2(t4, r4.InvalidParameter, n3);
        {
          const i3 = e4.hasField("name") ? e4.field("name") : "%%%%FIELDNAME", o6 = e4.hasField("expression") ? e4.field("expression") : "";
          if ("%%%%FIELDNAME" === i3 && (c4 = true), !i3) throw new a2(t4, r4.InvalidParameter, n3);
          d2.push({ name: i3, expression: D.create(o6 || i3, { fieldsIndex: f2.getFieldsIndex(), timeZone: f2.dateFieldsTimeZoneDefaultUTC }) });
        }
      }
      if (m4 = [], e(l3[2])) m4.push(l3[2]);
      else if (o3(l3[2])) m4 = l3[2];
      else if (ee(l3[2])) m4 = l3[2].toArray();
      else {
        if (!(l3[2] instanceof C)) throw new a2(t4, r4.InvalidParameter, n3);
        m4.push(l3[2]);
      }
      for (const e4 of m4) {
        if (!(e4 instanceof C)) throw new a2(t4, r4.InvalidParameter, n3);
        {
          const i3 = e4.hasField("name") ? e4.field("name") : "", o6 = e4.hasField("statistic") ? e4.field("statistic") : "", s5 = e4.hasField("expression") ? e4.field("expression") : "";
          if (!i3 || !o6 || !s5) throw new a2(t4, r4.InvalidParameter, n3);
          u2.push({ name: i3, statistic: o6.toLowerCase(), expression: D.create(s5, { fieldsIndex: f2.getFieldsIndex(), timeZone: f2.dateFieldsTimeZoneDefaultUTC }) });
        }
      }
      if (c4) {
        const e4 = {};
        for (const n4 of f2.fields) e4[n4.name.toLowerCase()] = 1;
        for (const n4 of d2) "%%%%FIELDNAME" !== n4.name && (e4[n4.name.toLowerCase()] = 1);
        for (const n4 of u2) "%%%%FIELDNAME" !== n4.name && (e4[n4.name.toLowerCase()] = 1);
        let t5 = 0;
        for (const n4 of d2) if ("%%%%FIELDNAME" === n4.name) {
          for (; 1 === e4["field_" + t5.toString()]; ) t5++;
          e4["field_" + t5.toString()] = 1, n4.name = "FIELD_" + t5.toString();
        }
      }
      for (const n4 of d2) re2(n4.expression, e3, t4);
      for (const n4 of u2) re2(n4.expression, e3, t4);
      return l3[0].groupby(d2, u2);
    });
  }, e3.signatures.push({ name: "groupby", min: 3, max: 3 }), e3.functions.distinct = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (o5, s4, l3) => {
      if (B(l3[0])) {
        oe(l3, 2, 2, t4, n3);
        const o6 = await l3[0].load(), s5 = [];
        let f2 = [];
        if (e(l3[1])) f2.push(l3[1]);
        else if (l3[1] instanceof C) f2.push(l3[1]);
        else if (o3(l3[1])) f2 = l3[1];
        else {
          if (!ee(l3[1])) throw new a2(t4, r4.InvalidParameter, n3);
          f2 = l3[1].toArray();
        }
        let d2 = false;
        for (const e4 of f2) if (e(e4)) {
          const t5 = D.create(ye(e4), { fieldsIndex: o6.getFieldsIndex(), timeZone: o6.dateFieldsTimeZoneDefaultUTC }), n4 = true === O(t5) ? ye(e4) : "%%%%FIELDNAME";
          s5.push({ name: n4, expression: t5 }), "%%%%FIELDNAME" === n4 && (d2 = true);
        } else {
          if (!(e4 instanceof C)) throw new a2(t4, r4.InvalidParameter, n3);
          {
            const i3 = e4.hasField("name") ? e4.field("name") : "%%%%FIELDNAME", l4 = e4.hasField("expression") ? e4.field("expression") : "";
            if ("%%%%FIELDNAME" === i3 && (d2 = true), !i3) throw new a2(t4, r4.InvalidParameter, n3);
            s5.push({ name: i3, expression: D.create(l4 || i3, { fieldsIndex: o6.getFieldsIndex(), timeZone: o6.dateFieldsTimeZoneDefaultUTC }) });
          }
        }
        if (d2) {
          const e4 = {};
          for (const n4 of o6.fields) e4[n4.name.toLowerCase()] = 1;
          for (const n4 of s5) "%%%%FIELDNAME" !== n4.name && (e4[n4.name.toLowerCase()] = 1);
          let t5 = 0;
          for (const n4 of s5) if ("%%%%FIELDNAME" === n4.name) {
            for (; 1 === e4["field_" + t5.toString()]; ) t5++;
            e4["field_" + t5.toString()] = 1, n4.name = "FIELD_" + t5.toString();
          }
        }
        for (const n4 of s5) re2(n4.expression, e3, t4);
        return l3[0].groupby(s5, []);
      }
      return ae(l3);
    });
  }, e3.functions.getfeaturesetinfo = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, a7, r5) => {
      if (oe(r5, 1, 1, t4, n3), !B(r5[0])) return null;
      const o5 = await r5[0].getFeatureSetInfo();
      return o5 ? C.convertObjectToArcadeDictionary({ layerId: o5.layerId, layerName: o5.layerName, itemId: o5.itemId, serviceLayerUrl: o5.serviceLayerUrl, webMapLayerId: o5.webMapLayerId ?? null, webMapLayerTitle: o5.webMapLayerTitle ?? null, className: null, objectClassId: null }, Be(t4), false, false) : null;
    });
  }, e3.signatures.push({ name: "getfeaturesetinfo", min: 1, max: 1 }), e3.functions.filterbysubtypecode = function(t4, n3) {
    return e3.standardFunctionAsync(t4, n3, async (e4, i3, o5) => {
      if (oe(o5, 2, 2, t4, n3), B(o5[0])) {
        const e5 = await o5[0].load(), i4 = o5[1];
        if (!r3(i4)) throw new a2(t4, r4.InvalidParameter, n3);
        if (e5.subtypeField) {
          const t5 = D.create(`${e5.subtypeField}= ${o5[1]}`, { fieldsIndex: e5.getFieldsIndex(), timeZone: e5.dateFieldsTimeZoneDefaultUTC });
          return new c({ parentfeatureset: o5[0], whereclause: t5 });
        }
        if (null === e5.typeIdField || "" === e5.typeIdField) throw new a2(t4, r4.FeatureSetDoesNotHaveSubtypes, n3);
        const s4 = D.create(`${e5.typeIdField}= ${o5[1]}`, { fieldsIndex: e5.getFieldsIndex(), timeZone: e5.dateFieldsTimeZoneDefaultUTC });
        return new c({ parentfeatureset: o5[0], whereclause: s4 });
      }
      throw new a2(t4, r4.InvalidParameter, n3);
    });
  }, e3.signatures.push({ name: "filterbysubtypecode", min: 2, max: 2 }));
}
export {
  pe as registerFunctions
};
//# sourceMappingURL=featuresetbase-63UHUMRT.js.map
