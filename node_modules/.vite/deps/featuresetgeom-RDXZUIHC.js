import {
  l,
  u
} from "./chunk-UG3EUN5I.js";
import "./chunk-LGNRFQCT.js";
import {
  a as a2
} from "./chunk-57SJLVFV.js";
import "./chunk-IT5UV5VM.js";
import {
  B,
  Fe,
  U,
  oe,
  ye
} from "./chunk-TZ3DYYYB.js";
import "./chunk-6ZDD4C2B.js";
import "./chunk-LFIFTYRG.js";
import "./chunk-C5SNRHNJ.js";
import "./chunk-6PQMUQJV.js";
import "./chunk-JDUGBJ57.js";
import "./chunk-3HA4XA2C.js";
import "./chunk-H2OC77GP.js";
import "./chunk-RDHJUEBL.js";
import "./chunk-B2CK3GCY.js";
import {
  n
} from "./chunk-NINPG5JV.js";
import {
  a,
  r
} from "./chunk-S54EEJCS.js";
import "./chunk-MRPAGZVF.js";
import "./chunk-LTFI343D.js";
import "./chunk-FVMWI3UB.js";
import "./chunk-4JHPTLMD.js";
import "./chunk-35I4PBUK.js";
import "./chunk-7VGCZZPH.js";
import "./chunk-PMTDIWAP.js";
import "./chunk-ACBQ6NOA.js";
import "./chunk-QW7P5D76.js";
import "./chunk-W7QCICS6.js";
import "./chunk-PQVKYMOX.js";
import "./chunk-DCSYHXZG.js";
import "./chunk-KSQSVLSQ.js";
import "./chunk-BMNDO4JW.js";
import "./chunk-RAVPBO4Z.js";
import "./chunk-PHADC6NW.js";
import "./chunk-3ODJ3YKN.js";
import "./chunk-P6IUM5K3.js";
import "./chunk-Q7TEBZSN.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-K7TZXQ7O.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import "./chunk-VTWDBFQT.js";
import "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/arcade/functions/featuresetgeom.js
function f(a3) {
  return async (f2, p2, S) => {
    if (oe(S, 2, 2, f2, p2), null === (S = Fe(S))[0] && null === S[1]) return false;
    if (B(S[0])) {
      if (U(S[1])) return new l({ parentfeatureset: S[0], relation: a3, relationGeom: S[1] });
      if (null === S[1]) return new u({ parentfeatureset: S[0] });
      throw new a(f2, r.InvalidParameter, p2);
    }
    if (U(S[0])) {
      if (U(S[1])) {
        switch (a3) {
          case "esriSpatialRelEnvelopeIntersects": {
            const e = n(S[0]), t = n(S[1]);
            return null != e && null != t && a2("intersects", [e.toJSON(), t.toJSON()]);
          }
          case "esriSpatialRelIntersects":
            return a2("intersects", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelContains":
            return a2("contains", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelOverlaps":
            return a2("overlaps", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelWithin":
            return a2("within", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelTouches":
            return a2("touches", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelCrosses":
            return a2("crosses", [S[0].toJSON(), S[1].toJSON()]);
        }
        throw new a(f2, r.InvalidParameter, p2);
      }
      if (B(S[1])) return new l({ parentfeatureset: S[1], relation: a3, relationGeom: S[0] });
      if (null === S[1]) return false;
      throw new a(f2, r.InvalidParameter, p2);
    }
    if (null === S[0]) {
      if (B(S[1])) return new u({ parentfeatureset: S[1] });
      if (U(S[1]) || null === S[1]) return false;
    }
    throw new a(f2, r.InvalidParameter, p2);
  };
}
function p(n2) {
  "async" === n2.mode && (n2.functions.intersects = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelIntersects"));
  }, n2.functions.envelopeintersects = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelEnvelopeIntersects"));
  }, n2.signatures.push({ name: "envelopeintersects", min: 2, max: 2 }), n2.functions.contains = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelContains"));
  }, n2.functions.overlaps = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelOverlaps"));
  }, n2.functions.within = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelWithin"));
  }, n2.functions.touches = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelTouches"));
  }, n2.functions.crosses = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelCrosses"));
  }, n2.functions.relate = function(u2, f2) {
    return n2.standardFunctionAsync(u2, f2, async (n3, p2, S) => {
      if (S = Fe(S), oe(S, 3, 3, u2, f2), U(S[0]) && U(S[1])) return a2("relate", [S[0].toJSON(), S[1].toJSON(), ye(S[2])]);
      if (U(S[0]) && null === S[1]) return false;
      if (U(S[1]) && null === S[0]) return false;
      if (B(S[0]) && null === S[1]) return new u({ parentfeatureset: S[0] });
      if (B(S[1]) && null === S[0]) return new u({ parentfeatureset: S[1] });
      if (B(S[0]) && U(S[1])) return S[0].relate(S[1], ye(S[2]));
      if (B(S[1]) && U(S[0])) return S[1].relate(S[0], ye(S[2]));
      if (null === S[0] && null === S[1]) return false;
      throw new a(u2, r.InvalidParameter, f2);
    });
  });
}
export {
  p as registerFunctions
};
//# sourceMappingURL=featuresetgeom-RDXZUIHC.js.map
