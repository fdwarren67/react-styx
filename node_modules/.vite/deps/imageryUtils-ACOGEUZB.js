import {
  $,
  P
} from "./chunk-ZOGVP55P.js";
import "./chunk-5Y5NK5SR.js";
import "./chunk-SXBN3QCZ.js";
import "./chunk-XD7AJMUV.js";
import "./chunk-6TUECH7E.js";
import {
  E,
  a,
  l,
  u
} from "./chunk-5APVNM2E.js";
import "./chunk-ZQMORW2K.js";
import "./chunk-OGPRAWXS.js";
import "./chunk-EGSJQZXU.js";
import "./chunk-4GYBOMKF.js";
import "./chunk-GDR4JYWU.js";
import "./chunk-Y4AQXF4J.js";
import "./chunk-D3P3E2RE.js";
import "./chunk-WKNMEFRQ.js";
import "./chunk-CIALVDRG.js";
import "./chunk-N5E3DEQN.js";
import "./chunk-BDOGPNOY.js";
import "./chunk-552ZCNNH.js";
import "./chunk-XG7T2Y7N.js";
import "./chunk-SQOMDKJS.js";
import "./chunk-HB6TKF6E.js";
import "./chunk-OXPM753Y.js";
import "./chunk-N4U5VIP2.js";
import "./chunk-IVS2JCO6.js";
import "./chunk-4GOW35CM.js";
import "./chunk-TEJXT4W6.js";
import "./chunk-LW62SPEN.js";
import "./chunk-LSOJIRW6.js";
import "./chunk-FSFEOCO5.js";
import "./chunk-ZVIMKAJW.js";
import "./chunk-BIURGGHV.js";
import "./chunk-VSLEAHOZ.js";
import "./chunk-6K2FAOQG.js";
import "./chunk-N5DN7S3H.js";
import "./chunk-BECTSF5P.js";
import "./chunk-FX46DC27.js";
import "./chunk-2FUEBHWI.js";
import "./chunk-VTWDBFQT.js";
import "./chunk-BM4B3CH5.js";
import "./chunk-G2YC5GCV.js";
import "./chunk-GD5AHXAI.js";
import "./chunk-YWGYHRSH.js";
import "./chunk-DP2IAJQN.js";
import "./chunk-EAFC6V23.js";
import "./chunk-SMH2GUF6.js";
import "./chunk-AZP4AFW7.js";
import "./chunk-SCZRL2WP.js";
import "./chunk-OSHCNHH7.js";
import "./chunk-7LCEUMDD.js";
import "./chunk-6II7WQ2F.js";
import "./chunk-L7QO6TDW.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/@arcgis/core/layers/save/imageryUtils.js
var y = "Image Service";
var l2 = "imagery-layer-save";
var n = "imagery-layer-save-as";
var m = "imagery-tile-layer-save";
var o = "imagery-tile-layer-save-as";
var c = "WCS";
var p = "wcs-layer-save";
var u2 = "wcs-layer-save-as";
function g(e) {
  var _a;
  if ("imagery" === e.type || "wcs" === e.type) return { isValid: true };
  const { raster: t } = e, r = "Function" === (t == null ? void 0 : t.datasetFormat) ? (_a = t.primaryRasters) == null ? void 0 : _a.rasters[0] : t;
  return { isValid: "RasterTileServer" === (r == null ? void 0 : r.datasetFormat) && ("Raster" === r.tileType || "Map" === r.tileType), errorMessage: "imagery tile layer should be created from a tiled image service." };
}
function v(e) {
  const t = e.layerJSON;
  return Promise.resolve(t && Object.keys(t).length ? t : null);
}
async function f(e, t) {
  const { parsedUrl: y2, title: l3, fullExtent: n2 } = e;
  t.url = y2.path, t.title || (t.title = l3);
  try {
    t.extent = await l(n2);
  } catch {
    t.extent = void 0;
  }
  a(t, E.METADATA), u(t, E.TILED_IMAGERY, "imagery-tile" === e.type);
}
async function d(t, r) {
  const a2 = "imagery" === t.type ? l2 : "imagery-tile" === t.type ? m : p, s = "wcs" === t.type ? c : y;
  return P({ layer: t, itemType: s, validateLayer: g, createItemData: v, errorNamePrefix: a2 }, r);
}
async function I(e, r, a2) {
  const s = "imagery" === e.type ? n : "imagery-tile" === e.type ? o : u2, i = "wcs" === e.type ? c : y;
  return $({ layer: e, itemType: i, validateLayer: g, createItemData: v, errorNamePrefix: s, newItem: r, setItemProperties: f }, a2);
}
export {
  d as save,
  I as saveAs
};
//# sourceMappingURL=imageryUtils-ACOGEUZB.js.map
