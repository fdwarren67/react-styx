{
  "version": 3,
  "sources": ["../../timezone-groups/dist/groupByOffset/strategy/native/index.mjs"],
  "sourcesContent": ["class NativeDateEngine {\n    constructor() {\n        this._formatterCache = new Map();\n        this._commonDateTimeFormatterOptions = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            timeZoneName: 'shortOffset',\n        };\n    }\n    get name() {\n        return 'native';\n    }\n    create(date) {\n        return new Date(date);\n    }\n    increase(date) {\n        const oneDayInMs = 86400000;\n        return new Date(date.getTime() + oneDayInMs);\n    }\n    formatToIsoDateString(date) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return `${year}-${month.toString().padStart(2, '0')}-${day\n            .toString()\n            .padStart(2, '0')}`;\n    }\n    isoToTimeZone(isoDate, tz) {\n        const date = this._toDate(isoDate);\n        const formatter = this._getFormatter(tz);\n        const parts = formatter.formatToParts(date);\n        const [offset] = parts\n            .filter(({ type }) => type === 'timeZoneName')\n            .map(({ value }) => value);\n        const tzOffset = this._getTimeZoneOffsetInMins(offset);\n        const tzOffsetMinutes = date.getMinutes() - (date.getTimezoneOffset() - tzOffset);\n        date.setMinutes(tzOffsetMinutes);\n        return date;\n    }\n    same(date1, date2) {\n        return date1.getTime() === date2.getTime();\n    }\n    _toDate(isoDate) {\n        return new Date(isoDate);\n    }\n    _getFormatter(tz) {\n        // Workaround for https://issues.chromium.org/issues/381620359\n        if (tz === 'Factory') {\n            tz = 'Etc/GMT';\n        }\n        let formatter = this._formatterCache.get(tz);\n        if (!formatter) {\n            formatter = new Intl.DateTimeFormat('en-US', {\n                timeZone: tz,\n                ...this._commonDateTimeFormatterOptions,\n            });\n            this._formatterCache.set(tz, formatter);\n        }\n        return formatter;\n    }\n    _getTimeZoneOffsetInMins(gmtTimeZone) {\n        const [sign, ...hoursMinutes] = gmtTimeZone.slice(3);\n        const [hours, minutes] = hoursMinutes.join('').split(':');\n        const signMultiplier = sign === '+' ? 1 : -1;\n        return signMultiplier * (Number(hours) * 60 + Number(minutes || 0));\n    }\n}\n\nexport { NativeDateEngine as DateEngine };\n"],
  "mappings": ";;;AAAA,IAAM,mBAAN,MAAuB;AAAA,EACnB,cAAc;AACV,SAAK,kBAAkB,oBAAI,IAAI;AAC/B,SAAK,kCAAkC;AAAA,MACnC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,cAAc;AAAA,IAClB;AAAA,EACJ;AAAA,EACA,IAAI,OAAO;AACP,WAAO;AAAA,EACX;AAAA,EACA,OAAO,MAAM;AACT,WAAO,IAAI,KAAK,IAAI;AAAA,EACxB;AAAA,EACA,SAAS,MAAM;AACX,UAAM,aAAa;AACnB,WAAO,IAAI,KAAK,KAAK,QAAQ,IAAI,UAAU;AAAA,EAC/C;AAAA,EACA,sBAAsB,MAAM;AACxB,UAAM,OAAO,KAAK,YAAY;AAC9B,UAAM,QAAQ,KAAK,SAAS,IAAI;AAChC,UAAM,MAAM,KAAK,QAAQ;AACzB,WAAO,GAAG,IAAI,IAAI,MAAM,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IAAI,IAClD,SAAS,EACT,SAAS,GAAG,GAAG,CAAC;AAAA,EACzB;AAAA,EACA,cAAc,SAAS,IAAI;AACvB,UAAM,OAAO,KAAK,QAAQ,OAAO;AACjC,UAAM,YAAY,KAAK,cAAc,EAAE;AACvC,UAAM,QAAQ,UAAU,cAAc,IAAI;AAC1C,UAAM,CAAC,MAAM,IAAI,MACZ,OAAO,CAAC,EAAE,KAAK,MAAM,SAAS,cAAc,EAC5C,IAAI,CAAC,EAAE,MAAM,MAAM,KAAK;AAC7B,UAAM,WAAW,KAAK,yBAAyB,MAAM;AACrD,UAAM,kBAAkB,KAAK,WAAW,KAAK,KAAK,kBAAkB,IAAI;AACxE,SAAK,WAAW,eAAe;AAC/B,WAAO;AAAA,EACX;AAAA,EACA,KAAK,OAAO,OAAO;AACf,WAAO,MAAM,QAAQ,MAAM,MAAM,QAAQ;AAAA,EAC7C;AAAA,EACA,QAAQ,SAAS;AACb,WAAO,IAAI,KAAK,OAAO;AAAA,EAC3B;AAAA,EACA,cAAc,IAAI;AAEd,QAAI,OAAO,WAAW;AAClB,WAAK;AAAA,IACT;AACA,QAAI,YAAY,KAAK,gBAAgB,IAAI,EAAE;AAC3C,QAAI,CAAC,WAAW;AACZ,kBAAY,IAAI,KAAK,eAAe,SAAS;AAAA,QACzC,UAAU;AAAA,QACV,GAAG,KAAK;AAAA,MACZ,CAAC;AACD,WAAK,gBAAgB,IAAI,IAAI,SAAS;AAAA,IAC1C;AACA,WAAO;AAAA,EACX;AAAA,EACA,yBAAyB,aAAa;AAClC,UAAM,CAAC,MAAM,GAAG,YAAY,IAAI,YAAY,MAAM,CAAC;AACnD,UAAM,CAAC,OAAO,OAAO,IAAI,aAAa,KAAK,EAAE,EAAE,MAAM,GAAG;AACxD,UAAM,iBAAiB,SAAS,MAAM,IAAI;AAC1C,WAAO,kBAAkB,OAAO,KAAK,IAAI,KAAK,OAAO,WAAW,CAAC;AAAA,EACrE;AACJ;",
  "names": []
}
