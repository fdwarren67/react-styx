/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/components-controllers';
import { Nil } from '@arcgis/components-utils';
import { default as AreaMeasurement3D } from '@arcgis/core/widgets/AreaMeasurement3D.js';
import { PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useAreaMeasurement3dWidget: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<AreaMeasurement3D, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    state?: unknown;
    viewModel?: __esri.AreaMeasurement3DViewModel | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    position: __esri.UIPosition;
    arcgisReady: import('@arcgis/components-controllers').EventEmitter;
    arcgisPropertyChange: import('@arcgis/components-controllers').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.MapView | __esri.SceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.AreaMeasurement3DProperties | undefined): __esri.AreaMeasurement3DProperties | Promise<__esri.AreaMeasurement3DProperties | undefined> | undefined;
} | undefined) => AreaMeasurement3D;
/** AreaMeasurement3D component calculates and displays the area and perimeter of a polygon. This component can be used in a [SceneView](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html) to measure the area and perimeter of a polygon.
 */
export declare class ArcgisAreaMeasurement3d extends LitElement {
    readonly analysis: __esri.AreaMeasurementAnalysis;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     * Search [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/) for possible values.
     */
    icon: string;
    /** The component's default label. */
    label: string;
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    readonly state: "ready" | "disabled" | "measuring" | "measured";
    unit: __esri.SystemOrAreaUnit;
    unitOptions: __esri.SystemOrAreaUnit[];
    clear(): Promise<void>;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    start(): Promise<void>;
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state" | "analysis";
    }>;
    readonly arcgisReady: TargetedEvent<this, undefined>;
}
export {};
