/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/components-controllers';
import { Nil } from '@arcgis/components-utils';
import { default as Attachments } from '@arcgis/core/widgets/Attachments.js';
import { PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useAttachmentsWidget: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<Attachments, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    state?: unknown;
    viewModel?: __esri.AttachmentsViewModel | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    position: __esri.UIPosition;
    arcgisReady: import('@arcgis/components-controllers').EventEmitter;
    arcgisPropertyChange: import('@arcgis/components-controllers').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.MapView | __esri.SceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.AttachmentsProperties | undefined): __esri.AttachmentsProperties | Promise<__esri.AttachmentsProperties | undefined> | undefined;
} | undefined) => Attachments;
/**
 * @internal
 */
export declare class ArcgisAttachments extends LitElement {
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    capabilities: __esri.AttachmentsCapabilities;
    displayType: "auto" | "list" | "preview";
    graphic: nullish | __esri.Graphic;
    hideAddButton: boolean | undefined;
    hideAddSubmitButton: boolean | undefined;
    hideCancelAddButton: boolean | undefined;
    hideCancelUpdateButton: boolean | undefined;
    hideDeleteButton: boolean | undefined;
    hideErrorMessage: boolean | undefined;
    hideProgressBar: boolean | undefined;
    hideUpdateButton: boolean | undefined;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     * Search [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/) for possible values.
     */
    icon: string;
    /** The component's default label. */
    label: string | nullish;
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    readonly state: "ready" | "loading" | "disabled";
    readonly submitting: boolean;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state" | "submitting";
    }>;
    readonly arcgisReady: TargetedEvent<this, undefined>;
}
export {};
