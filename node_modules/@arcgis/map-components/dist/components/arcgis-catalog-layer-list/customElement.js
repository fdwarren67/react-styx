import { c as t } from "../../chunks/runtime.js";
import { usePropertyChange as e } from "@arcgis/components-controllers";
import { reEmitEvent as i } from "@arcgis/components-controllers/accessor";
import s from "@arcgis/core/widgets/CatalogLayerList.js";
import { LitElement as o, createEvent as a, noShadowRoot as l } from "@arcgis/lumina";
import { m as r } from "../../chunks/useWidget.js";
import { css as h } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.14 */
const d = h`@layer{arcgis-catalog-layer-list{display:block}}`, n = r(s);
class c extends o {
  constructor() {
    super(...arguments), this.widget = n(this), this.viewModel = this.widget.viewModel, this.autoDestroyDisabled = !1, this.catalogLayer = this.widget.catalogLayer, this.collapsed = this.widget.collapsed, this.filterPlaceholder = this.widget.filterPlaceholder, this.filterPredicate = this.widget.filterPredicate, this.filterText = this.widget.filterText, this.headingLevel = this.widget.headingLevel, this.hideFlow = this.widget.visibleElements.flow, this.hideStatusIndicators = this.widget.visibleElements.statusIndicators, this.icon = this.widget.icon, this.label = this.widget.label, this.listItemCreatedFunction = this.widget.listItemCreatedFunction, this.minFilterItems = this.widget.minFilterItems, this.position = "bottom-left", this.selectedItems = this.widget.selectedItems, this.selectionMode = this.widget.selectionMode, this.showCloseButton = this.widget.visibleElements.closeButton, this.showCollapseButton = this.widget.visibleElements.collapseButton, this.showErrors = this.widget.visibleElements.errors, this.showFilter = this.widget.visibleElements.filter, this.showHeading = this.widget.visibleElements.heading, this.showTemporaryLayerIndicators = this.widget.visibleElements.temporaryLayerIndicators, this.state = this.viewModel.state, this.visibilityAppearance = this.widget.visibilityAppearance, this.arcgisPropertyChange = e()("state"), this.arcgisReady = a(), this.arcgisTriggerAction = i(() => this.widget, "trigger-action");
  }
  static {
    this.properties = { autoDestroyDisabled: 5, catalogItems: 32, catalogLayer: 0, collapsed: 7, filterPlaceholder: 1, filterPredicate: 0, filterText: 1, headingLevel: 9, hideFlow: 5, hideStatusIndicators: 5, icon: 1, label: 1, listItemCreatedFunction: 0, minFilterItems: 9, position: 1, referenceElement: 1, selectedItems: 0, selectionMode: 1, showCloseButton: 5, showCollapseButton: 5, showErrors: 5, showFilter: 5, showHeading: 5, showTemporaryLayerIndicators: 5, state: 3, visibilityAppearance: 1 };
  }
  static {
    this.shadowRootOptions = l;
  }
  static {
    this.styles = d;
  }
  /** A collection of ListItems representing the catalogLayers dynamicGroupLayer. */
  get catalogItems() {
    return this.widget.catalogItems;
  }
  // #endregion
  // #region Public Methods
  /** Permanently destroy the component */
  async destroy() {
    await this.manager.destroy();
  }
}
t("arcgis-catalog-layer-list", c);
export {
  c as ArcgisCatalogLayerList
};
