/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/components-controllers';
import { Nil } from '@arcgis/components-utils';
import { default as CompassViewModel } from '@arcgis/core/widgets/Compass/CompassViewModel.js';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useCompassViewModel: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<CompassViewModel, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    state?: "rotation" | "disabled" | "compass" | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    arcgisReady: import('@arcgis/components-controllers').EventEmitter;
    position: __esri.UIPosition;
    arcgisPropertyChange: import('@arcgis/components-controllers').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.MapView | __esri.SceneView | undefined;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: unknown): unknown;
} | undefined) => CompassViewModel;
/** The Compass component indicates where north is in relation to the current view [rotation](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#rotation) or [camera heading](https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html#heading).
 */
export declare class ArcgisCompass extends LitElement {
    private messages;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    get icon(): string | undefined;
    set icon(value: string | undefined);
    /** The component's default label. */
    label: Nil | string;
    /** Replace localized message strings with your own strings. */
    messageOverrides?: typeof this.messages._overrides;
    /**
     * The z axis orientation.
     */
    readonly orientation: __esri.Orientation;
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    /**
     * The current state of the component.
     */
    readonly state: "rotation" | "disabled" | "compass";
    destroy(): Promise<void>;
    reset(): Promise<void>;
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "orientation" | "state";
    }>;
    readonly arcgisReady: TargetedEvent<this, undefined>;
}
export {};
