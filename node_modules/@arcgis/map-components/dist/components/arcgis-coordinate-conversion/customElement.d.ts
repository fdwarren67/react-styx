/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/components-controllers';
import { Nil } from '@arcgis/components-utils';
import { default as CoordinateConversion } from '@arcgis/core/widgets/CoordinateConversion.js';
import { PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useCoordinateConversionWidget: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<CoordinateConversion, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    state?: unknown;
    viewModel?: __esri.CoordinateConversionViewModel | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    position: __esri.UIPosition;
    arcgisReady: import('@arcgis/components-controllers').EventEmitter;
    arcgisPropertyChange: import('@arcgis/components-controllers').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.MapView | __esri.SceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.CoordinateConversionProperties | undefined): __esri.CoordinateConversionProperties | Promise<__esri.CoordinateConversionProperties | undefined> | undefined;
} | undefined) => CoordinateConversion;
/** CoordinateConversion component provides a way to display user cursor position either as map coordinates or as any of several popular coordinate notations. Additionally, the component provides a way to convert user input coordinates into a [Point](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html).
 */
export declare class ArcgisCoordinateConversion extends LitElement {
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    conversions: __esri.Collection<__esri.Conversion>;
    readonly currentLocation: __esri.Point | nullish;
    formats: __esri.Collection<__esri.Format>;
    headingLevel: number;
    hideCaptureButton: boolean | undefined;
    hideEditButton: boolean | undefined;
    hideExpandButton: boolean | undefined;
    hideSettingsButton: boolean | undefined;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     * Search [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/) for possible values.
     */
    icon: string;
    /** The component's default label. */
    label: string;
    locationSymbol: __esri.SimpleMarkerSymbol | __esri.PictureMarkerSymbol | __esri.PointSymbol3D | __esri.CIMSymbol;
    mode: "capture" | "live";
    /**
     * If this property is set to `false`, multiple conversions cannot be displayed.
     *
     * @default false
     */
    multipleConversionsDisabled: boolean;
    orientation: "auto" | "expand-up" | "expand-down";
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    readonly state: "ready" | "loading" | "disabled";
    /**
     * Unless this property is set to `false`, sessionStorage or localStorage (depending on [storageType](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-CoordinateConversion.html#storageType))
     * will be used to hydrate and persist the CoordinateConversion widget's state.
     *
     * @default false
     */
    storageDisabled: boolean;
    storageType: "local" | "session";
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    reverseConvert(coordinate: string, format: __esri.Format): Promise<__esri.Point | nullish>;
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state" | "currentLocation";
    }>;
    readonly arcgisReady: TargetedEvent<this, undefined>;
}
export {};
