/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/components-controllers';
import { Nil } from '@arcgis/components-utils';
import { default as SceneView } from '@arcgis/core/views/SceneView.js';
import { default as WebScene } from '@arcgis/core/WebScene.js';
import { PublicLitElement as LitElement, ToElement, TargetedEvent } from '@arcgis/lumina';

declare const useWebScene: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<WebScene, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.WebSceneProperties | undefined): __esri.WebSceneProperties | Promise<__esri.WebSceneProperties | undefined> | undefined;
} | undefined) => WebScene;
declare const useSceneView: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<SceneView, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.SceneViewProperties | undefined): __esri.SceneViewProperties | Promise<__esri.SceneViewProperties | undefined> | undefined;
} | undefined) => SceneView;
/** ArcGIS Scene component is used to add 3D maps to web applications. For 2D maps, use the
 * [ArcGIS Map component](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-map/).
 *
 * The Scene component creates a [SceneView](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html)
 * and loads a [WebScene](https://developers.arcgis.com/javascript/latest/api-reference/esri-WebScene.html) item from either
 * [ArcGIS Online](https://www.arcgis.com/home/index.html) or [ArcGIS Enterprise portal](https://enterprise.arcgis.com/en/portal/latest/administer/windows/what-is-portal-for-arcgis-.htm).
 *
 * ```html
 * <arcgis-scene item-id="e2da7564e4f24eaaa918ffd70378056a"></arcgis-scene>
 * ```
 *
 * Alternatively, the Scene component can be initialized without a WebScene item:
 *
 * ```html
 * <arcgis-scene
 *   basemap="satellite"
 *   ground="world-elevation"
 *   camera-position="12.3808, 46.3959, 4400"
 *   camera-tilt="75"
 *   camera-heading="300">
 * </arcgis-scene>
 * ```
 *
 * Further components can be added and connected to the Scene component:
 *
 * ```html
 * <arcgis-scene item-id="e2da7564e4f24eaaa918ffd70378056a">
 *    <arcgis-layer-list position="bottom-right"></arcgis-layer-list>
 * </arcgis-scene>
 * ```
 *
 * The Scene component can be customized further using any of the [core API functionalities](https://developers.arcgis.com/javascript/latest/api-reference/)
 * of the ArcGIS Maps SDK for JavaScript.
 *
 * ```js
 * const arcgisScene = document.querySelector("arcgis-scene");
 * arcgisScene.addEventListener("arcgisViewReadyChange", () => {
 *    const layer = new GraphicsLayer({ title: "My layer"});
 *    arcgisScene.map.add(layer);
 * });
 * ```
 *
 * See also:
 * - [SDK sample apps using the Scene component](https://developers.arcgis.com/javascript/latest/sample-code/?tagged=arcgis-scene)
 * - [Getting started](https://developers.arcgis.com/javascript/latest/get-started-overview/)
 * - [Programming patterns](https://developers.arcgis.com/javascript/latest/programming-patterns/)
 */
export declare class ArcgisScene extends LitElement {
    /** Internal [SceneView](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html) of the component.
     * Once the Scene component is loaded, it can be accessed as follows:
     * ```
     * const arcgisScene = document.querySelector("arcgis-scene");
     * arcgisScene.addEventListener("arcgisViewReadyChange", () => {
     *    const view = arcgisScene.view;
     * });
     * ```
     */
    readonly view: SceneView;
    /**
     * Collection containing a flat list of all the created [LayerViews](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-LayerView.html)
     * related to the basemap, operational layers, and group layers in this view.
     */
    readonly allLayerViews: __esri.Collection<__esri.LayerView>;
    alphaCompositingEnabled: boolean;
    analyses: __esri.Collection<__esri.DimensionAnalysis | __esri.DirectLineMeasurementAnalysis | __esri.AreaMeasurementAnalysis | __esri.SliceAnalysis | __esri.LineOfSightAnalysis | __esri.ViewshedAnalysis>;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    /**
     * Specifies a basemap for the map. The basemap is a set of layers that give
     * geographic context to the view and the other operational layers
     * in the map.
     * It can either be set using a basemap ID string ([see values](https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#basemap)),
     * [Basemap](https://developers.arcgis.com/javascript/latest/api-reference/esri-Basemap.html)
     * or [BasemapStyle](https://developers.arcgis.com/javascript/latest/api-reference/esri-support-BasemapStyle.html).
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#basemap)
     */
    basemap: __esri.Basemap | nullish | string;
    /** Represents the [view for a single basemap](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-BasemapView.html)
     * after it has been added to the map.
     */
    basemapView: __esri.BasemapView;
    /** The [camera](https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html) allows to set the observation point from which the visible portion (or perspective)
     * of the view is determined. When set in the constructor, this property overrides the
     * [center](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#center),
     * [extent](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#extent),
     * [scale](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#scale),
     * [viewpoint](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#viewpoint), and
     * [zoom](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#zoom) properties.
     *
     * Setting the camera immediately changes the current view. For animating the view, see this component's
     * [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     */
    get camera(): __esri.Camera;
    set camera(newValue: __esri.Camera);
    /**
     * The diagonal field of view (fov) angle for the camera. The range of angles must be between 1 and 170 degrees.
     *
     * Setting the camera fov immediately changes the current view. For animating the view, see this component's
     * [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html#fov)
     */
    get cameraFov(): Nil | number;
    set cameraFov(newValue: Nil | number);
    /**
     * The compass heading of the camera in degrees.
     *
     * Setting the camera heading immediately changes the current view. For animating the view, see this component's
     * [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html#heading)
     */
    get cameraHeading(): Nil | number;
    set cameraHeading(newValue: Nil | number);
    /**
     * The position of the camera defined by a map point. It can be a string with the format `"<longitude>, <latitude>, <elevation>"`
     * or a [Point](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html) instance.
     *
     * Setting the camera position immediately changes the current view. For animating the view, see this component's
     * [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html#position)
     *
     */
    get cameraPosition(): __esri.Point | Nil | number[] | string;
    set cameraPosition(newValue: __esri.Point | Nil | number[] | string);
    /**
     * The tilt of the camera in degrees with respect to the surface as projected down from the camera position.
     *
     * Setting the camera tilt immediately changes the current view. For animating the view, see this component's
     * [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html#tilt)
     */
    get cameraTilt(): Nil | number;
    set cameraTilt(newValue: Nil | number);
    /**
     * Represents the center point of the view. It can be a string with the format `"<longitude>, <latitude>"`
     * or a [Point](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html) instance.
     *
     * Setting the center immediately changes the current view. For animating the view, see this component's
     * [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#center)
     */
    get center(): __esri.SceneView["center"];
    set center(newValue: __esri.SceneView["center"] | Nil | number[] | string);
    /** Represents an optional clipping area used to define the visible [extent](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Extent.html)
     * of a [local scene](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#viewingMode).
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#clippingArea)
     */
    clippingArea: __esri.Extent | nullish;
    /** Specifies constraints for the camera's tilt, altitude, and view's clip distance.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#constraints)
     */
    constraints: __esri.SceneViewConstraints;
    /**
     * Indicates whether a layer's `displayFilter` is honored when rendering layers in the view.
     * If `false`, the display filters are ignored and all features are rendered.
     *
     * @default false
     */
    displayFilterDisabled: boolean;
    /** Specifies various properties of the environment's visualization in the view, like the lighting, background, weather, etc.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#environment)
     */
    environment: __esri.SceneViewEnvironment;
    /**
     * The extent represents the visible portion of a map within the view as an instance of
     * [Extent](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Extent.html).
     *
     * Setting the extent immediately changes the view without animation. To animate
     * the view, see this component's [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     * When the view is rotated, the extent does not update to include the newly visible portions of the map.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#extent)
     */
    get extent(): __esri.SceneView["extent"];
    set extent(newValue: __esri.SceneView["extent"]);
    /** A rejected view indicates a fatal [error](https://developers.arcgis.com/javascript/latest/api-reference/esri-core-Error.html)
     * making it unable to display.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#fatalError)
     * */
    fatalError: nullish | __esri.Error;
    /**
     * Applies a display filter on the view for a specific set of floor levels.
     * It can filter the map display on floor-aware layers by zero or more level IDs.
     */
    floors: __esri.Collection<string>;
    /** Gamepad input specific configuration settings. */
    get gamepad(): __esri.GamepadSettings;
    /**
     * Allows for adding graphics directly to the default graphics in the view.
     * Examples:
     * ```
     * // Adds a graphic to the View
     * graphics.add(pointGraphic);
     * // Removes a graphic from the View
     * graphics.remove(pointGraphic);
     * ```
     */
    graphics: __esri.Collection<__esri.Graphic>;
    /**
     * Specifies the surface properties for the map. It can be either a [Ground](https://developers.arcgis.com/javascript/latest/api-reference/esri-Ground.html)
     * instance or a string with one of the following values:
     *    * `"world-elevation"`
     *    * `"world-topobathymetry"`
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#ground)
     */
    ground: __esri.Ground | string;
    readonly groundView: __esri.GroundView;
    highlights: __esri.Collection<__esri.HighlightOptions>;
    /**
     * @deprecated
     *
     * As of 4.32, use [highlights](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#highlights) property instead.
     */
    highlightOptions: __esri.HighlightOptions;
    /** Indication whether the view is being interacted with (for example when panning or by an interactive tool). */
    get interacting(): boolean;
    /**
     * The ID of a [WebScene](https://developers.arcgis.com/javascript/latest/api-reference/esri-WebScene.html) item from either
     * [ArcGIS Online](https://www.arcgis.com/home/index.html) or [ArcGIS Enterprise portal](https://enterprise.arcgis.com/en/portal/latest/administer/windows/what-is-portal-for-arcgis-.htm).
     *
     * To configure the portal url you must set the [config.portalUrl](https://developers.arcgis.com/javascript/latest/api-reference/esri-config.html#portalUrl) property before the Scene component loads.
     * */
    get itemId(): Nil | string;
    set itemId(newValue: Nil | string);
    /**
     * A collection containing a hierarchical list of all the created
     * [LayerViews](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-LayerView.html) of the
     * [operational layers](https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#layers) in the map.
     */
    readonly layerViews: __esri.Collection<__esri.LayerView>;
    /** The magnifier allows for showing a portion of the view as a magnifier image on top of the view. */
    readonly magnifier: __esri.Magnifier;
    /** An instance of a [Map](https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html) object to display in the view. */
    map: __esri.Map;
    /** Indication whether the view is being navigated (for example when panning). */
    get navigating(): boolean;
    /** Options to configure the navigation behavior of the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#navigation)
     */
    navigation: __esri.Navigation;
    /**
     * Use the padding property to make the [center](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#center),
     * and [extent](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#extent),
     * etc. work off a subsection of the full view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#padding)
     */
    padding: __esri.ViewPadding;
    /**
     * This property contains performance information of the view, e.g. global memory usage and additional
     * details for layers about memory consumption and number of features.
     */
    get performanceInfo(): __esri.SceneViewPerformanceInfo;
    popup: nullish | __esri.Popup;
    /**
     * Controls whether the popup opens when users click on the view.
     *
     * @default false
     */
    popupDisabled: boolean;
    qualityProfile: "medium" | "low" | "high";
    /**
     * When `true`, this property indicates whether the view successfully satisfied all dependencies,
     * signaling that the necessary conditions are met.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#ready)
     */
    readonly ready: boolean;
    /**
     * Represents the current value of one pixel in the unit of the view's
     * [spatialReference](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#spatialReference).
     * The resolution is calculated by dividing the view's [extent width](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Extent.html#width)
     * by [its width](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#width).
     */
    get resolution(): number;
    /**
     * Represents the map scale at the center of the view.
     *
     * Setting the scale immediately changes the view. For animating
     * the view, see this component's [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#scale)
     */
    get scale(): number;
    set scale(newValue: number);
    /**
     * The [spatial reference](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-SpatialReference.html) of the view.
     * This indicates the projected or geographic coordinate system used
     * to locate geographic features in the map.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#spatialReference)
     */
    spatialReference: __esri.SpatialReference;
    /** Indication whether the view is animating, being navigated with or resizing. */
    get stationary(): boolean;
    /** Indicates if the view is visible on the page.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#suspended)
     */
    readonly suspended: boolean;
    /**
     * This property specifies the base colors used by some widgets
     * and components to render graphics and labels.
     * This only affects those elements that would otherwise use the default orange pattern.
     */
    theme: nullish | __esri.Theme;
    /**
     * The view's time extent. Time-aware layers display their temporal data that falls within
     * the view's time extent. Setting the view's time extent is similar to setting the spatial
     * extent because once the time extent is set, the
     * view updates automatically to conform to the change.
     */
    timeExtent: nullish | __esri.TimeExtent;
    /**
     * Indicates whether the view is being updated by additional data requests to the network,
     * or by processing received data.
     */
    readonly updating: boolean;
    /**
     * The viewing mode sets whether the view renders the earth as a sphere (global mode) or on a flat plane (local mode).
     *
     * Note that the viewing mode must be set before the Scene component loads.
     * Depending on the viewing mode different [supported coordinate systems](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#supported-coordinate-systems) are available.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#viewingMode)
     */
    viewingMode: "local" | "global";
    /**
     * Represents the current view as a [Viewpoint](https://developers.arcgis.com/javascript/latest/api-reference/esri-Viewpoint.html)
     * or point of observation on the view.
     *
     * Setting the viewpoint immediately changes the current view. For animating
     * the view, see this component's [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#viewpoint)
     */
    get viewpoint(): __esri.Viewpoint;
    set viewpoint(newValue: __esri.Viewpoint);
    /**
     * Represents the level of detail (LOD) at the center of the view.
     *
     * Setting the zoom immediately changes the current view. For animating the view, see this component's [goTo()](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#goTo) method.
     * Setting this property in conjunction with [center](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#center)
     * is a convenient way to set the initial extent of the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#zoom)
     */
    get zoom(): number;
    set zoom(newValue: number);
    /** Adds a layer to the [map's](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#map) `layers` collection. */
    addLayer(layer: __esri.Layer | Promise<any>, index?: number): Promise<void>;
    /** Adds a layer or array of layers to the [map's](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#map) `layers` collection. */
    addLayers(layers: __esri.Layer[], index?: number): Promise<void>;
    /** Adds a table to the [map's](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#map) `tables` collection. */
    addTable(table: __esri.FeatureLayer): Promise<void>;
    /** Adds a table or array of tables to the [map's](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#map) `tables` collection. */
    addTables(tables: __esri.FeatureLayer[], index?: number): Promise<void>;
    /** Closes the [popup](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#popup). */
    closePopup(): Promise<void>;
    /** Destroys the Scene component, and any associated resources, including its
     * [map](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#map),
     * [popup](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#popup),
     * and removes components or other UI DOM elements added to it.
     */
    destroy(): Promise<void>;
    /** Sets the view to a given target.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#goTo)
     */
    goTo(target: __esri.GoToTarget3D, options?: __esri.GoToOptions3D): Promise<unknown>;
    /** Returns [hit test results](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#HitTestResult)
     * from each layer that intersects the specified screen coordinates.
     *
     * ```
     * arcgisScene.addEventListener("arcgisViewClick", (event) => {
     *    arcgisScene.hitTest(event.detail).then((response) => {
     *       const result = response.results[0];
     *       if (result?.type === "graphic") {
     *          const { longitude, latitude } = result.mapPoint;
     *          console.log("Hit graphic at (" + longitude + ", " + latitude + ")", result.graphic);
     *       } else {
     *          console.log("Did not hit any graphic");
     *       }
     *    });
     * });
     * ```
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#hitTest)
     */
    hitTest(screenPoint: __esri.SceneViewScreenPoint | MouseEvent, options?: __esri.SceneViewHitTestOptions): Promise<__esri.SceneViewHitTestResult>;
    /**
     * Opens the popup based on input options.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#openPopup)
     */
    openPopup(options?: __esri.PopupViewOpenPopupOptions): Promise<void>;
    /** Creates a screenshot of the current view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#takeScreenshot)
     */
    takeScreenshot(options?: __esri.SceneViewTakeScreenshotOptions): Promise<__esri.SceneViewScreenshot>;
    /**
     * Converts the given screen point to a [map point](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html).
     */
    toMap(screenPoint: __esri.SceneViewScreenPoint | MouseEvent, options?: __esri.SceneViewToMapOptions): __esri.Point | nullish;
    /**
     * Converts the given [map point](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html) to a screen point.
     */
    toScreen(point: __esri.Point): __esri.SceneViewScreenPoint;
    /** Call this method to clear any fatal errors resulting from a lost WebGL context. */
    tryFatalErrorRecovery(): Promise<void>;
    /**
     * Gets the analysis view created for the given analysis object.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#whenAnalysisView)
     */
    whenAnalysisView(analysis: __esri.AreaMeasurementAnalysis | __esri.DimensionAnalysis | __esri.DirectLineMeasurementAnalysis | __esri.LineOfSightAnalysis | __esri.SliceAnalysis | __esri.ViewshedAnalysis): Promise<__esri.AreaMeasurementAnalysisView3D | __esri.DimensionAnalysisView | __esri.DirectLineMeasurementAnalysisView3D | __esri.LineOfSightAnalysisView3D | __esri.SliceAnalysisView3D | __esri.ViewshedAnalysisView3D>;
    /** Gets the layer view created on the view for the given layer.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#whenLayerView)
     */
    whenLayerView(layer: __esri.Layer): Promise<__esri.LayerView>;
    /**
     * This event is for view related property changes:
     * [zoom](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#zoom),
     * [scale](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#scale),
     * [center](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#center),
     * [rotation](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#rotation),
     * [extent](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#extent),
     * [camera](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#camera),
     * [viewpoint](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#viewpoint).
     * This event will also emit if [stationary](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#stationary)
     * toggles from `true` to `false`.
     */
    readonly arcgisViewChange: TargetedEvent<this, void>;
    /** Fires after a user clicks on the view.
     *
     * ```
     * arcgisScene.addEventListener("arcgisViewClick", (event) => {
     *    arcgisScene.hitTest(event.detail).then((response) => {
     *       const result = response.results[0];
     *       // ....
     *    });
     * });
     * ```
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-click)
     */
    readonly arcgisViewClick: TargetedEvent<this, __esri.ViewClickEvent>;
    /** Fires after double-clicking on the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-double-click)
     */
    readonly arcgisViewDoubleClick: TargetedEvent<this, __esri.ViewDoubleClickEvent>;
    /** Fires during a pointer drag on the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-drag)
     */
    readonly arcgisViewDrag: TargetedEvent<this, __esri.ViewDragEvent>;
    /** Fires after holding either a mouse button or a single finger on the view for a short amount of time.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-hold)
     */
    readonly arcgisViewHold: TargetedEvent<this, __esri.ViewHoldEvent>;
    /** Fires right after a user clicks on the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-immediate-click)
     */
    readonly arcgisViewImmediateClick: TargetedEvent<this, __esri.ViewImmediateClickEvent>;
    /** Is emitted after two consecutive immediate-click events.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-immediate-double-click)
     */
    readonly arcgisViewImmediateDoubleClick: TargetedEvent<this, __esri.ViewImmediateDoubleClickEvent>;
    /** Fires after a keyboard key is pressed.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-key-down)
     */
    readonly arcgisViewKeyDown: TargetedEvent<this, __esri.ViewKeyDownEvent>;
    /** Fires after a keyboard key is released.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-key-up)
     */
    readonly arcgisViewKeyUp: TargetedEvent<this, __esri.ViewKeyUpEvent>;
    /** Fires after each layer in the map has a corresponding LayerView created and rendered in the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-layerview-create)
     */
    readonly arcgisViewLayerviewCreate: TargetedEvent<this, __esri.ViewLayerviewCreateEvent>;
    /** Fires when an error emits during the creation of a LayerView after a layer has been added to the map.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-layerview-create-error)
     */
    readonly arcgisViewLayerviewCreateError: TargetedEvent<this, __esri.ViewLayerviewCreateErrorEvent>;
    /** Fires after a LayerView is destroyed and is no longer rendered in the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-layerview-destroy)
     */
    readonly arcgisViewLayerviewDestroy: TargetedEvent<this, __esri.ViewLayerviewDestroyEvent>;
    /** Fires when a wheel button of a pointing device (typically a mouse) is scrolled on the view.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-mouse-wheel)
     */
    readonly arcgisViewMouseWheel: TargetedEvent<this, __esri.ViewMouseWheelEvent>;
    /** Fires after a mouse button is pressed, or a finger touches the display.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-pointer-down)
     */
    readonly arcgisViewPointerDown: TargetedEvent<this, __esri.ViewPointerDownEvent>;
    /** Fires after a mouse cursor enters the view, or a display touch begins.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-pointer-enter)
     */
    readonly arcgisViewPointerEnter: TargetedEvent<this, __esri.ViewPointerEnterEvent>;
    /** Fires after a mouse cursor leaves the view, or a display touch ends.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-pointer-leave)
     */
    readonly arcgisViewPointerLeave: TargetedEvent<this, __esri.ViewPointerLeaveEvent>;
    /** Fires after the mouse or a finger on the display moves.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-pointer-move)
     */
    readonly arcgisViewPointerMove: TargetedEvent<this, __esri.ViewPointerMoveEvent>;
    /** Fires after a mouse button is released, or a display touch ends.
     *
     * [Read more](https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#event-pointer-up)
     */
    readonly arcgisViewPointerUp: TargetedEvent<this, __esri.ViewPointerUpEvent>;
    /**
     * This event is for the [ready](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#ready)
     * property and will be emitted when the view is ready.
     * This event will also emit if the [map](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/#map) property is changed.
     *
     *```
     * arcgisScene.addEventListener("arcgisViewReadyChange", () => {
     *    const layer = new GraphicsLayer({ title: "My layer"});
     *    arcgisScene.map.add(layer);
     * });
     * ```
     */
    readonly arcgisViewReadyChange: TargetedEvent<this, void>;
    readonly _setterTypes: {
        center?: __esri.SceneView["center"] | Nil | number[] | string;
    };
}
export {};
