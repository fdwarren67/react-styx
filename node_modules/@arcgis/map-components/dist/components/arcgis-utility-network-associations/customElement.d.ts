/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/components-controllers';
import { Nil } from '@arcgis/components-utils';
import { default as UtilityNetworkAssociations } from '@arcgis/core/widgets/UtilityNetworkAssociations.js';
import { ToElement, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { PropertyValues } from 'lit';
import { ArcgisReferenceElement } from '../../utils/component-utils';

export type UtilityNetworkAssociationsWidget = InstanceType<typeof UtilityNetworkAssociations>;
declare const useUtilityNetworkAssociationsWidget: (component: import('@arcgis/components-controllers').StencilLifecycles & {
    manager: import('@arcgis/components-controllers').ControllerManager;
    el: HTMLElement;
    autoDestroyDisabled?: boolean;
    destroy?: () => Promise<void>;
} & Pick<UtilityNetworkAssociations, never> & {
    reactiveUtils?: typeof __esri.reactiveUtils;
    state?: unknown;
    viewModel?: __esri.UtilityNetworkAssociationsViewModel | undefined;
    icon: Nil | string;
    label: Nil | string;
    referenceElement: ArcgisReferenceElement | Nil | string;
    position: __esri.UIPosition;
    arcgisReady: import('@arcgis/components-controllers').EventEmitter;
    arcgisPropertyChange: import('@arcgis/components-controllers').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.MapView | __esri.SceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.UtilityNetworkAssociationsProperties | undefined): __esri.UtilityNetworkAssociationsProperties | Promise<__esri.UtilityNetworkAssociationsProperties | undefined> | undefined;
} | undefined) => UtilityNetworkAssociations;
/**
 * The UtilityNetworkAssociations component offers an intuitive user interface, reducing the complexity of working with utility network associations.
 *
 * > The UtilityNetworkAssociations Component does not support proxied feature services or feature services that utilize stored credentials.
 *
 * Note: Sign in to access the data in this sample, U/P: `viewer01`/`I68VGU^nMurF`
 */
export declare class ArcgisUtilityNetworkAssociations extends LitElement {
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    /** @default false */
    autoRefreshAssociationsDisabled: boolean;
    connectivityAssociationsLineSymbol: __esri.SimpleLineSymbol;
    /** @default false */
    includeConnectivityAssociationsDisabled: boolean;
    /** @default false */
    includeStructuralAttachmentAssociationsDisabled: boolean;
    maxAllowableAssociations: number;
    maxAllowableAssociationsSliderMax: number;
    maxAllowableAssociationsSliderMin: number;
    maxAllowableAssociationsSliderStep: number;
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    showArrowsConnectivity: boolean;
    showArrowsStructuralAttachment: boolean;
    showAssociationsEnabled: boolean;
    structuralAttachmentAssociationsLineSymbol: __esri.SimpleLineSymbol;
    utilityNetwork: nullish | __esri.UtilityNetwork;
    showConnectivityAssociationsSettingsArrowsToggle: boolean;
    /** @deprecated Use hideConnectivityAssociationsSettingsArrowsToggle instead */
    visibleElementsConnectivityAssociationsSettingsArrowsToggle: boolean;
    showConnectivityAssociationsSettingsCapSelect: boolean;
    /** @deprecated Use hideConnectivityAssociationsSettingsCapSelect instead */
    visibleElementsConnectivityAssociationsSettingsCapSelect: boolean;
    hideConnectivityAssociationsSettingsColorPicker: boolean;
    /** @deprecated Use hideConnectivityAssociationsSettingsColorPicker instead */
    visibleElementsConnectivityAssociationsSettingsColorPicker: boolean;
    hideConnectivityAssociationsSettingsStylePicker: boolean;
    /** @deprecated Use hideConnectivityAssociationsSettingsStylePicker instead */
    visibleElementsConnectivityAssociationsSettingsStylePicker: boolean;
    hideConnectivityAssociationsSettingsWidthInput: boolean;
    /** @deprecated Use hideConnectivityAssociationsSettingsWidthInput instead */
    visibleElementsConnectivityAssociationsSettingsWidthInput: boolean;
    showMaxAllowableAssociationsSlider: boolean;
    /** @deprecated Use hideMaxAllowableAssociationsSlider instead */
    visibleElementsMaxAllowableAssociationsSlider: boolean;
    showStructuralAttachmentAssociationsSettingsArrowsToggle: boolean;
    /** @deprecated Use hideStructuralAttachmentAssociationsSettingsArrowsToggle instead */
    visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle: boolean;
    showStructuralAttachmentAssociationsSettingsCapSelect: boolean;
    /** @deprecated Use hideStructuralAttachmentAssociationsSettingsCapSelect instead */
    visibleElementsStructuralAttachmentAssociationsSettingsCapSelect: boolean;
    hideStructuralAttachmentAssociationsSettingsColorPicker: boolean;
    /** @deprecated Use hideStructuralAttachmentAssociationsSettingsColorPicker instead */
    visibleElementsStructuralAttachmentAssociationsSettingsColorPicker: boolean;
    hideStructuralAttachmentAssociationsSettingsStylePicker: boolean;
    /** @deprecated Use hideStructuralAttachmentAssociationsSettingsStylePicker instead */
    visibleElementsStructuralAttachmentAssociationsSettingsStylePicker: boolean;
    hideStructuralAttachmentAssociationsSettingsWidthInput: boolean;
    /** @deprecated Use hideStructuralAttachmentAssociationsSettingsWidthInput instead */
    visibleElementsStructuralAttachmentAssociationsSettingsWidthInput: boolean;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     * Search [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/) for possible values.
     */
    icon: string;
    /** The component's default label. */
    label: string;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    readonly arcgisReady: TargetedEvent<this, undefined>;
}
export {};
