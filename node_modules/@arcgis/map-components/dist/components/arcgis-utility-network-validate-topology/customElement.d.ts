/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { default as UtilityNetworkValidateTopology } from '@arcgis/core/widgets/UtilityNetworkValidateTopology.js';
import { ArcgisReferenceElement, WidgetElement } from '../../utils/component-utils';
import { Nil } from '@arcgis/components-utils';
import { PropertyValues } from 'lit';
import { JsxNode, ToElement, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';

export type UtilityNetworkValidateTopologyWidget = InstanceType<typeof UtilityNetworkValidateTopology>;
/** The UtilityNetworkValidateTopology component simplifies the process of validating a DirtyArea within a utility network. It offers an intuitive user interface, reducing the complexity of working with utility network associations.

> The UtilityNetworkValidateTopology Component does not support proxied feature services or feature services that utilize stored credentials.

Note: Sign in to access the data in this sample, U/P: `viewer01`/`I68VGU^nMurF`
 */
export declare class ArcgisUtilityNetworkValidateTopology extends LitElement {
    extentToValidate: UtilityNetworkValidateTopologyWidget["extentToValidate"];
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    utilityNetwork: UtilityNetworkValidateTopologyWidget["utilityNetwork"] | undefined;
    readonly arcgisReady: TargetedEvent<this, undefined>;
}
