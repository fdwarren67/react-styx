/// <reference types="@esri/calcite-components" preserve="true" />
import type { EventName } from "@lit/react";
export declare const CalciteAccordion: import("@lit/react").ReactWebComponent<HTMLCalciteAccordionElement & {
    class?: string;
}, {}>;
export declare const CalciteAccordionItem: import("@lit/react").ReactWebComponent<HTMLCalciteAccordionItemElement & {
    class?: string;
}, {}>;
export declare const CalciteAction: import("@lit/react").ReactWebComponent<HTMLCalciteActionElement & {
    class?: string;
}, {}>;
export declare const CalciteActionBar: import("@lit/react").ReactWebComponent<HTMLCalciteActionBarElement & {
    class?: string;
}, {
    onCalciteActionBarToggle: EventName<HTMLCalciteActionBarElement["calciteActionBarToggle"]>;
}>;
export declare const CalciteActionGroup: import("@lit/react").ReactWebComponent<HTMLCalciteActionGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteActionMenu: import("@lit/react").ReactWebComponent<HTMLCalciteActionMenuElement & {
    class?: string;
}, {
    onCalciteActionMenuOpen: EventName<HTMLCalciteActionMenuElement["calciteActionMenuOpen"]>;
}>;
export declare const CalciteActionPad: import("@lit/react").ReactWebComponent<HTMLCalciteActionPadElement & {
    class?: string;
}, {
    onCalciteActionPadToggle: EventName<HTMLCalciteActionPadElement["calciteActionPadToggle"]>;
}>;
export declare const CalciteAlert: import("@lit/react").ReactWebComponent<HTMLCalciteAlertElement & {
    class?: string;
}, {
    onCalciteAlertBeforeClose: EventName<HTMLCalciteAlertElement["calciteAlertBeforeClose"]>;
    onCalciteAlertBeforeOpen: EventName<HTMLCalciteAlertElement["calciteAlertBeforeOpen"]>;
    onCalciteAlertClose: EventName<HTMLCalciteAlertElement["calciteAlertClose"]>;
    onCalciteAlertOpen: EventName<HTMLCalciteAlertElement["calciteAlertOpen"]>;
}>;
export declare const CalciteAutocomplete: import("@lit/react").ReactWebComponent<HTMLCalciteAutocompleteElement & {
    class?: string;
}, {
    onCalciteAutocompleteBeforeClose: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteBeforeClose"]>;
    onCalciteAutocompleteBeforeOpen: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteBeforeOpen"]>;
    onCalciteAutocompleteChange: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteChange"]>;
    onCalciteAutocompleteClose: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteClose"]>;
    onCalciteAutocompleteOpen: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteOpen"]>;
    onCalciteAutocompleteTextChange: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteTextChange"]>;
    onCalciteAutocompleteTextInput: EventName<HTMLCalciteAutocompleteElement["calciteAutocompleteTextInput"]>;
}>;
export declare const CalciteAutocompleteItem: import("@lit/react").ReactWebComponent<HTMLCalciteAutocompleteItemElement & {
    class?: string;
}, {}>;
export declare const CalciteAutocompleteItemGroup: import("@lit/react").ReactWebComponent<HTMLCalciteAutocompleteItemGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteAvatar: import("@lit/react").ReactWebComponent<HTMLCalciteAvatarElement & {
    class?: string;
}, {}>;
export declare const CalciteBlock: import("@lit/react").ReactWebComponent<HTMLCalciteBlockElement & {
    class?: string;
}, {
    onCalciteBlockBeforeClose: EventName<HTMLCalciteBlockElement["calciteBlockBeforeClose"]>;
    onCalciteBlockBeforeOpen: EventName<HTMLCalciteBlockElement["calciteBlockBeforeOpen"]>;
    onCalciteBlockClose: EventName<HTMLCalciteBlockElement["calciteBlockClose"]>;
    onCalciteBlockOpen: EventName<HTMLCalciteBlockElement["calciteBlockOpen"]>;
    onCalciteBlockSortHandleBeforeClose: EventName<HTMLCalciteBlockElement["calciteBlockSortHandleBeforeClose"]>;
    onCalciteBlockSortHandleBeforeOpen: EventName<HTMLCalciteBlockElement["calciteBlockSortHandleBeforeOpen"]>;
    onCalciteBlockSortHandleClose: EventName<HTMLCalciteBlockElement["calciteBlockSortHandleClose"]>;
    onCalciteBlockSortHandleOpen: EventName<HTMLCalciteBlockElement["calciteBlockSortHandleOpen"]>;
    onCalciteBlockToggle: EventName<HTMLCalciteBlockElement["calciteBlockToggle"]>;
}>;
export declare const CalciteBlockGroup: import("@lit/react").ReactWebComponent<HTMLCalciteBlockGroupElement & {
    class?: string;
}, {
    onCalciteBlockGroupDragEnd: EventName<HTMLCalciteBlockGroupElement["calciteBlockGroupDragEnd"]>;
    onCalciteBlockGroupDragStart: EventName<HTMLCalciteBlockGroupElement["calciteBlockGroupDragStart"]>;
    onCalciteBlockGroupOrderChange: EventName<HTMLCalciteBlockGroupElement["calciteBlockGroupOrderChange"]>;
}>;
export declare const CalciteBlockSection: import("@lit/react").ReactWebComponent<HTMLCalciteBlockSectionElement & {
    class?: string;
}, {
    onCalciteBlockSectionToggle: EventName<HTMLCalciteBlockSectionElement["calciteBlockSectionToggle"]>;
}>;
export declare const CalciteButton: import("@lit/react").ReactWebComponent<HTMLCalciteButtonElement & {
    class?: string;
}, {}>;
export declare const CalciteCard: import("@lit/react").ReactWebComponent<HTMLCalciteCardElement & {
    class?: string;
}, {
    onCalciteCardSelect: EventName<HTMLCalciteCardElement["calciteCardSelect"]>;
}>;
export declare const CalciteCardGroup: import("@lit/react").ReactWebComponent<HTMLCalciteCardGroupElement & {
    class?: string;
}, {
    onCalciteCardGroupSelect: EventName<HTMLCalciteCardGroupElement["calciteCardGroupSelect"]>;
}>;
export declare const CalciteCarousel: import("@lit/react").ReactWebComponent<HTMLCalciteCarouselElement & {
    class?: string;
}, {
    onCalciteCarouselChange: EventName<HTMLCalciteCarouselElement["calciteCarouselChange"]>;
    onCalciteCarouselPause: EventName<HTMLCalciteCarouselElement["calciteCarouselPause"]>;
    onCalciteCarouselPlay: EventName<HTMLCalciteCarouselElement["calciteCarouselPlay"]>;
    onCalciteCarouselResume: EventName<HTMLCalciteCarouselElement["calciteCarouselResume"]>;
    onCalciteCarouselStop: EventName<HTMLCalciteCarouselElement["calciteCarouselStop"]>;
}>;
export declare const CalciteCarouselItem: import("@lit/react").ReactWebComponent<HTMLCalciteCarouselItemElement & {
    class?: string;
}, {}>;
export declare const CalciteCheckbox: import("@lit/react").ReactWebComponent<HTMLCalciteCheckboxElement & {
    class?: string;
}, {
    onCalciteCheckboxChange: EventName<HTMLCalciteCheckboxElement["calciteCheckboxChange"]>;
}>;
export declare const CalciteChip: import("@lit/react").ReactWebComponent<HTMLCalciteChipElement & {
    class?: string;
}, {
    onCalciteChipClose: EventName<HTMLCalciteChipElement["calciteChipClose"]>;
    onCalciteChipSelect: EventName<HTMLCalciteChipElement["calciteChipSelect"]>;
}>;
export declare const CalciteChipGroup: import("@lit/react").ReactWebComponent<HTMLCalciteChipGroupElement & {
    class?: string;
}, {
    onCalciteChipGroupSelect: EventName<HTMLCalciteChipGroupElement["calciteChipGroupSelect"]>;
}>;
export declare const CalciteColorPicker: import("@lit/react").ReactWebComponent<HTMLCalciteColorPickerElement & {
    class?: string;
}, {
    onCalciteColorPickerChange: EventName<HTMLCalciteColorPickerElement["calciteColorPickerChange"]>;
    onCalciteColorPickerInput: EventName<HTMLCalciteColorPickerElement["calciteColorPickerInput"]>;
}>;
export declare const CalciteColorPickerHexInput: import("@lit/react").ReactWebComponent<HTMLCalciteColorPickerHexInputElement & {
    class?: string;
}, {
    onCalciteColorPickerHexInputChange: EventName<HTMLCalciteColorPickerHexInputElement["calciteColorPickerHexInputChange"]>;
}>;
export declare const CalciteColorPickerSwatch: import("@lit/react").ReactWebComponent<HTMLCalciteColorPickerSwatchElement & {
    class?: string;
}, {}>;
export declare const CalciteCombobox: import("@lit/react").ReactWebComponent<HTMLCalciteComboboxElement & {
    class?: string;
}, {
    onCalciteComboboxBeforeClose: EventName<HTMLCalciteComboboxElement["calciteComboboxBeforeClose"]>;
    onCalciteComboboxBeforeOpen: EventName<HTMLCalciteComboboxElement["calciteComboboxBeforeOpen"]>;
    onCalciteComboboxChange: EventName<HTMLCalciteComboboxElement["calciteComboboxChange"]>;
    onCalciteComboboxChipClose: EventName<HTMLCalciteComboboxElement["calciteComboboxChipClose"]>;
    onCalciteComboboxClose: EventName<HTMLCalciteComboboxElement["calciteComboboxClose"]>;
    onCalciteComboboxFilterChange: EventName<HTMLCalciteComboboxElement["calciteComboboxFilterChange"]>;
    onCalciteComboboxOpen: EventName<HTMLCalciteComboboxElement["calciteComboboxOpen"]>;
}>;
export declare const CalciteComboboxItem: import("@lit/react").ReactWebComponent<HTMLCalciteComboboxItemElement & {
    class?: string;
}, {
    onCalciteComboboxItemChange: EventName<HTMLCalciteComboboxItemElement["calciteComboboxItemChange"]>;
}>;
export declare const CalciteComboboxItemGroup: import("@lit/react").ReactWebComponent<HTMLCalciteComboboxItemGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteDatePicker: import("@lit/react").ReactWebComponent<HTMLCalciteDatePickerElement & {
    class?: string;
}, {
    onCalciteDatePickerChange: EventName<HTMLCalciteDatePickerElement["calciteDatePickerChange"]>;
    onCalciteDatePickerRangeChange: EventName<HTMLCalciteDatePickerElement["calciteDatePickerRangeChange"]>;
}>;
export declare const CalciteDatePickerDay: import("@lit/react").ReactWebComponent<HTMLCalciteDatePickerDayElement & {
    class?: string;
}, {}>;
export declare const CalciteDatePickerMonth: import("@lit/react").ReactWebComponent<HTMLCalciteDatePickerMonthElement & {
    class?: string;
}, {}>;
export declare const CalciteDatePickerMonthHeader: import("@lit/react").ReactWebComponent<HTMLCalciteDatePickerMonthHeaderElement & {
    class?: string;
}, {}>;
export declare const CalciteDialog: import("@lit/react").ReactWebComponent<HTMLCalciteDialogElement & {
    class?: string;
}, {
    onCalciteDialogBeforeClose: EventName<HTMLCalciteDialogElement["calciteDialogBeforeClose"]>;
    onCalciteDialogBeforeOpen: EventName<HTMLCalciteDialogElement["calciteDialogBeforeOpen"]>;
    onCalciteDialogClose: EventName<HTMLCalciteDialogElement["calciteDialogClose"]>;
    onCalciteDialogOpen: EventName<HTMLCalciteDialogElement["calciteDialogOpen"]>;
    onCalciteDialogScroll: EventName<HTMLCalciteDialogElement["calciteDialogScroll"]>;
}>;
export declare const CalciteDropdown: import("@lit/react").ReactWebComponent<HTMLCalciteDropdownElement & {
    class?: string;
}, {
    onCalciteDropdownBeforeClose: EventName<HTMLCalciteDropdownElement["calciteDropdownBeforeClose"]>;
    onCalciteDropdownBeforeOpen: EventName<HTMLCalciteDropdownElement["calciteDropdownBeforeOpen"]>;
    onCalciteDropdownClose: EventName<HTMLCalciteDropdownElement["calciteDropdownClose"]>;
    onCalciteDropdownOpen: EventName<HTMLCalciteDropdownElement["calciteDropdownOpen"]>;
    onCalciteDropdownSelect: EventName<HTMLCalciteDropdownElement["calciteDropdownSelect"]>;
}>;
export declare const CalciteDropdownGroup: import("@lit/react").ReactWebComponent<HTMLCalciteDropdownGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteDropdownItem: import("@lit/react").ReactWebComponent<HTMLCalciteDropdownItemElement & {
    class?: string;
}, {
    onCalciteDropdownItemSelect: EventName<HTMLCalciteDropdownItemElement["calciteDropdownItemSelect"]>;
}>;
export declare const CalciteFab: import("@lit/react").ReactWebComponent<HTMLCalciteFabElement & {
    class?: string;
}, {}>;
export declare const CalciteFilter: import("@lit/react").ReactWebComponent<HTMLCalciteFilterElement & {
    class?: string;
}, {
    onCalciteFilterChange: EventName<HTMLCalciteFilterElement["calciteFilterChange"]>;
}>;
export declare const CalciteFlow: import("@lit/react").ReactWebComponent<HTMLCalciteFlowElement & {
    class?: string;
}, {}>;
export declare const CalciteFlowItem: import("@lit/react").ReactWebComponent<HTMLCalciteFlowItemElement & {
    class?: string;
}, {
    onCalciteFlowItemBack: EventName<HTMLCalciteFlowItemElement["calciteFlowItemBack"]>;
    onCalciteFlowItemClose: EventName<HTMLCalciteFlowItemElement["calciteFlowItemClose"]>;
    onCalciteFlowItemScroll: EventName<HTMLCalciteFlowItemElement["calciteFlowItemScroll"]>;
    onCalciteFlowItemToggle: EventName<HTMLCalciteFlowItemElement["calciteFlowItemToggle"]>;
}>;
export declare const CalciteGraph: import("@lit/react").ReactWebComponent<HTMLCalciteGraphElement & {
    class?: string;
}, {}>;
export declare const CalciteHandle: import("@lit/react").ReactWebComponent<HTMLCalciteHandleElement & {
    class?: string;
}, {
    onCalciteHandleChange: EventName<HTMLCalciteHandleElement["calciteHandleChange"]>;
    onCalciteHandleNudge: EventName<HTMLCalciteHandleElement["calciteHandleNudge"]>;
}>;
export declare const CalciteIcon: import("@lit/react").ReactWebComponent<HTMLCalciteIconElement & {
    class?: string;
}, {}>;
export declare const CalciteInlineEditable: import("@lit/react").ReactWebComponent<HTMLCalciteInlineEditableElement & {
    class?: string;
}, {
    onCalciteInlineEditableEditCancel: EventName<HTMLCalciteInlineEditableElement["calciteInlineEditableEditCancel"]>;
    onCalciteInlineEditableEditConfirm: EventName<HTMLCalciteInlineEditableElement["calciteInlineEditableEditConfirm"]>;
}>;
export declare const CalciteInput: import("@lit/react").ReactWebComponent<HTMLCalciteInputElement & {
    class?: string;
}, {
    onCalciteInputChange: EventName<HTMLCalciteInputElement["calciteInputChange"]>;
    onCalciteInputInput: EventName<HTMLCalciteInputElement["calciteInputInput"]>;
}>;
export declare const CalciteInputDatePicker: import("@lit/react").ReactWebComponent<HTMLCalciteInputDatePickerElement & {
    class?: string;
}, {
    onCalciteInputDatePickerBeforeClose: EventName<HTMLCalciteInputDatePickerElement["calciteInputDatePickerBeforeClose"]>;
    onCalciteInputDatePickerBeforeOpen: EventName<HTMLCalciteInputDatePickerElement["calciteInputDatePickerBeforeOpen"]>;
    onCalciteInputDatePickerChange: EventName<HTMLCalciteInputDatePickerElement["calciteInputDatePickerChange"]>;
    onCalciteInputDatePickerClose: EventName<HTMLCalciteInputDatePickerElement["calciteInputDatePickerClose"]>;
    onCalciteInputDatePickerOpen: EventName<HTMLCalciteInputDatePickerElement["calciteInputDatePickerOpen"]>;
}>;
export declare const CalciteInputMessage: import("@lit/react").ReactWebComponent<HTMLCalciteInputMessageElement & {
    class?: string;
}, {}>;
export declare const CalciteInputNumber: import("@lit/react").ReactWebComponent<HTMLCalciteInputNumberElement & {
    class?: string;
}, {
    onCalciteInputNumberChange: EventName<HTMLCalciteInputNumberElement["calciteInputNumberChange"]>;
    onCalciteInputNumberInput: EventName<HTMLCalciteInputNumberElement["calciteInputNumberInput"]>;
}>;
export declare const CalciteInputText: import("@lit/react").ReactWebComponent<HTMLCalciteInputTextElement & {
    class?: string;
}, {
    onCalciteInputTextChange: EventName<HTMLCalciteInputTextElement["calciteInputTextChange"]>;
    onCalciteInputTextInput: EventName<HTMLCalciteInputTextElement["calciteInputTextInput"]>;
}>;
export declare const CalciteInputTimePicker: import("@lit/react").ReactWebComponent<HTMLCalciteInputTimePickerElement & {
    class?: string;
}, {
    onCalciteInputTimePickerBeforeClose: EventName<HTMLCalciteInputTimePickerElement["calciteInputTimePickerBeforeClose"]>;
    onCalciteInputTimePickerBeforeOpen: EventName<HTMLCalciteInputTimePickerElement["calciteInputTimePickerBeforeOpen"]>;
    onCalciteInputTimePickerChange: EventName<HTMLCalciteInputTimePickerElement["calciteInputTimePickerChange"]>;
    onCalciteInputTimePickerClose: EventName<HTMLCalciteInputTimePickerElement["calciteInputTimePickerClose"]>;
    onCalciteInputTimePickerOpen: EventName<HTMLCalciteInputTimePickerElement["calciteInputTimePickerOpen"]>;
}>;
export declare const CalciteInputTimeZone: import("@lit/react").ReactWebComponent<HTMLCalciteInputTimeZoneElement & {
    class?: string;
}, {
    onCalciteInputTimeZoneBeforeClose: EventName<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneBeforeClose"]>;
    onCalciteInputTimeZoneBeforeOpen: EventName<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneBeforeOpen"]>;
    onCalciteInputTimeZoneChange: EventName<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneChange"]>;
    onCalciteInputTimeZoneClose: EventName<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneClose"]>;
    onCalciteInputTimeZoneOpen: EventName<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneOpen"]>;
}>;
export declare const CalciteLabel: import("@lit/react").ReactWebComponent<HTMLCalciteLabelElement & {
    class?: string;
}, {}>;
export declare const CalciteLink: import("@lit/react").ReactWebComponent<HTMLCalciteLinkElement & {
    class?: string;
}, {}>;
export declare const CalciteList: import("@lit/react").ReactWebComponent<HTMLCalciteListElement & {
    class?: string;
}, {
    onCalciteListChange: EventName<HTMLCalciteListElement["calciteListChange"]>;
    onCalciteListDragEnd: EventName<HTMLCalciteListElement["calciteListDragEnd"]>;
    onCalciteListDragStart: EventName<HTMLCalciteListElement["calciteListDragStart"]>;
    onCalciteListFilter: EventName<HTMLCalciteListElement["calciteListFilter"]>;
    onCalciteListOrderChange: EventName<HTMLCalciteListElement["calciteListOrderChange"]>;
}>;
export declare const CalciteListItem: import("@lit/react").ReactWebComponent<HTMLCalciteListItemElement & {
    class?: string;
}, {
    onCalciteListItemClose: EventName<HTMLCalciteListItemElement["calciteListItemClose"]>;
    onCalciteListItemSelect: EventName<HTMLCalciteListItemElement["calciteListItemSelect"]>;
    onCalciteListItemSortHandleBeforeClose: EventName<HTMLCalciteListItemElement["calciteListItemSortHandleBeforeClose"]>;
    onCalciteListItemSortHandleBeforeOpen: EventName<HTMLCalciteListItemElement["calciteListItemSortHandleBeforeOpen"]>;
    onCalciteListItemSortHandleClose: EventName<HTMLCalciteListItemElement["calciteListItemSortHandleClose"]>;
    onCalciteListItemSortHandleOpen: EventName<HTMLCalciteListItemElement["calciteListItemSortHandleOpen"]>;
    onCalciteListItemToggle: EventName<HTMLCalciteListItemElement["calciteListItemToggle"]>;
}>;
export declare const CalciteListItemGroup: import("@lit/react").ReactWebComponent<HTMLCalciteListItemGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteLoader: import("@lit/react").ReactWebComponent<HTMLCalciteLoaderElement & {
    class?: string;
}, {}>;
export declare const CalciteMenu: import("@lit/react").ReactWebComponent<HTMLCalciteMenuElement & {
    class?: string;
}, {}>;
export declare const CalciteMenuItem: import("@lit/react").ReactWebComponent<HTMLCalciteMenuItemElement & {
    class?: string;
}, {
    onCalciteMenuItemSelect: EventName<HTMLCalciteMenuItemElement["calciteMenuItemSelect"]>;
}>;
export declare const CalciteMeter: import("@lit/react").ReactWebComponent<HTMLCalciteMeterElement & {
    class?: string;
}, {}>;
export declare const CalciteModal: import("@lit/react").ReactWebComponent<HTMLCalciteModalElement & {
    class?: string;
}, {
    onCalciteModalBeforeClose: EventName<HTMLCalciteModalElement["calciteModalBeforeClose"]>;
    onCalciteModalBeforeOpen: EventName<HTMLCalciteModalElement["calciteModalBeforeOpen"]>;
    onCalciteModalClose: EventName<HTMLCalciteModalElement["calciteModalClose"]>;
    onCalciteModalOpen: EventName<HTMLCalciteModalElement["calciteModalOpen"]>;
}>;
export declare const CalciteNavigation: import("@lit/react").ReactWebComponent<HTMLCalciteNavigationElement & {
    class?: string;
}, {
    onCalciteNavigationActionSelect: EventName<HTMLCalciteNavigationElement["calciteNavigationActionSelect"]>;
}>;
export declare const CalciteNavigationLogo: import("@lit/react").ReactWebComponent<HTMLCalciteNavigationLogoElement & {
    class?: string;
}, {}>;
export declare const CalciteNavigationUser: import("@lit/react").ReactWebComponent<HTMLCalciteNavigationUserElement & {
    class?: string;
}, {}>;
export declare const CalciteNotice: import("@lit/react").ReactWebComponent<HTMLCalciteNoticeElement & {
    class?: string;
}, {
    onCalciteNoticeBeforeClose: EventName<HTMLCalciteNoticeElement["calciteNoticeBeforeClose"]>;
    onCalciteNoticeBeforeOpen: EventName<HTMLCalciteNoticeElement["calciteNoticeBeforeOpen"]>;
    onCalciteNoticeClose: EventName<HTMLCalciteNoticeElement["calciteNoticeClose"]>;
    onCalciteNoticeOpen: EventName<HTMLCalciteNoticeElement["calciteNoticeOpen"]>;
}>;
export declare const CalciteOption: import("@lit/react").ReactWebComponent<HTMLCalciteOptionElement & {
    class?: string;
}, {}>;
export declare const CalciteOptionGroup: import("@lit/react").ReactWebComponent<HTMLCalciteOptionGroupElement & {
    class?: string;
}, {}>;
export declare const CalcitePagination: import("@lit/react").ReactWebComponent<HTMLCalcitePaginationElement & {
    class?: string;
}, {
    onCalcitePaginationChange: EventName<HTMLCalcitePaginationElement["calcitePaginationChange"]>;
}>;
export declare const CalcitePanel: import("@lit/react").ReactWebComponent<HTMLCalcitePanelElement & {
    class?: string;
}, {
    onCalcitePanelClose: EventName<HTMLCalcitePanelElement["calcitePanelClose"]>;
    onCalcitePanelScroll: EventName<HTMLCalcitePanelElement["calcitePanelScroll"]>;
    onCalcitePanelToggle: EventName<HTMLCalcitePanelElement["calcitePanelToggle"]>;
}>;
export declare const CalcitePopover: import("@lit/react").ReactWebComponent<HTMLCalcitePopoverElement & {
    class?: string;
}, {
    onCalcitePopoverBeforeClose: EventName<HTMLCalcitePopoverElement["calcitePopoverBeforeClose"]>;
    onCalcitePopoverBeforeOpen: EventName<HTMLCalcitePopoverElement["calcitePopoverBeforeOpen"]>;
    onCalcitePopoverClose: EventName<HTMLCalcitePopoverElement["calcitePopoverClose"]>;
    onCalcitePopoverOpen: EventName<HTMLCalcitePopoverElement["calcitePopoverOpen"]>;
}>;
export declare const CalciteProgress: import("@lit/react").ReactWebComponent<HTMLCalciteProgressElement & {
    class?: string;
}, {}>;
export declare const CalciteRadioButton: import("@lit/react").ReactWebComponent<HTMLCalciteRadioButtonElement & {
    class?: string;
}, {
    onCalciteRadioButtonChange: EventName<HTMLCalciteRadioButtonElement["calciteRadioButtonChange"]>;
}>;
export declare const CalciteRadioButtonGroup: import("@lit/react").ReactWebComponent<HTMLCalciteRadioButtonGroupElement & {
    class?: string;
}, {
    onCalciteRadioButtonGroupChange: EventName<HTMLCalciteRadioButtonGroupElement["calciteRadioButtonGroupChange"]>;
}>;
export declare const CalciteRating: import("@lit/react").ReactWebComponent<HTMLCalciteRatingElement & {
    class?: string;
}, {
    onCalciteRatingChange: EventName<HTMLCalciteRatingElement["calciteRatingChange"]>;
}>;
export declare const CalciteScrim: import("@lit/react").ReactWebComponent<HTMLCalciteScrimElement & {
    class?: string;
}, {}>;
export declare const CalciteSegmentedControl: import("@lit/react").ReactWebComponent<HTMLCalciteSegmentedControlElement & {
    class?: string;
}, {
    onCalciteSegmentedControlChange: EventName<HTMLCalciteSegmentedControlElement["calciteSegmentedControlChange"]>;
}>;
export declare const CalciteSegmentedControlItem: import("@lit/react").ReactWebComponent<HTMLCalciteSegmentedControlItemElement & {
    class?: string;
}, {}>;
export declare const CalciteSelect: import("@lit/react").ReactWebComponent<HTMLCalciteSelectElement & {
    class?: string;
}, {
    onCalciteSelectChange: EventName<HTMLCalciteSelectElement["calciteSelectChange"]>;
}>;
export declare const CalciteSheet: import("@lit/react").ReactWebComponent<HTMLCalciteSheetElement & {
    class?: string;
}, {
    onCalciteSheetBeforeClose: EventName<HTMLCalciteSheetElement["calciteSheetBeforeClose"]>;
    onCalciteSheetBeforeOpen: EventName<HTMLCalciteSheetElement["calciteSheetBeforeOpen"]>;
    onCalciteSheetClose: EventName<HTMLCalciteSheetElement["calciteSheetClose"]>;
    onCalciteSheetOpen: EventName<HTMLCalciteSheetElement["calciteSheetOpen"]>;
}>;
export declare const CalciteShell: import("@lit/react").ReactWebComponent<HTMLCalciteShellElement & {
    class?: string;
}, {}>;
export declare const CalciteShellCenterRow: import("@lit/react").ReactWebComponent<HTMLCalciteShellCenterRowElement & {
    class?: string;
}, {}>;
export declare const CalciteShellPanel: import("@lit/react").ReactWebComponent<HTMLCalciteShellPanelElement & {
    class?: string;
}, {}>;
export declare const CalciteSlider: import("@lit/react").ReactWebComponent<HTMLCalciteSliderElement & {
    class?: string;
}, {
    onCalciteSliderChange: EventName<HTMLCalciteSliderElement["calciteSliderChange"]>;
    onCalciteSliderInput: EventName<HTMLCalciteSliderElement["calciteSliderInput"]>;
}>;
export declare const CalciteSortHandle: import("@lit/react").ReactWebComponent<HTMLCalciteSortHandleElement & {
    class?: string;
}, {
    onCalciteSortHandleBeforeClose: EventName<HTMLCalciteSortHandleElement["calciteSortHandleBeforeClose"]>;
    onCalciteSortHandleBeforeOpen: EventName<HTMLCalciteSortHandleElement["calciteSortHandleBeforeOpen"]>;
    onCalciteSortHandleClose: EventName<HTMLCalciteSortHandleElement["calciteSortHandleClose"]>;
    onCalciteSortHandleMove: EventName<HTMLCalciteSortHandleElement["calciteSortHandleMove"]>;
    onCalciteSortHandleOpen: EventName<HTMLCalciteSortHandleElement["calciteSortHandleOpen"]>;
    onCalciteSortHandleReorder: EventName<HTMLCalciteSortHandleElement["calciteSortHandleReorder"]>;
}>;
export declare const CalciteSortableList: import("@lit/react").ReactWebComponent<HTMLCalciteSortableListElement & {
    class?: string;
}, {
    onCalciteListOrderChange: EventName<HTMLCalciteSortableListElement["calciteListOrderChange"]>;
}>;
export declare const CalciteSplitButton: import("@lit/react").ReactWebComponent<HTMLCalciteSplitButtonElement & {
    class?: string;
}, {
    onCalciteSplitButtonPrimaryClick: EventName<HTMLCalciteSplitButtonElement["calciteSplitButtonPrimaryClick"]>;
    onCalciteSplitButtonSecondaryClick: EventName<HTMLCalciteSplitButtonElement["calciteSplitButtonSecondaryClick"]>;
}>;
export declare const CalciteStack: import("@lit/react").ReactWebComponent<HTMLCalciteStackElement & {
    class?: string;
}, {}>;
export declare const CalciteStepper: import("@lit/react").ReactWebComponent<HTMLCalciteStepperElement & {
    class?: string;
}, {
    onCalciteStepperChange: EventName<HTMLCalciteStepperElement["calciteStepperChange"]>;
    onCalciteStepperItemChange: EventName<HTMLCalciteStepperElement["calciteStepperItemChange"]>;
}>;
export declare const CalciteStepperItem: import("@lit/react").ReactWebComponent<HTMLCalciteStepperItemElement & {
    class?: string;
}, {
    onCalciteStepperItemSelect: EventName<HTMLCalciteStepperItemElement["calciteStepperItemSelect"]>;
}>;
export declare const CalciteSwitch: import("@lit/react").ReactWebComponent<HTMLCalciteSwitchElement & {
    class?: string;
}, {
    onCalciteSwitchChange: EventName<HTMLCalciteSwitchElement["calciteSwitchChange"]>;
}>;
export declare const CalciteTab: import("@lit/react").ReactWebComponent<HTMLCalciteTabElement & {
    class?: string;
}, {}>;
export declare const CalciteTabNav: import("@lit/react").ReactWebComponent<HTMLCalciteTabNavElement & {
    class?: string;
}, {
    onCalciteTabChange: EventName<HTMLCalciteTabNavElement["calciteTabChange"]>;
}>;
export declare const CalciteTabTitle: import("@lit/react").ReactWebComponent<HTMLCalciteTabTitleElement & {
    class?: string;
}, {
    onCalciteTabsActivate: EventName<HTMLCalciteTabTitleElement["calciteTabsActivate"]>;
    onCalciteTabsClose: EventName<HTMLCalciteTabTitleElement["calciteTabsClose"]>;
}>;
export declare const CalciteTable: import("@lit/react").ReactWebComponent<HTMLCalciteTableElement & {
    class?: string;
}, {
    onCalciteTablePageChange: EventName<HTMLCalciteTableElement["calciteTablePageChange"]>;
    onCalciteTableSelect: EventName<HTMLCalciteTableElement["calciteTableSelect"]>;
}>;
export declare const CalciteTableCell: import("@lit/react").ReactWebComponent<HTMLCalciteTableCellElement & {
    class?: string;
}, {}>;
export declare const CalciteTableHeader: import("@lit/react").ReactWebComponent<HTMLCalciteTableHeaderElement & {
    class?: string;
}, {}>;
export declare const CalciteTableRow: import("@lit/react").ReactWebComponent<HTMLCalciteTableRowElement & {
    class?: string;
}, {
    onCalciteTableRowSelect: EventName<HTMLCalciteTableRowElement["calciteTableRowSelect"]>;
}>;
export declare const CalciteTabs: import("@lit/react").ReactWebComponent<HTMLCalciteTabsElement & {
    class?: string;
}, {}>;
export declare const CalciteTextArea: import("@lit/react").ReactWebComponent<HTMLCalciteTextAreaElement & {
    class?: string;
}, {
    onCalciteTextAreaChange: EventName<HTMLCalciteTextAreaElement["calciteTextAreaChange"]>;
    onCalciteTextAreaInput: EventName<HTMLCalciteTextAreaElement["calciteTextAreaInput"]>;
}>;
export declare const CalciteTile: import("@lit/react").ReactWebComponent<HTMLCalciteTileElement & {
    class?: string;
}, {
    onCalciteTileSelect: EventName<HTMLCalciteTileElement["calciteTileSelect"]>;
}>;
export declare const CalciteTileGroup: import("@lit/react").ReactWebComponent<HTMLCalciteTileGroupElement & {
    class?: string;
}, {
    onCalciteTileGroupSelect: EventName<HTMLCalciteTileGroupElement["calciteTileGroupSelect"]>;
}>;
export declare const CalciteTileSelect: import("@lit/react").ReactWebComponent<HTMLCalciteTileSelectElement & {
    class?: string;
}, {
    onCalciteTileSelectChange: EventName<HTMLCalciteTileSelectElement["calciteTileSelectChange"]>;
}>;
export declare const CalciteTileSelectGroup: import("@lit/react").ReactWebComponent<HTMLCalciteTileSelectGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteTimePicker: import("@lit/react").ReactWebComponent<HTMLCalciteTimePickerElement & {
    class?: string;
}, {
    onCalciteTimePickerChange: EventName<HTMLCalciteTimePickerElement["calciteTimePickerChange"]>;
}>;
export declare const CalciteTip: import("@lit/react").ReactWebComponent<HTMLCalciteTipElement & {
    class?: string;
}, {
    onCalciteTipDismiss: EventName<HTMLCalciteTipElement["calciteTipDismiss"]>;
}>;
export declare const CalciteTipGroup: import("@lit/react").ReactWebComponent<HTMLCalciteTipGroupElement & {
    class?: string;
}, {}>;
export declare const CalciteTipManager: import("@lit/react").ReactWebComponent<HTMLCalciteTipManagerElement & {
    class?: string;
}, {
    onCalciteTipManagerClose: EventName<HTMLCalciteTipManagerElement["calciteTipManagerClose"]>;
}>;
export declare const CalciteTooltip: import("@lit/react").ReactWebComponent<HTMLCalciteTooltipElement & {
    class?: string;
}, {
    onCalciteTooltipBeforeClose: EventName<HTMLCalciteTooltipElement["calciteTooltipBeforeClose"]>;
    onCalciteTooltipBeforeOpen: EventName<HTMLCalciteTooltipElement["calciteTooltipBeforeOpen"]>;
    onCalciteTooltipClose: EventName<HTMLCalciteTooltipElement["calciteTooltipClose"]>;
    onCalciteTooltipOpen: EventName<HTMLCalciteTooltipElement["calciteTooltipOpen"]>;
}>;
export declare const CalciteTree: import("@lit/react").ReactWebComponent<HTMLCalciteTreeElement & {
    class?: string;
}, {
    onCalciteTreeSelect: EventName<HTMLCalciteTreeElement["calciteTreeSelect"]>;
}>;
export declare const CalciteTreeItem: import("@lit/react").ReactWebComponent<HTMLCalciteTreeItemElement & {
    class?: string;
}, {}>;
